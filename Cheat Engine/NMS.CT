<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>7989</ID>
      <Description>"[Old]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1941</ID>
          <Description>"Inf Health"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhealth,NMS.exe,44 01 B6 08 01 00 00)
registersymbol(infhealth)

infhealth:
  db 90 90 90 90 90 90 90
[DISABLE]

infhealth:
  db 44 01 B6 08 01 00 00

unregistersymbol(infhealth)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1879</ID>
          <Description>"Inf Sprint"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infstamina,NMS.exe,F3 0F 11 8F B4 26 00 00 44 0F 2F D9 0F)
registersymbol(infstamina)

infstamina:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infstamina:
  db F3 0F 11 8F B4 26 00 00

unregistersymbol(infstamina)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1883</ID>
          <Description>"Inf Jetpack"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infjp,NMS.exe,F3 0F 11 87 F4 16 00 00 44)
registersymbol(infjp)

infjp:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infjp:
  db F3 0F 11 87 F4 16 00 00

unregistersymbol(infjp)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1904</ID>
          <Description>"Inf Scanner"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(scanner,NMS.exe,89 59 10 89 59 38)
registersymbol(scanner)

scanner:
  db 90 90 90

[DISABLE]

scanner:
  db 89 59 10

unregistersymbol(scanner)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2149</ID>
          <Description>"Inf Life Support"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(ils,NMS.exe,89 ?? ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 44 ?? ?? ?? 72 ?? F3) // should be unique
registersymbol(ils)

ils:
  db 90 90 90

[DISABLE]

ils:
  db 89 48 18

unregistersymbol(ils)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1900</ID>
          <Description>"Inf Ammo"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infammo,NMS.exe,42 89 8C BF 58 11 00 00)
registersymbol(infammo)

infammo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infammo:
  db 42 89 8C BF 58 11 00 00

unregistersymbol(infammo)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1902</ID>
          <Description>"Inf Grenades"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infgrenades,NMS.exe,FF 8F 6C 11 00 00)
registersymbol(infgrenades)

infgrenades:
  db 90 90 90 90 90 90

[DISABLE]

infgrenades:
  db FF 8F 6C 11 00 00

unregistersymbol(infgrenades)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1906</ID>
          <Description>"Inf Mining Beam"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infmb,NMS.exe,29 45 18 01 9C BE 58 11 00 00)
registersymbol(infmb)

infmb:
  db 90 90 90

[DISABLE]

infmb:
  db 29 45 18

unregistersymbol(infmb)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7961</ID>
          <Description>"Inf Terrain Mapper"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(inftm,NMS.exe,29 43 18 8B 43 18)
registersymbol(inftm)

inftm:
  db 90 90 90

[DISABLE]

inftm:
  db 29 43 18

unregistersymbol(inftm)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7956</ID>
          <Description>"Inf Hazard Protection"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhaz,NMS.exe,F3 0F 58 D3 F3 0F 11 13)
registersymbol(infhaz)

infhaz:
  db 90 90 90 90

[DISABLE]

infhaz:
  db F3 0F 58 D3

unregistersymbol(infhaz)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1898</ID>
          <Description>"No Overheat"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(nmbo,NMS.exe,F3 0F 11 87 E0 10 00 00 41)
registersymbol(nmbo)

nmbo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

nmbo:
  db F3 0F 11 87 E0 10 00 00

unregistersymbol(nmbo)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1925</ID>
          <Description>"No Ship Overheat"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(nso,NMS.exe,F3 41 0F 11 8C 84 7C 0B 00 00)
registersymbol(nso)

nso:
  db 90 90 90 90 90 90 90 90 90 90

[DISABLE]

nso:
  db F3 41 0F 11 8C 84 7C 0B 00 00

unregistersymbol(nso)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1931</ID>
          <Description>"Inf Hyperdrive"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhd,NMS.exe,41 FF 4E 18 33 C0)
registersymbol(infhd)

infhd:
  db 90 90 90 90

[DISABLE]

infhd:
  db 41 FF 4E 18

unregistersymbol(infhd)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1907</ID>
          <Description>"Inf Phase Beam"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infpb,NMS.exe,89 4F 18 48 8B 6C 24 38)
registersymbol(infpb)

infpb:
  db 90 90 90

[DISABLE]

infpb:
  db 89 4F 18

unregistersymbol(infpb)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7974</ID>
          <Description>"Inf Launch Thrusters"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Date   : 2017-10-13
  Author : Squall8
}

[ENABLE]

aobscanmodule(inflt1,NMS.exe,89 * * * 89 * * 48 * * * * * * 48 * * 48 * * * * * * E8 * * * * 48 * * * * 48 * * * C3)
alloc(newmem,$1000,inflt1)

label(code)
label(return)
registersymbol(inflt1)
registersymbol(code)

aobscanmodule(inflt2,NMS.exe,8B * 41 * * * E9 * * * * 48 * * * * * * E9 * * * * 41)
alloc(newmem2,$1000,inflt2)

label(code2)
label(return2)
registersymbol(inflt2)
registersymbol(code2)

newmem:
  readmem(inflt1,4)
  jmp return

code:
  readmem(inflt1,7)
  jmp return

newmem2:
  readmem(inflt2,2)
  jmp return2

code2:
  readmem(inflt2,6)
  jmp return2

inflt1:
  jmp newmem
  nop
  nop
return:

inflt2:
  jmp newmem2
  nop
return2:

[DISABLE]

inflt1:
  readmem(code,7)

unregistersymbol(inflt1)
unregistersymbol(code)
dealloc(newmem)

inflt2:
  readmem(code2,6)

unregistersymbol(inflt2)
unregistersymbol(code2)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1926</ID>
          <Description>"Inf Pulse Engine"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(ipe,NMS.exe,41 FF 4E 18 41 89 9D C4 00 00 00)
registersymbol(ipe)

ipe:
  db 90 90 90 90

[DISABLE]

ipe:
  db 41 FF 4E 18

unregistersymbol(ipe)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1942</ID>
          <Description>"Inf Deflector Shield"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infds,NMS.exe,44 01 70 18 45 33 C9 48)
registersymbol(infds)

infds:
  db 90 90 90 90

[DISABLE]

infds:
  db 44 01 70 18

unregistersymbol(infds)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1947</ID>
          <Description>"Inf Exocraft Boost"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(infeb,NMS.exe,F3 0F 11 87 D4 05 00 00 44)
registersymbol(infeb)

infeb:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infeb:
  db F3 0F 11 87 D4 05 00 00

unregistersymbol(infeb)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1948</ID>
          <Description>"Inf Fusion Engine"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(ife,NMS.exe,29 58 18 8B 48 18)
registersymbol(ife)

ife:
  db 90 90 90

[DISABLE]

ife:
  db 29 58 18

unregistersymbol(ife)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2152</ID>
          <Description>"Inf Exocraft Mining Laser"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(eml,NMS.exe,41 ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? E9 ?? ?? ?? ?? 83)
registersymbol(eml)

eml:
  db 90 90 90 90

[DISABLE]

eml:
  db 41 89 4E 18

unregistersymbol(eml)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2151</ID>
          <Description>"Inf Exocraft Cannon"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(emc,NMS.exe,41 ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? ?? ?? ?? E9)
registersymbol(emc)

emc:
  db 90 90 90 90

[DISABLE]

emc:
  db 41 89 4E 18

unregistersymbol(emc)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2153</ID>
          <Description>"Summon Exocraft Anywhere"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(summon1,NMS.exe,74 ?? 48 ?? ?? ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 ?? ?? 75 ?? 48)
registersymbol(summon1)

summon1:
  db 90 90

aobscanmodule(summon2,NMS.exe,74 ?? 49 ?? ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 ?? ?? 75 ?? 48 ?? ?? ?? ?? ?? ?? 80)
registersymbol(summon2)

summon2:
  db 90 90

aobscanmodule(summon3,NMS.exe,74 ?? 48 ?? ?? ?? ?? ?? ?? E8 ?? ?? ?? ?? 48 ?? ?? 75 ?? 48 ?? ?? ?? ?? ?? ?? 38)
registersymbol(summon3)

summon3:
  db 90 90
[DISABLE]

summon1:
  db 74 64

summon2:
  db 74 26

summon3:
  db 74 2B

unregistersymbol(summon1)
unregistersymbol(summon2)
unregistersymbol(summon3)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1973</ID>
          <Description>"Money Pointer/Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(money,NMS.exe,44 8B A8 74 07 00 00)
aobscanmodule(monmul,NMS.exe,03 C0 33 C0 48 89 44 24 20 44 89 81 14 01 00 00)

alloc(newmem,$1000,"NMS.exe"+8A4FBC)
alloc(newmem,$1000,"NMS.exe"+77AD15)

label(code)
label(return)
label(moneyp)
label(code2)
label(return2)
label(monmult)
label(multe)

registersymbol(money)
registersymbol(moneyp)
registersymbol(monmul)
registersymbol(monmult)
registersymbol(multe)

newmem:

code:
  mov [moneyp],rax
  mov r13d,[rax+00000774]
  jmp return

newmem2:
  cmp [multe],1
  jne code2
  sub r8d,dword [rcx+00000114]
  imul r8d,[monmult]
  add [rcx+00000114],r8d
  jmp return2

code2:
  mov [rcx+00000114],r8d
  jmp return2

moneyp:
  dq 0

monmult:
  dq 2

multe:
  dq 0

money:
  jmp code
  nop
  nop
return:

monmul+09:
  jmp newmem2
  nop
  nop
return2:

[DISABLE]

money:
  db 44 8B A8 74 07 00 00

monmul+09:
  db 44 89 81 14 01 00 00

unregistersymbol(money)
unregistersymbol(moneyp)
dealloc(newmem)
unregistersymbol(monmul)
unregistersymbol(monmult)
dealloc(newmem2)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1974</ID>
              <Description>"Units"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>moneyp</Address>
              <Offsets>
                <Offset>774</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2043</ID>
              <Description>"Enable Multiplier"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Disable
1:Enable
</DropDownList>
              <VariableType>4 Bytes</VariableType>
              <Address>multe</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>7973</ID>
                  <Description>"Multiplier"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>monmult</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2040</ID>
          <Description>"Element Gathering Multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(multi,NMS.exe,44 01 78 18 E9 88 00 00 00)
alloc(newmem,$1000,"NMS.exe"+77EA88)

label(code)
label(return)
label(mulval)

newmem:
  imul r15d,[mulval]

code:
  add [rax+18],r15d
  jmp NMS.AK::WriteBytesMem::Count+F61A9
  jmp return

mulval:
  dq 2

multi:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(multi)
registersymbol(mulval)

[DISABLE]

multi:
  db 44 01 78 18 E9 88 00 00 00

unregistersymbol(multi)
unregistersymbol(mulval)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2041</ID>
              <Description>"Multiplier"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>mulval</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2048</ID>
          <Description>"Stack Modifiers"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>00FF00</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2047</ID>
              <Description>"Element Stack"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(moreINV,NMS.exe,69 8E C8 00 00 00 FA 00 00 00) // should be unique
registersymbol(moreINV)
aobscanmodule(maxSlotReset,NMS.exe,41 69 86 C8 00 00 00 FA 00 00 00) // should be unique
registersymbol(maxSlotReset)
aobscanmodule(TransferSize,NMS.exe,69 86 C8 00 00 00 FA 00 00 00) // should be unique
registersymbol(TransferSize)

moreINV:
  imul ecx,[rsi+000000C8],7359400
maxSlotReset:
  imul eax,[r14+000000C8],7359400
TransferSize:
  imul eax,[rsi+000000C8],7359400

[DISABLE]

moreINV:
  db 69 8E C8 00 00 00 FA 00 00 00
unregistersymbol(moreINV)

maxSlotReset:
  db 41 69 86 C8 00 00 00 FA 00 00 00
unregistersymbol(maxSlotReset)

TransferSize:
  db 69 86 C8 00 00 00 FA 00 00 00
unregistersymbol(TransferSize)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2053</ID>
              <Description>"Product Stack"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(SmallSlotStacks,NMS.exe,41 8B 86 CC 00 00 00 8B) // should be unique
registersymbol(SmallSlotStacks)

SmallSlotStacks:
  db 6b c0 66 41 89 04 06

[DISABLE]
SmallSlotStacks:
  db 41 8B 86 CC 00 00 00
unregistersymbol(SmallSlotStacks)

{
imul eax,eax,66
mov [r14+rax],eax

original:
mov eax[r14+000000CC]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1963</ID>
          <Description>"Bypass Locks"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(bypass,NMS.exe,80 ?? ?? ?? ?? ?? ?? 48 ?? ?? 75 ?? 8B ?? ?? ?? ?? ?? 85 ?? 74 ?? 83)
registersymbol(bypass)

bypass:
  db 90 90 90 90 90 90 90

[DISABLE]

bypass:
  db 80 3D 5C E3 C5 00 00

unregistersymbol(bypass)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7980</ID>
          <Description>"Aquire All Glyphs"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Date   : 2017-11-15
  Author : Squall8
}

[ENABLE]

aobscanmodule(glyphs,NMS.exe,8B 8B EC 34 00 00)
alloc(newmem,$1000,glyphs)

label(code)
label(return)

newmem:
  mov [rbx+000034EC],10

code:
  mov ecx,[rbx+000034EC]
  jmp return

glyphs:
  jmp newmem
  nop
return:
registersymbol(glyphs)

[DISABLE]

glyphs:
  db 8B 8B EC 34 00 00

unregistersymbol(glyphs)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7987</ID>
              <Description>"Activate When Aquiring A Glyph. Deactivate After."</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1857</ID>
          <Description>"Unlock All Technology Recipes"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(technology,NMS.exe,49 8B 9E D8 3A 00 00) // should be unique
alloc(newmem,$1000,technology)
alloc(cGcTechnologyTable,1024,technology)
label(cGcTechnologyTable_end)
registersymbol(cGcTechnologyTable)
registersymbol(cGcTechnologyTable_end)

label(code)
label(return)

newmem:

code:
  mov rbx,cGcTechnologyTable
  mov rdi,cGcTechnologyTable_end
  jmp return

technology:
  jmp code
  nop
  nop
return:
registersymbol(technology)

cGcTechnologyTable+000:
db 'PROTECT'
cGcTechnologyTable+010:
db 'ENERGY'
cGcTechnologyTable+020:
db 'JET1'
cGcTechnologyTable+030:
db 'JETBOOST1'
cGcTechnologyTable+040:
db 'JETBOOST2'
cGcTechnologyTable+050:
db 'JETBOOST3'
cGcTechnologyTable+060:
db 'UNW1'
cGcTechnologyTable+070:
db 'UNW2'
cGcTechnologyTable+080:
db 'UNW3'
cGcTechnologyTable+090:
db 'RAD1'
cGcTechnologyTable+0A0:
db 'RAD2'
cGcTechnologyTable+0B0:
db 'RAD3'
cGcTechnologyTable+0C0:
db 'TOX1'
cGcTechnologyTable+0D0:
db 'TOX2'
cGcTechnologyTable+0E0:
db 'TOX3'
cGcTechnologyTable+0F0:
db 'COLD1'
cGcTechnologyTable+100:
db 'COLD2'
cGcTechnologyTable+110:
db 'COLD3'
cGcTechnologyTable+120:
db 'HOT1'
cGcTechnologyTable+130:
db 'HOT2'
cGcTechnologyTable+140:
db 'HOT3'
cGcTechnologyTable+150:
db 'SHIELDBOOST1'
cGcTechnologyTable+160:
db 'SHIELDBOOST2'
cGcTechnologyTable+170:
db 'SHIELDBOOST3'
cGcTechnologyTable+180:
db 'STAM1'
cGcTechnologyTable+190:
db 'STAM2'
cGcTechnologyTable+1A0:
db 'STAM3'
cGcTechnologyTable+1B0:
db 'ENERGYBOOST1'
cGcTechnologyTable+1C0:
db 'ENERGYBOOST2'
cGcTechnologyTable+1D0:
db 'ARMOUR1'
cGcTechnologyTable+1E0:
db 'ARMOUR2'
cGcTechnologyTable+1F0:
db 'ARMOUR3'
cGcTechnologyTable+200:
db 'SHIPLAS1'
cGcTechnologyTable+210:
db 'SHIPLASCOOL1'
cGcTechnologyTable+220:
db 'SHIPLASCOOL2'
cGcTechnologyTable+230:
db 'SHIPLASCOOL3'
cGcTechnologyTable+240:
db 'SHIPLDMG1'
cGcTechnologyTable+250:
db 'SHIPLDMG2'
cGcTechnologyTable+260:
db 'SHIPLDMG3'
cGcTechnologyTable+270:
db 'SHIPGUN1'
cGcTechnologyTable+280:
db 'SHIPGUNCOOL1'
cGcTechnologyTable+290:
db 'SHIPGUNCOOL2'
cGcTechnologyTable+2A0:
db 'SHIPGUNCOOL3'
cGcTechnologyTable+2B0:
db 'SHIPGUNRATE1'
cGcTechnologyTable+2C0:
db 'SHIPGUNRATE2'
cGcTechnologyTable+2D0:
db 'SHIPGUNRATE3'
cGcTechnologyTable+2E0:
db 'SHIPGDMG1'
cGcTechnologyTable+2F0:
db 'SHIPGDMG2'
cGcTechnologyTable+300:
db 'SHIPGDMG3'
cGcTechnologyTable+310:
db 'SHIPSHIELD'
cGcTechnologyTable+320:
db 'SHIPSHLDBOOST1'
cGcTechnologyTable+330:
db 'SHIPSHLDBOOST2'
cGcTechnologyTable+340:
db 'SHIPSHLDBOOST3'
cGcTechnologyTable+350:
db 'SHIPJUMP1'
cGcTechnologyTable+360:
db 'SHIPJUMP2'
cGcTechnologyTable+370:
db 'SHIPJUMP3'
cGcTechnologyTable+380:
db 'HYPERDRIVE'
cGcTechnologyTable+390:
db 'HDRIVEBOOST1'
cGcTechnologyTable+3A0:
db 'HDRIVEBOOST2'
cGcTechnologyTable+3B0:
db 'HDRIVEBOOST3'
cGcTechnologyTable+3C0:
db 'LAUNCHER'
cGcTechnologyTable+3D0:
db 'PHOTONIX_CORE'
cGcTechnologyTable+3E0:
db 'LASER'
cGcTechnologyTable+3F0:
db 'RAILGUN'
cGcTechnologyTable+400:
db 'LASMINERAD1'
cGcTechnologyTable+410:
db 'LASMINERAD2'
cGcTechnologyTable+420:
db 'LASMINERAD3'
cGcTechnologyTable+430:
db 'LASMINESPEED1'
cGcTechnologyTable+440:
db 'LASMINESPEED2'
cGcTechnologyTable+450:
db 'LASMINESPEED3'
cGcTechnologyTable+460:
db 'LASCOOL1'
cGcTechnologyTable+470:
db 'LASCOOL2'
cGcTechnologyTable+480:
db 'LASCOOL3'
cGcTechnologyTable+490:
db 'LASDMG1'
cGcTechnologyTable+4A0:
db 'LASDMG2'
cGcTechnologyTable+4B0:
db 'LASDMG3'
cGcTechnologyTable+4C0:
db 'LASDMG4'
cGcTechnologyTable+4D0:
db 'BOLT'
cGcTechnologyTable+4E0:
db 'SHOTGUN'
cGcTechnologyTable+4F0:
db 'SMG'
cGcTechnologyTable+500:
db 'BOLTHOMING'
cGcTechnologyTable+510:
db 'BOLTDMG1'
cGcTechnologyTable+520:
db 'BOLTDMG2'
cGcTechnologyTable+530:
db 'BOLTDMG3'
cGcTechnologyTable+540:
db 'BOLTDMG4'
cGcTechnologyTable+550:
db 'BOLTRATE1'
cGcTechnologyTable+560:
db 'BOLTRATE2'
cGcTechnologyTable+570:
db 'BOLTRATE3'
cGcTechnologyTable+580:
db 'BOLTCLIP1'
cGcTechnologyTable+590:
db 'BOLTCLIP2'
cGcTechnologyTable+5A0:
db 'BOLTCLIP3'
cGcTechnologyTable+5B0:
db 'BOLTREL1'
cGcTechnologyTable+5C0:
db 'BOLTREL2'
cGcTechnologyTable+5D0:
db 'BOLTREL3'
cGcTechnologyTable+5E0:
db 'BOLTSTAB1'
cGcTechnologyTable+5F0:
db 'BOLTSTAB2'
cGcTechnologyTable+600:
db 'BOLTSTAB3'
cGcTechnologyTable+610:
db 'BOLTBOUNCE1'
cGcTechnologyTable+620:
db 'BOLTBOUNCE2'
cGcTechnologyTable+630:
db 'BOLTBOUNCE3'
cGcTechnologyTable+640:
db 'GRENADE'
cGcTechnologyTable+650:
db 'GRENHOMING1'
cGcTechnologyTable+660:
db 'GRENBOUNCE1'
cGcTechnologyTable+670:
db 'GRENBOUNCE2'
cGcTechnologyTable+680:
db 'GRENSPEED1'
cGcTechnologyTable+690:
db 'GRENSPEED2'
cGcTechnologyTable+6A0:
db 'GRENRAD1'
cGcTechnologyTable+6B0:
db 'GRENRAD2'
cGcTechnologyTable+6C0:
db 'GRENDMG1'
cGcTechnologyTable+6D0:
db 'GRENDMG2'
cGcTechnologyTable+6E0:
db 'GRENDMG3'
cGcTechnologyTable+6F0:
db 'SCANBINOC1'
cGcTechnologyTable+700:
db 'SCAN1'
cGcTechnologyTable+710:
db 'SCAN2'
cGcTechnologyTable+720:
db 'SCAN3'
cGcTechnologyTable+730:
db 'BOLT_SM'
cGcTechnologyTable+740:
db 'POWERGLOVE'
cGcTechnologyTable+750:
db 'SHIPPLASMA'
cGcTechnologyTable+760:
db 'SHIPMINIGUN'
cGcTechnologyTable+770:
db 'SHIPSHOTGUN'
cGcTechnologyTable+780:
db 'STRONGLASER'
cGcTechnologyTable+790:
db 'SHIPSGUNDMG1'
cGcTechnologyTable+7A0:
db 'SHIPSGUNDMG2'
cGcTechnologyTable+7B0:
db 'SHIPSGUNDMG3'
cGcTechnologyTable+7C0:
db 'SHIPSGUNCOOL1'
cGcTechnologyTable+7D0:
db 'SHIPSGUNCOOL2'
cGcTechnologyTable+7E0:
db 'SHIPSGUNCOOL3'
cGcTechnologyTable+7F0:
db 'SHIPSGUNRATE1'
cGcTechnologyTable+800:
db 'SHIPSGUNRATE2'
cGcTechnologyTable+810:
db 'SHIPSGUNRATE3'
cGcTechnologyTable+820:
db 'SHIPBLOBDMG1'
cGcTechnologyTable+830:
db 'SHIPBLOBDMG2'
cGcTechnologyTable+840:
db 'SHIPBLOBDMG3'
cGcTechnologyTable+850:
db 'SHIPBLOBRATE1'
cGcTechnologyTable+860:
db 'SHIPBLOBRATE2'
cGcTechnologyTable+870:
db 'SHIPBLOBRATE3'
cGcTechnologyTable+880:
db 'SHIPBLOBCOOL1'
cGcTechnologyTable+890:
db 'SHIPBLOBCOOL2'
cGcTechnologyTable+8A0:
db 'SHIPBLOBCOOL3'
cGcTechnologyTable+8B0:
db 'SHIPMGUNDMG1'
cGcTechnologyTable+8C0:
db 'SHIPMGUNDMG2'
cGcTechnologyTable+8D0:
db 'SHIPMGUNDMG3'
cGcTechnologyTable+8E0:
db 'SHIPMGUNRATE1'
cGcTechnologyTable+8F0:
db 'SHIPMGUNRATE2'
cGcTechnologyTable+900:
db 'SHIPMGUNRATE3'
cGcTechnologyTable+910:
db 'SHIPMGUNCOOL1'
cGcTechnologyTable+920:
db 'SHIPMGUNCOOL2'
cGcTechnologyTable+930:
db 'SHIPMGUNCOOL3'
cGcTechnologyTable+940:
db 'VEHICLE_ENGINE'
cGcTechnologyTable+950:
db 'VEHICLE_SCAN'
cGcTechnologyTable+960:
db 'VEHICLE_SCAN1'
cGcTechnologyTable+970:
db 'VEHICLE_SCAN2'
cGcTechnologyTable+980:
db 'VEHICLE_LASER'
cGcTechnologyTable+990:
db 'VEHICLE_LASER1'
cGcTechnologyTable+9A0:
db 'VEHICLE_LASER2'
cGcTechnologyTable+9B0:
db 'VEHICLE_LASER3'
cGcTechnologyTable+9C0:
db 'VEHICLE_GUN'
cGcTechnologyTable+9D0:
db 'VEHICLE_GUN1'
cGcTechnologyTable+9E0:
db 'VEHICLE_BOOST'
cGcTechnologyTable+9F0:
db 'VEHICLE_BOOST1'
cGcTechnologyTable+A00:
db 'VEHICLE_BOOST2'
cGcTechnologyTable+A10:
db 'VEHICLE_BOOST3'
cGcTechnologyTable+A20:
db 'RAILDMG1'
cGcTechnologyTable+A30:
db 'RAILDMG2'
cGcTechnologyTable+A40:
db 'RAILDMG3'
cGcTechnologyTable+A50:
db 'RAILMINE1'
cGcTechnologyTable+A60:
db 'RAILMINE2'
cGcTechnologyTable+A70:
db 'RAILMINE3'
cGcTechnologyTable+A80:
db 'RAILCOOL1'
cGcTechnologyTable+A90:
db 'RAILCOOL2'
cGcTechnologyTable+AA0:
db 'SMGDMG1'
cGcTechnologyTable+AB0:
db 'SMGDMG2'
cGcTechnologyTable+AC0:
db 'SMGDMG3'
cGcTechnologyTable+AD0:
db 'SMGREL1'
cGcTechnologyTable+AE0:
db 'SMGREL2'
cGcTechnologyTable+AF0:
db 'SMGREL3'
cGcTechnologyTable+B00:
db 'SMGACC1'
cGcTechnologyTable+B10:
db 'SMGACC2'
cGcTechnologyTable+B20:
db 'SMGACC3'
cGcTechnologyTable+B30:
db 'SHOTGUNDMG1'
cGcTechnologyTable+B40:
db 'SHOTGUNDMG2'
cGcTechnologyTable+B50:
db 'SHOTGUNDMG3'
cGcTechnologyTable+B60:
db 'SHOTGUNCLIP1'
cGcTechnologyTable+B70:
db 'SHOTGUNCLIP2'
cGcTechnologyTable+B80:
db 'SHOTGUNCLIP3'
cGcTechnologyTable+B90:
db 'SHOTGUNREL1'
cGcTechnologyTable+BA0:
db 'SHOTGUNREL2'
cGcTechnologyTable+BB0:
db 'SHOTGUNREL3'
cGcTechnologyTable+BC0:
db 'SHOTGUNACC1'
cGcTechnologyTable+BD0:
db 'SHOTGUNACC2'
cGcTechnologyTable+BE0:
db 'SHOTGUNACC3'
cGcTechnologyTable+BF0:
db 'TERRAINEDITOR'
cGcTechnologyTable+C00:
db 'CRESCAN1'
cGcTechnologyTable+C10:
db 'CRESCAN2'
cGcTechnologyTable+C20:
db 'CRESCAN3'
cGcTechnologyTable+C30:
db 'FLORASCAN1'
cGcTechnologyTable+C40:
db 'FLORASCAN2'
cGcTechnologyTable+C50:
db 'FLORASCAN3'
cGcTechnologyTable+C60:
db 'SHIPSCAN_COMBAT'
cGcTechnologyTable+C70:
db 'SHIPSCAN_ECON'
cGcTechnologyTable+C80:
db 'F_HDRIVEBOOST1'
cGcTechnologyTable+C90:
db 'F_HDRIVEBOOST2'
cGcTechnologyTable+CA0:
db 'F_HDRIVEBOOST3'
cGcTechnologyTable+CB0:
db 'SHIPROCKETS'
cGcTechnologyTable+CC0:
cGcTechnologyTable_end:

[DISABLE]
technology:
  db 49 8B 9E D8 3A 00 00
unregistersymbol(technology)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+83E25E

"NMS.exe"+83E225: 4C 89 74 24 28           -  mov [rsp+28],r14
"NMS.exe"+83E22A: 4C 89 74 24 20           -  mov [rsp+20],r14
"NMS.exe"+83E22F: 83 FF 01                 -  cmp edi,01
"NMS.exe"+83E232: 0F 85 D6 02 00 00        -  jne NMS.exe+83E50E
"NMS.exe"+83E238: 0F 28 05 01 56 31 01     -  movaps xmm0,[NMS.exe+1B53840]
"NMS.exe"+83E23F: 0F 29 44 24 70           -  movaps [rsp+70],xmm0
"NMS.exe"+83E244: 48 8D 15 E5 21 07 01     -  lea rdx,[NMS.exe+18B0430]
"NMS.exe"+83E24B: E8 C0 62 FE FF           -  call NMS.exe+824510
"NMS.exe"+83E250: 4C 8B 35 D1 F1 7C 01     -  mov r14,[NMS.exe+200D428]
"NMS.exe"+83E257: 49 8B BE E0 3A 00 00     -  mov rdi,[r14+00003AE0]
// ---------- INJECTING HERE ----------
"NMS.exe"+83E25E: 49 8B 9E D8 3A 00 00     -  mov rbx,[r14+00003AD8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+83E265: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+83E268: 0F 84 38 04 00 00        -  je NMS.exe+83E6A6
"NMS.exe"+83E26E: 66 90                    -  nop
"NMS.exe"+83E270: 4C 8B C3                 -  mov r8,rbx
"NMS.exe"+83E273: 48 8D 54 24 60           -  lea rdx,[rsp+60]
"NMS.exe"+83E278: 49 8D 8E 40 01 00 00     -  lea rcx,[r14+00000140]
"NMS.exe"+83E27F: E8 0C D3 EF FF           -  call NMS.exe+73B590
"NMS.exe"+83E284: 4D 8D 86 40 01 00 00     -  lea r8,[r14+00000140]
"NMS.exe"+83E28B: 49 8B 96 40 01 00 00     -  mov rdx,[r14+00000140]
"NMS.exe"+83E292: 48 8D 4D C0              -  lea rcx,[rbp-40]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1856</ID>
          <Description>"Unlock All Product Recipes (Broken)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(products,NMS.exe,49 ?? ?? ?? ?? ?? ?? 48 ?? ?? ?? ?? ?? ?? ?? ?? 41 ?? ?? ?? ?? ?? 90 4C)
alloc(newmem,$1000,products)
alloc(cGcProductTable,1024,products)
label(cGcProductTable_end)
registersymbol(cGcProductTable)
registersymbol(cGcProductTable_end)

label(code)
label(return)

newmem:

code:
  mov rbx,cGcProductTable
  mov rdi,cGcProductTable_end
  jmp return

products:
  jmp code
  nop
  nop
return:
registersymbol(products)

cGcProductTable+000:
db 'ACCESS1'
cGcProductTable+010:
db 'ACCESS2'
cGcProductTable+020:
db 'ACCESS3'
cGcProductTable+030:
db 'ALBUMENPEARL'
cGcProductTable+040:
db 'ALLOY1'
cGcProductTable+050:
db 'ALLOY2'
cGcProductTable+060:
db 'ALLOY3'
cGcProductTable+070:
db 'ALLOY4'
cGcProductTable+080:
db 'ALLOY5'
cGcProductTable+090:
db 'ALLOY6'
cGcProductTable+0A0:
db 'ALLOY7'
cGcProductTable+0B0:
db 'AQUASPHERE'
cGcProductTable+0C0:
db 'CAVECUBE'
cGcProductTable+0D0:
db 'COMMODITY1'
cGcProductTable+0E0:
db 'COMMODITY2'
cGcProductTable+0F0:
db 'COMMODITY3'
cGcProductTable+100:
db 'COMMODITY4'
cGcProductTable+110:
db 'COMMODITY5'
cGcProductTable+120:
db 'COMMODITY6'
cGcProductTable+130:
db 'COMMODITY7'
cGcProductTable+140:
db 'CURIO1'
cGcProductTable+150:
db 'CURIO2'
cGcProductTable+160:
db 'CURIO3'
cGcProductTable+170:
db 'CURIO4'
cGcProductTable+180:
db 'CURIO5'
cGcProductTable+190:
db 'CURIO6'
cGcProductTable+1A0:
db 'CURIO7'
cGcProductTable+1B0:
db 'CURIO8'
cGcProductTable+1C0:
db 'CURIO9'
cGcProductTable+1D0:
db 'DRUGS1'
cGcProductTable+1E0:
db 'GRAVBALL'
cGcProductTable+1F0:
db 'GRENFUEL1'
cGcProductTable+200:
db 'HACK1'
cGcProductTable+210:
db 'HYPERFUEL1'
cGcProductTable+220:
db 'PRODFUEL1'
cGcProductTable+230:
db 'PRODFUEL2'
cGcProductTable+240:
db 'PRODFUEL3'
cGcProductTable+250:
db 'SACVENOM'
cGcProductTable+260:
db 'SENTINEL1'
cGcProductTable+270:
db 'SENTINEL2'
cGcProductTable+280:
db 'SHIELDFUEL1'
cGcProductTable+290:
db 'SHIELDFUEL2'
cGcProductTable+2A0:
db 'SHIELDFUEL3'
cGcProductTable+2B0:
db 'COM1'
cGcProductTable+2C0:
db 'COMRARE1'
cGcProductTable+2D0:
db 'COMUNCOMMON1'
cGcProductTable+2E0:
db 'FUEL1'
cGcProductTable+2F0:
db 'FUELRARE1'
cGcProductTable+300:
db 'FUELUNCOMMON1'
cGcProductTable+310:
db 'TECH1'
cGcProductTable+320:
db 'TECHRARE1'
cGcProductTable+330:
db 'TECHUNCOMMON1'
cGcProductTable+340:
db 'TRADEABLE1'
cGcProductTable+350:
db 'TRADEABLE2'
cGcProductTable+360:
db 'TRADEABLE3'
cGcProductTable+370:
db 'TRADEABLE4'
cGcProductTable+380:
db 'TRADEABLE5'
cGcProductTable+390:
db 'TRADEABLE6'
cGcProductTable+3A0:
db 'TRADEABLE7'
cGcProductTable+3B0:
db 'TRADEABLE8'
cGcProductTable+3C0:
db 'TRADEABLE9'
cGcProductTable+3D0:
db 'TRADEABLE10'
cGcProductTable+3E0:
db 'BATTERY'
cGcProductTable+3F0:
db 'CWIRE'
cGcProductTable+400:
db 'MPLATE'
cGcProductTable+410:
db 'GLASS'
cGcProductTable+420:
db 'SFIBRES'
cGcProductTable+430:
db 'ACID'
cGcProductTable+440:
db 'GEL'
cGcProductTable+450:
db 'LUBE'
cGcProductTable+460:
db 'EXPLOSIVE'
cGcProductTable+470:
db 'CBOARD'
cGcProductTable+480:
db 'BIOROOM'
cGcProductTable+490:
cGcProductTable_end:

[DISABLE]
products:
  db 49 8B 9E 50 2F 00 00
unregistersymbol(products)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+4FD208

"NMS.exe"+4FD1D0: 48 83 C3 10              -  add rbx,10
"NMS.exe"+4FD1D4: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+4FD1D7: 0F 85 03 FE FF FF        -  jne NMS.exe+4FCFE0
"NMS.exe"+4FD1DD: E9 01 01 00 00           -  jmp NMS.exe+4FD2E3
"NMS.exe"+4FD1E2: 0F 28 05 F7 B4 05 01     -  movaps xmm0,[NMS.exe+15586E0]
"NMS.exe"+4FD1E9: 0F 29 44 24 60           -  movaps [rsp+60],xmm0
"NMS.exe"+4FD1EE: 48 8D 15 53 15 E3 00     -  lea rdx,[NMS.exe+132E748]
"NMS.exe"+4FD1F5: E8 A6 02 F6 FF           -  call NMS.exe+45D4A0
"NMS.exe"+4FD1FA: 4C 8B 2D D7 95 11 01     -  mov r13,[NMS.exe+16167D8]
"NMS.exe"+4FD201: 49 8B BD C8 09 00 00     -  mov rdi,[r13+000009C8]
// ---------- INJECTING HERE ----------
"NMS.exe"+4FD208: 49 8B 9D C0 09 00 00     -  mov rbx,[r13+000009C0]
// ---------- DONE INJECTING  ----------
"NMS.exe"+4FD20F: 48 3B DF                 -  cmp rbx,rdi
"NMS.exe"+4FD212: 0F 84 D8 00 00 00        -  je NMS.exe+4FD2F0
"NMS.exe"+4FD218: BE 02 00 00 00           -  mov esi,00000002
"NMS.exe"+4FD21D: 45 33 E4                 -  xor r12d,r12d
"NMS.exe"+4FD220: 4C 8B C3                 -  mov r8,rbx
"NMS.exe"+4FD223: 48 8D 55 A0              -  lea rdx,[rbp-60]
"NMS.exe"+4FD227: 49 8D 8D 10 01 00 00     -  lea rcx,[r13+00000110]
"NMS.exe"+4FD22E: E8 CD C3 02 00           -  call NMS.exe+529600
"NMS.exe"+4FD233: 48 8B 45 A0              -  mov rax,[rbp-60]
"NMS.exe"+4FD237: 49 3B 85 10 01 00 00     -  cmp rax,[r13+00000110]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7954</ID>
          <Description>"Ignore Crafting Requirements"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(crafting1,NMS.exe,75 20 48 8B 48 08 48 39 4D E8)
registersymbol(crafting1)

crafting1:
  db 90 90

aobscanmodule(crafting2,NMS.exe,75 16 48 8B 48 10 48 39 4D F0)
registersymbol(crafting2)

crafting2:
  db 90 90

aobscanmodule(crafting3,NMS.exe,F0 75 0C 83 FA 01)
registersymbol(crafting3)

crafting3+01:
  db 90 90

aobscanmodule(crafting4,NMS.exe,7C 24 48 8B 5C 24 58)
registersymbol(crafting4)

crafting4:
  db 90 90

aobscanmodule(crafting5,NMS.exe,7C 1E 48 8B 5D B7)
registersymbol(crafting5)

crafting5:
  db 90 90

aobscanmodule(crafting6,NMS.exe,EB 03 03 70 18 48 8D 4C 24 58)
registersymbol(crafting6)

crafting6:
  db 90 90

[DISABLE]

crafting1:
  db 75 20

unregistersymbol(crafting1)

crafting2:
  db 75 16

unregistersymbol(crafting2)

crafting3+01:
  db 75 0C

unregistersymbol(crafting3)

crafting4:
  db 7C 24

unregistersymbol(crafting4)

crafting5:
  db 7C 1E

unregistersymbol(crafting5)

crafting6:
  db EB 03

unregistersymbol(crafting6)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1966</ID>
          <Description>"Inf Items"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(ics,NMS.exe,89 41 18 85 FF)
registersymbol(ics)

ics:
  db 90 90 90 90 90

[DISABLE]

ics:
  db 89 41 18 85 FF

unregistersymbol(ics)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7976</ID>
              <Description>"Ignore"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2017-10-14
  Author : Squall8
}

[ENABLE]

aobscanmodule(ii1,NMS.exe,F3 * * * 29 * * 48 * * * * * * 48)
alloc(newmem,$1000,ii1)

label(code)
label(return)

newmem:
  readmem(ii1,4)
  jmp return

code:
  readmem(ii1,7)
  jmp return

ii1:
  jmp newmem
  nop
  nop
return:
registersymbol(ii1)
registersymbol(code)

[DISABLE]

ii1:
  readmem(code,7)

unregistersymbol(ii1)
unregistersymbol(code)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2030</ID>
          <Description>"Build Anywhere"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(BUILD,NMS.exe,C6 81 F8 01 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+5F45AE)

label(code)
label(return)

newmem:

code:
  mov byte ptr [rcx+000001F8],00
  jmp return

BUILD:
  mov byte ptr [rcx+000001F8],01
return:
registersymbol(BUILD)

[DISABLE]

BUILD:
  db C6 81 F8 01 00 00 00

unregistersymbol(BUILD)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+5F45AE

"NMS.exe"+5F457A: 44 0F 29 B4 24 30 17 00 00     -  movaps [rsp+00001730],xmm14
"NMS.exe"+5F4583: 44 0F 29 BC 24 20 17 00 00     -  movaps [rsp+00001720],xmm15
"NMS.exe"+5F458C: 48 8B 05 6D 95 31 01           -  mov rax,[NMS.exe+190DB00]
"NMS.exe"+5F4593: 48 33 C4                       -  xor rax,rsp
"NMS.exe"+5F4596: 48 89 85 10 16 00 00           -  mov [rbp+00001610],rax
"NMS.exe"+5F459D: 4C 89 4D 10                    -  mov [rbp+10],r9
"NMS.exe"+5F45A1: 49 8B D8                       -  mov rbx,r8
"NMS.exe"+5F45A4: 48 89 5D F0                    -  mov [rbp-10],rbx
"NMS.exe"+5F45A8: 4C 8B EA                       -  mov r13,rdx
"NMS.exe"+5F45AB: 4C 8B E1                       -  mov r12,rcx
// ---------- INJECTING HERE ----------
"NMS.exe"+5F45AE: C6 81 F8 01 00 00 00           -  mov byte ptr [rcx+000001F8],00
// ---------- DONE INJECTING  ----------
"NMS.exe"+5F45B5: C7 81 F4 01 00 00 02 00 00 00  -  mov [rcx+000001F4],00000002
"NMS.exe"+5F45BF: C7 81 FC 01 00 00 03 00 00 00  -  mov [rcx+000001FC],00000003
"NMS.exe"+5F45C9: C7 81 40 02 00 00 03 00 00 00  -  mov [rcx+00000240],00000003
"NMS.exe"+5F45D3: 4C 8D B1 48 03 00 00           -  lea r14,[rcx+00000348]
"NMS.exe"+5F45DA: F2 41 0F 10 06                 -  movsd xmm0,[r14]
"NMS.exe"+5F45DF: F2 0F 11 85 B0 03 00 00        -  movsd [rbp+000003B0],xmm0
"NMS.exe"+5F45E7: 41 8B 46 08                    -  mov eax,[r14+08]
"NMS.exe"+5F45EB: 89 85 B8 03 00 00              -  mov [rbp+000003B8],eax
"NMS.exe"+5F45F1: 0F 28 05 58 A7 10 01           -  movaps xmm0,[NMS.exe+16FED50]
"NMS.exe"+5F45F8: 0F 29 85 60 03 00 00           -  movaps [rbp+00000360],xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1967</ID>
          <Description>"Always Have Conversation Item"</Description>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(ahci1,NMS.exe,75 16 48 8B 48 10 48 39 4E)
registersymbol(ahci1)

ahci1:
  db 90 90

aobscanmodule(ahci2,NMS.exe,75 0C 83 FA 01 75 04 FF C3)
registersymbol(ahci2)

ahci2:
  db 90 90

aobscanmodule(ahci3,NMS.exe,75 20 48 8B 48 08 48 39 4E)
registersymbol(ahci3)

ahci3:
  db 90 90

aobscanmodule(ahci4,NMS.exe,EB 03 03 58 18)
registersymbol(ahci4)

ahci4:
  db 90 90

[DISABLE]

ahci1:
  db 75 16

unregistersymbol(ahci1)

ahci2:
  db 75 0C

unregistersymbol(ahci2)

ahci3:
  db 75 20

unregistersymbol(ahci3)

ahci4:
  db EB 03

unregistersymbol(ahci4)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1979</ID>
          <Description>"Time Of Day"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(tod,NMS.exe,F3 44 0F 11 8F 14 03 00 00)
alloc(newmem,$1000,tod)

label(code)
label(return)
label(todp)

newmem:
  mov [todp],rdi

code:
  movss [rdi+00000314],xmm9
  jmp return

todp:
  dq 0

tod:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(tod)
registersymbol(todp)

[DISABLE]

tod:
  db F3 44 0F 11 8F 14 03 00 00

unregistersymbol(tod)
unregistersymbol(todp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1980</ID>
              <Description>"Time Of Day"</Description>
              <VariableType>Float</VariableType>
              <Address>todp</Address>
              <Offsets>
                <Offset>314</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Decrease Value</Action>
                  <Keys>
                    <Key>33</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Increase Value</Action>
                  <Keys>
                    <Key>34</Key>
                  </Keys>
                  <Value>15</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2035</ID>
          <Description>"Current Inventory Stats Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(highlightedstats,NMS.exe,F3 44 0F 2C 43 10)
alloc(newmem,$1000,"NMS.exe"+832E2E)

label(code)
label(return)
label(statsp)

newmem:
  mov [statsp],rbx

code:
  cvttss2si r8d,[rbx+10]
  jmp return

statsp:
  dq 0

highlightedstats:
  jmp newmem
  nop
return:
registersymbol(highlightedstats)
registersymbol(statsp)

[DISABLE]

highlightedstats:
  db F3 44 0F 2C 43 10

unregistersymbol(highlightedstats)
unregistersymbol(statsp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>2036</ID>
              <Description>"Damage"</Description>
              <VariableType>Float</VariableType>
              <Address>statsp</Address>
              <Offsets>
                <Offset>FFFFFFE0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2037</ID>
              <Description>"Shield/Mining"</Description>
              <VariableType>Float</VariableType>
              <Address>statsp</Address>
              <Offsets>
                <Offset>FFFFFFF8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>2038</ID>
              <Description>"Hyperdrive/Scanner"</Description>
              <VariableType>Float</VariableType>
              <Address>statsp</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1806</ID>
          <Description>"Highlighted Item Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(hitem,NMS.exe,41 83 3C 24 01)
alloc(newmem,$1000,"NMS.exe"+87FA2C)

label(code)
label(return)
label(item_p)
label(setitemmax)
label(setmax)

registersymbol(hitem)
registersymbol(item_p)
registersymbol(setitemmax)

newmem:
  mov [item_p],r12
  cmp [setitemmax],1
  je setmax
  jmp code

setmax:
  push rbx
  mov rbx,[r12+1C]
  mov [r12+18],rbx
  mov [r12+1C],rbx
  pop rbx
  cmp dword ptr [r12],01
  mov [setitemmax],0
  jmp return

code:
  cmp dword ptr [r12],01
  jmp return

item_p:
  dq 0

setitemmax:
  dq 0

hitem:
  jmp newmem
return:

[DISABLE]

hitem:
  db 41 83 3C 24 01

unregistersymbol(hitem)
unregistersymbol(item_p)
unregistersymbol(setitemmax)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7962</ID>
              <Description>"Set Item To Max (Numpad 1)"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>setitemmax</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>97</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1807</ID>
              <Description>"Item Name"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">[Uncategorized]------------------------------------------------------

41 54 4C 41 53 53 55 49 54 00 00 00 00 00 00 00:Remembrance

[Elements]------------------------------------------------------------

54 52 41 44 45 41 42 4C 45 34 00 00 00 00 00 00:Aluminum
56 45 48 49 43 4C 45 53 55 42 32 00 00 00 00 00:Armadium
53 55 42 42 41 52 52 45 4E 00 00 00 00 00 00 00:Cactus Flesh
54 52 41 44 45 41 42 4C 45 38 00 00 00 00 00 00:Calium
46 55 45 4C 31 00 00 00 00 00 00 00 00 00 00 00:Carbon
54 45 43 48 52 41 52 45 31 00 00 00 00 00 00 00:Chrysonite
54 52 41 44 45 41 42 4C 45 32 00 00 00 00 00 00:Copper
53 55 42 50 4F 4F 50 00 00 00 00 00 00 00 00 00:Coprite
53 55 42 42 4C 55 45 53 59 53 00 00 00 00 00 00:Cymatygen
56 45 48 49 43 4C 45 53 55 42 31 00 00 00 00 00:Detritum
54 52 41 44 45 41 42 4C 45 36 00 00 00 00 00 00:Emeril
53 55 42 53 4E 4F 57 00 00 00 00 00 00 00 00 00:Frost Crystal
53 55 42 54 4F 58 49 43 00 00 00 00 00 00 00 00:Fungal Mould
53 55 42 52 41 44 49 4F 41 43 54 49 56 45 00 00:Gamma Root
54 52 41 44 45 41 42 4C 45 35 00 00 00 00 00 00:Gold
54 45 43 48 31 00 00 00 00 00 00 00 00 00 00 00:Heridium
54 52 41 44 45 41 42 4C 45 31 00 00 00 00 00 00:Iridium
43 4F 4D 31 00 00 00 00 00 00 00 00 00 00 00 00:Iron
53 55 42 57 41 54 45 52 00 00 00 00 00 00 00 00:Kelp Sac
53 50 41 43 45 47 55 4E 4B 34 00 00 00 00 00 00:Living Slime
53 55 42 43 41 56 45 00 00 00 00 00 00 00 00 00:Marrow Bulb
53 55 42 43 52 45 41 54 55 52 45 00 00 00 00 00:Mordite
54 52 41 44 45 41 42 4C 45 39 00 00 00 00 00 00:Murrine
54 45 43 48 46 52 41 47 00 00 00 00 00 00 00 00:Nanite Cluster
54 52 41 44 45 41 42 4C 45 33 00 00 00 00 00 00:Nickel
47 41 53 33 00 00 00 00 00 00 00 00 00 00 00 00:Nitrogen
54 52 41 44 45 41 42 4C 45 31 30 00 00 00 00 00:Omegon
54 45 43 48 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Platinum
46 55 45 4C 52 41 52 45 31 00 00 00 00 00 00 00:Plutonium
53 55 42 44 52 4F 4E 45 00 00 00 00 00 00 00 00:Pugneum
54 52 41 44 45 41 42 4C 45 37 00 00 00 00 00 00:Radnox
47 41 53 32 00 00 00 00 00 00 00 00 00 00 00 00:Radon
53 50 41 43 45 47 55 4E 4B 31 00 00 00 00 00 00:Residual Goop
53 55 42 52 45 44 53 59 53 00 00 00 00 00 00 00:Rubeum
53 50 41 43 45 47 55 4E 4B 32 00 00 00 00 00 00:Runaway Mould
53 50 41 43 45 47 55 4E 4B 33 00 00 00 00 00 00:Rusted Metal
53 55 42 53 43 4F 52 43 48 45 44 00 00 00 00 00:Solanium
47 41 53 31 00 00 00 00 00 00 00 00 00 00 00 00:Sulphurine
53 55 42 4C 55 53 48 00 00 00 00 00 00 00 00 00:Star Bulb
46 55 45 4C 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Thamium9
43 4F 4D 52 41 52 45 31 00 00 00 00 00 00 00 00:Titanium
53 55 42 53 48 49 50 00 00 00 00 00 00 00 00 00:Tropheum
53 55 42 47 52 45 45 4E 53 59 53 00 00 00 00 00:Viridium
53 50 41 43 45 47 55 4E 4B 35 00 00 00 00 00 00:Viscous Fluids
43 4F 4D 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00 00:Zinc

[Misc]-----------------------------------------------------------------

46 41 52 4D 50 52 4F 44 31 00 00 00 00 00 00 00:Acid
41 4C 42 55 4D 45 4E 50 45 41 52 4C 00 00 00 00:Albumen Pearl
52 45 41 43 54 49 4F 4E 33 00 00 00 00 00 00 00:Ammonium Salt
43 4F 4D 4D 4F 44 49 54 59 36 00 00 00 00 00 00:Antimatter
41 51 55 41 53 50 48 45 52 45 00 00 00 00 00 00:Aqua Sphere
41 4C 4C 4F 59 31 00 00 00 00 00 00 00 00 00 00:Aronium
41 43 43 45 53 53 31 00 00 00 00 00 00 00 00 00:Atlas Pass V1
41 43 43 45 53 53 32 00 00 00 00 00 00 00 00 00:Atlas Pass V2
41 43 43 45 53 53 33 00 00 00 00 00 00 00 00 00:Atlas Pass V3
43 55 52 49 4F 34 00 00 00 00 00 00 00 00 00 00:Atlas Stone
54 52 41 5F 54 45 43 48 34 00 00 00 00 00 00 00:Autonomus Positioning Unit
54 52 41 5F 4D 49 4E 45 52 41 4C 53 33 00 00 00:Bromide Salt
48 41 43 4B 31 00 00 00 00 00 00 00 00 00 00 00:Bypass Chip
41 54 4C 41 53 5F 53 45 45 44 5F 31 00 00 00 00:Captured Nanode
43 4F 4D 4D 4F 44 49 54 59 31 00 00 00 00 00 00:Carite Sheet
46 41 52 4D 50 52 4F 44 39 00 00 00 00 00 00 00:Circuit Board
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 33 00 00:Comet Droplets
43 57 49 52 45 00 00 00 00 00 00 00 00 00 00 00:Copper Wire
43 4F 4D 50 4F 55 4E 44 36 00 00 00 00 00 00 00:Cryo Pump
4D 45 47 41 50 52 4F 44 33 00 00 00 00 00 00 00:Cryogenic Chamber
41 54 4C 41 53 5F 53 45 45 44 5F 34 00 00 00 00:Dark Matter
41 54 4C 41 53 5F 53 45 45 44 5F 35 00 00 00 00:Dawn's End
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 31 00 00:Decrypted User Data
54 52 41 5F 54 45 43 48 31 00 00 00 00 00 00 00:Decommissioned Circuit Board
54 52 41 5F 45 58 4F 54 49 43 53 31 00 00 00 00:De-Scented Pheromone Bottle
53 45 4E 54 49 4E 45 4C 32 00 00 00 00 00 00 00:Dimensional Matrix
54 52 41 5F 4D 49 4E 45 52 41 4C 53 31 00 00 00:Dirt
41 4C 4C 4F 59 32 00 00 00 00 00 00 00 00 00 00:Dirty Bronze
43 4F 4D 4D 4F 44 49 54 59 37 00 00 00 00 00 00:Dynamic Resonator
43 4F 4D 4D 4F 44 49 54 59 35 00 00 00 00 00 00:Electron Vapour
41 54 4C 41 53 5F 53 45 45 44 5F 32 00 00 00 00:Englobed Shade
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 31 00 00:Enormous Metal Cog
52 45 41 43 54 49 4F 4E 32 00 00 00 00 00 00 00:Enriched Carbon
54 52 41 5F 45 4E 45 52 47 59 34 00 00 00 00 00:Experimental Power Fluid
43 55 52 49 4F 36 00 00 00 00 00 00 00 00 00 00:Fascination Bead
54 52 41 5F 41 4C 4C 4F 59 34 00 00 00 00 00 00:Five Dimensional Torus
4D 45 47 41 50 52 4F 44 31 00 00 00 00 00 00 00:Freighter Fuel
43 4F 4D 50 4F 55 4E 44 34 00 00 00 00 00 00 00:Fusion Accelerant
54 52 41 5F 45 4E 45 52 47 59 35 00 00 00 00 00:Fusion Core
55 4C 54 52 41 50 52 4F 44 31 00 00 00 00 00 00:Fusion Ignitor
43 55 52 49 4F 37 00 00 00 00 00 00 00 00 00 00:Gek Charm
43 55 52 49 4F 31 00 00 00 00 00 00 00 00 00 00:Gek Relic
44 52 55 47 53 31 00 00 00 00 00 00 00 00 00 00:Geknip
41 4C 4C 4F 59 37 00 00 00 00 00 00 00 00 00 00:Geodesite
46 41 52 4D 50 52 4F 44 33 00 00 00 00 00 00 00:Glass
43 55 52 49 4F 35 00 00 00 00 00 00 00 00 00 00:Grahgrah
41 4C 4C 4F 59 36 00 00 00 00 00 00 00 00 00 00:Grantine
47 52 41 56 42 41 4C 4C 00 00 00 00 00 00 00 00:Gravitino Ball
41 54 4C 41 53 5F 53 45 45 44 5F 31 30 00 00 00:Heart Of The Sun
46 41 52 4D 50 52 4F 44 34 00 00 00 00 00 00 00:Heat Capacitor
41 4C 4C 4F 59 33 00 00 00 00 00 00 00 00 00 00:Herox
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 35 00 00:High Capacity Vector Compressor
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 34 00 00:Holographic Crankshaft
43 4F 4D 50 4F 55 4E 44 33 00 00 00 00 00 00 00:Hot Ice
54 52 41 5F 45 4E 45 52 47 59 32 00 00 00 00 00:Industrial Grade Battery
47 45 4C 00 00 00 00 00 00 00 00 00 00 00 00 00:Insulating Gel
54 52 41 5F 45 58 4F 54 49 43 53 33 00 00 00 00:Instability Injector
54 52 41 5F 54 45 43 48 33 00 00 00 00 00 00 00:Ion Capacitor
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 34 00 00:Ion Sphere
41 4C 4C 4F 59 38 00 00 00 00 00 00 00 00 00 00:Iridesite
43 55 52 49 4F 33 00 00 00 00 00 00 00 00 00 00:Korvax Casing
43 55 52 49 4F 39 00 00 00 00 00 00 00 00 00 00:Korvax Convergence Cube
41 4C 4C 4F 59 34 00 00 00 00 00 00 00 00 00 00:Lemmium
46 41 52 4D 50 52 4F 44 37 00 00 00 00 00 00 00:Liquid Explosive
46 41 52 4D 50 52 4F 44 38 00 00 00 00 00 00 00:Living Glass
46 41 52 4D 50 52 4F 44 32 00 00 00 00 00 00 00:Lubricant
41 4C 4C 4F 59 35 00 00 00 00 00 00 00 00 00 00:Magno-Gold
43 4F 4D 4D 4F 44 49 54 59 34 00 00 00 00 00 00:Microdensity Fabric
4D 49 4E 44 5F 41 52 43 00 00 00 00 00 00 00 00:Mind Arc
41 54 4C 41 53 5F 53 45 45 44 5F 39 00 00 00 00:Modified Quanta
54 52 41 5F 45 58 4F 54 49 43 53 35 00 00 00 00:Neural Duct
43 4F 4D 4D 4F 44 49 54 59 32 00 00 00 00 00 00:Night Crystals
4E 49 50 4E 49 50 42 55 44 53 00 00 00 00 00 00:Nip Nip Buds
4D 50 4C 41 54 45 00 00 00 00 00 00 00 00 00 00:Non-Ferrous Plate
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 32 00 00:Non-Stick Piston
41 54 4C 41 53 5F 53 45 45 44 5F 33 00 00 00 00:Noospheric Orb
41 54 4C 41 53 5F 53 45 45 44 5F 38 00 00 00 00:Novae Reclaiment
54 52 41 5F 45 4E 45 52 47 59 33 00 00 00 00 00:Ohmic Gel
54 52 41 5F 41 4C 4C 4F 59 33 00 00 00 00 00 00:Optical Solvent
43 4F 4D 50 4F 55 4E 44 31 00 00 00 00 00 00 00:Organic Catalyst
54 52 41 5F 45 58 4F 54 49 43 53 34 00 00 00 00:Organic Piping
41 54 4C 41 53 5F 53 45 45 44 5F 36 00 00 00 00:Photic Jade
54 52 41 5F 4D 49 4E 45 52 41 4C 53 34 00 00 00:Polychromatic Zirconium
46 41 52 4D 50 52 4F 44 35 00 00 00 00 00 00 00:Poly-Fibre
50 52 4F 44 46 55 45 4C 32 00 00 00 00 00 00 00:Power Canister
50 52 4F 44 46 55 45 4C 31 00 00 00 00 00 00 00:Power Gel
50 52 4F 44 46 55 45 4C 33 00 00 00 00 00 00 00:Power Reservoir
54 52 41 5F 54 45 43 48 35 00 00 00 00 00 00 00:Quantum Accelerator
4D 45 47 41 50 52 4F 44 32 00 00 00 00 00 00 00:Quantum Processor
54 52 41 5F 4D 49 4E 45 52 41 4C 53 35 00 00 00:Re-Latticed Arc Crystals
53 41 43 56 45 4E 4F 4D 00 00 00 00 00 00 00 00:Sac Venom
43 4F 4D 50 4F 55 4E 44 32 00 00 00 00 00 00 00:Semiconductor
53 48 49 45 4C 44 46 55 45 4C 32 00 00 00 00 00:Shielding Plate
53 48 49 45 4C 44 46 55 45 4C 31 00 00 00 00 00:Shielding Shard
53 48 49 45 4C 44 46 55 45 4C 33 00 00 00 00 00:Shielding Sheet
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 33 00 00:Six Pronged Mesh Decoupler
54 52 41 5F 45 4E 45 52 47 59 31 00 00 00 00 00:Spark Canister
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 32 00 00:Star Silk
55 4C 54 52 41 50 52 4F 44 32 00 00 00 00 00 00:Stasis Device
41 54 4C 41 53 5F 53 45 45 44 5F 37 00 00 00 00:State Phasure
54 52 41 5F 41 4C 4C 4F 59 35 00 00 00 00 00 00:Superconducting Fibre
43 4F 4D 50 4F 55 4E 44 35 00 00 00 00 00 00 00:Superconductor
43 4F 4D 4D 4F 44 49 54 59 33 00 00 00 00 00 00:Suspension Fluid
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 35 00 00:Teleport Coordinators
52 45 41 43 54 49 4F 4E 31 00 00 00 00 00 00 00:Thermic Condensate
46 41 52 4D 50 52 4F 44 36 00 00 00 00 00 00 00:Unstable Gel
47 52 45 4E 46 55 45 4C 31 00 00 00 00 00 00 00:Unstable Plasma
46 41 52 4D 50 52 4F 44 42 41 53 49 43 32 00 00:Voltaic Cell
43 41 56 45 43 55 42 45 00 00 00 00 00 00 00 00:Vortex Cubes
43 55 52 49 4F 38 00 00 00 00 00 00 00 00 00 00:Vy'keen Dagger
43 55 52 49 4F 32 00 00 00 00 00 00 00 00 00 00:Vy'keen Effigy
48 59 50 45 52 46 55 45 4C 31 00 00 00 00 00 00:Warp Cell
46 41 52 4D 50 52 4F 44 42 41 53 49 43 31 00 00:Weatherproof Rubber
54 52 41 5F 54 45 43 48 32 00 00 00 00 00 00 00:Welding Soap

[Ship]-----------------------------------------------------------------

53 48 49 50 50 4C 41 53 4D 41 00 00 00 00 00 00:Cylotron Ballista
53 48 49 50 53 48 49 45 4C 44 00 00 00 00 00 00:Deflector Shield
48 59 50 45 52 44 52 49 56 45 00 00 00 00 00 00:Hyperdrive
53 48 49 50 4D 49 4E 49 47 55 4E 00 00 00 00 00:Intra-Knife Accelerator
4C 41 55 4E 43 48 45 52 00 00 00 00 00 00 00 00:Launch Thrusters
53 48 49 50 4C 41 53 31 00 00 00 00 00 00 00 00:Phase Beam
53 48 49 50 47 55 4E 31 00 00 00 00 00 00 00 00:Photon Cannon
53 48 49 50 53 48 4F 54 47 55 4E 00 00 00 00 00:Positron Ejector
53 48 49 50 4A 55 4D 50 31 00 00 00 00 00 00 00:Pulse Engine

[Multitool]-----------------------------------------------------------

52 41 49 4C 47 55 4E 00 00 00 00 00 00 00 00 00:Blaze Javelin
42 4F 4C 54 00 00 00 00 00 00 00 00 00 00 00 00:Boltcaster
4C 41 53 45 52 00 00 00 00 00 00 00 00 00 00 00:Mining Beam
47 52 45 4E 41 44 45 00 00 00 00 00 00 00 00 00:Plasma Launcher
53 4D 47 00 00 00 00 00 00 00 00 00 00 00 00 00:Pulse Spitter
53 43 41 4E 31 00 00 00 00 00 00 00 00 00 00 00:Scanner
53 48 4F 54 47 55 4E 00 00 00 00 00 00 00 00 00:Scatter Blaster
54 45 52 52 41 49 4E 45 44 49 54 4F 52 00 00 00:Terrain Manipulator

[Exosuit]----------------------------------------------------------------

50 52 4F 54 45 43 54 00 00 00 00 00 00 00 00 00:Hazard Protection
50 4F 57 45 52 47 4C 4F 56 45 00 00 00 00 00 00:Hasmat Gauntlet
4A 45 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Jetpack
45 4E 45 52 47 59 00 00 00 00 00 00 00 00 00 00:Life Support

[Exosuit Parts]------------------------------------------------------

55 4E 57 31 00 00 00 00 00 00 00 00 00 00 00 00:Aeration Membrane Sigma
55 4E 57 32 00 00 00 00 00 00 00 00 00 00 00 00:Aeration Membrane Tau
55 4E 57 33 00 00 00 00 00 00 00 00 00 00 00 00:Aeration Membrane Theta
48 4F 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Coolant Network Sigma
48 4F 54 32 00 00 00 00 00 00 00 00 00 00 00 00:Coolant Network Tau
48 4F 54 33 00 00 00 00 00 00 00 00 00 00 00 00:Coolant Network Theta
41 52 4D 4F 55 52 31 00 00 00 00 00 00 00 00 00:Health Module Sigma
41 52 4D 4F 55 52 32 00 00 00 00 00 00 00 00 00:Health Module Tau
41 52 4D 4F 55 52 33 00 00 00 00 00 00 00 00 00:Health Module Theta
4A 45 54 42 4F 4F 53 54 31 00 00 00 00 00 00 00:Jetpack Booster Sigma
4A 45 54 42 4F 4F 53 54 32 00 00 00 00 00 00 00:Jetpack Booster Tau
4A 45 54 42 4F 4F 53 54 33 00 00 00 00 00 00 00:Jetpack Booster Theta
45 4E 45 52 47 59 42 4F 4F 53 54 31 00 00 00 00:Life Support Module Sigma
45 4E 45 52 47 59 42 4F 4F 53 54 32 00 00 00 00:Life Support Module Tau
52 41 44 31 00 00 00 00 00 00 00 00 00 00 00 00:Radiation Deflector Sigma
52 41 44 32 00 00 00 00 00 00 00 00 00 00 00 00:Radiation Deflector Tau
52 41 44 33 00 00 00 00 00 00 00 00 00 00 00 00:Radiation Deflector Theta
53 48 49 45 4C 44 42 4F 4F 53 54 31 00 00 00 00:Shield Boost Sigma
53 48 49 45 4C 44 42 4F 4F 53 54 32 00 00 00 00:Shield Boost Tau
53 48 49 45 4C 44 42 4F 4F 53 54 33 00 00 00 00:Shield Boost Theta
53 54 41 4D 31 00 00 00 00 00 00 00 00 00 00 00:Stamina Enhancement Sigma
53 54 41 4D 32 00 00 00 00 00 00 00 00 00 00 00:Stamina Enhancement Tau
53 54 41 4D 33 00 00 00 00 00 00 00 00 00 00 00:Stamina Enhancement Theta
43 4F 4C 44 31 00 00 00 00 00 00 00 00 00 00 00:Thermic Layer Sigma
43 4F 4C 44 32 00 00 00 00 00 00 00 00 00 00 00:Thermic Layer Tau
43 4F 4C 44 33 00 00 00 00 00 00 00 00 00 00 00:Thermic Layer Theta
54 4F 58 31 00 00 00 00 00 00 00 00 00 00 00 00:Toxin Suppressor Sigma
54 4F 58 32 00 00 00 00 00 00 00 00 00 00 00 00:Toxin Suppressor Tau
54 4F 58 33 00 00 00 00 00 00 00 00 00 00 00 00:Toxin Suppressor Theta

[Ship Parts]----------------------------------------------------------------

53 48 49 50 47 55 4E 52 41 54 45 31 00 00 00 00:Accelerated Fire Sigma
53 48 49 50 47 55 4E 52 41 54 45 32 00 00 00 00:Accelerated Fire Tau
53 48 49 50 47 55 4E 52 41 54 45 33 00 00 00 00:Accelerated Fire Theta
53 48 49 50 47 55 4E 43 4F 4F 4C 31 00 00 00 00:Advanced Cooling Sigma
53 48 49 50 47 55 4E 43 4F 4F 4C 32 00 00 00 00:Advanced Cooling Tau
53 48 49 50 47 55 4E 43 4F 4F 4C 33 00 00 00 00:Advanced Cooling Theta
53 48 49 50 47 44 4D 47 31 00 00 00 00 00 00 00:Cannon Damage Sigma
53 48 49 50 47 44 4D 47 32 00 00 00 00 00 00 00:Cannon Damage Tau
53 48 49 50 47 44 4D 47 33 00 00 00 00 00 00 00:Cannon Damage Theta
53 48 49 50 53 43 41 4E 5F 43 4F 4D 42 41 54 00:Conflict Scanner
53 48 49 50 42 4C 4F 42 44 4D 47 31 00 00 00 00:Cylotron Ballista Damage Sigma
53 48 49 50 42 4C 4F 42 44 4D 47 32 00 00 00 00:Cylotron Ballista Damage Tau
53 48 49 50 42 4C 4F 42 44 4D 47 33 00 00 00 00:Cylotron Ballista Damage Theta
53 48 49 50 42 4C 4F 42 52 41 54 45 31 00 00 00:Cyclotron Ballista Fire Rate Sigma
53 48 49 50 42 4C 4F 42 52 41 54 45 32 00 00 00:Cyclotron Ballista Fire Rate Tau
53 48 49 50 42 4C 4F 42 52 41 54 45 33 00 00 00:Cyclotron Ballista Fire Rate Theta
53 48 49 50 42 4C 4F 42 43 4F 4F 4C 31 00 00 00:Cylotron Ballista Coolant Sigma
53 48 49 50 42 4C 4F 42 43 4F 4F 4C 32 00 00 00:Cylotron Ballista Coolant Tau
53 48 49 50 42 4C 4F 42 43 4F 4F 4C 33 00 00 00:Cylotron Ballista Coolant Theta
53 48 49 50 53 48 4C 44 42 4F 4F 53 54 31 00 00:Deflection Enhancement Sigma
53 48 49 50 53 48 4C 44 42 4F 4F 53 54 32 00 00:Deflection Enhancement Tau
53 48 49 50 53 48 4C 44 42 4F 4F 53 54 33 00 00:Deflection Enhancement Theta
53 48 49 50 53 43 41 4E 5F 45 43 4F 4E 00 00 00:Economy Scanner
53 48 49 50 4D 47 55 4E 44 4D 47 31 00 00 00 00:Infra-Knife Accelerator Damage Sigma
53 48 49 50 4D 47 55 4E 44 4D 47 32 00 00 00 00:Infra-Knife Accelerator Damage Tau
53 48 49 50 4D 47 55 4E 44 4D 47 33 00 00 00 00:Infra-Knife Accelerator Damage Theta
53 48 49 50 4D 47 55 4E 52 41 54 45 31 00 00 00:Infra-Knife Accelerator Fire Rate Sigma
53 48 49 50 4D 47 55 4E 52 41 54 45 32 00 00 00:Infra-Knife Accelerator Fire Rate Tau
53 48 49 50 4D 47 55 4E 52 41 54 45 33 00 00 00:Infra-Knife Accelerator Fire Rate Theta
53 48 49 50 4D 47 55 4E 43 4F 4F 4C 31 00 00 00:Infra-Knife Accelerator Coolant Sigma
53 48 49 50 4D 47 55 4E 43 4F 4F 4C 32 00 00 00:Infra-Knife Accelerator Coolant Tau
53 48 49 50 4D 47 55 4E 43 4F 4F 4C 33 00 00 00:Infra-Knife Accelerator Coolant Theta
53 48 49 50 4C 44 4D 47 31 00 00 00 00 00 00 00:Phase Beam Impact Sigma
53 48 49 50 4C 44 4D 47 32 00 00 00 00 00 00 00:Phase Beam Impact Tau
53 48 49 50 4C 44 4D 47 33 00 00 00 00 00 00 00:Phase Beam Impact Theta
53 48 49 50 4C 41 53 43 4F 4F 4C 31 00 00 00 00:Phase Coolant Sigma
53 48 49 50 4C 41 53 43 4F 4F 4C 32 00 00 00 00:Phase Coolant Tau
53 48 49 50 4C 41 53 43 4F 4F 4C 33 00 00 00 00:Phase Coolant Theta
53 48 49 50 53 47 55 4E 44 4D 47 31 00 00 00 00:Positron Ejector Damage Sigma
53 48 49 50 53 47 55 4E 44 4D 47 32 00 00 00 00:Positron Ejector Damage Tau
53 48 49 50 53 47 55 4E 44 4D 47 33 00 00 00 00:Positron Ejector Damage Theta
53 48 49 50 53 47 55 4E 43 4F 4F 4C 31 00 00 00:Positron Ejector Coolant Sigma
53 48 49 50 53 47 55 4E 43 4F 4F 4C 32 00 00 00:Positron Ejector Coolant Tau
53 48 49 50 53 47 55 4E 43 4F 4F 4C 33 00 00 00:Positron Ejector Coolant Theta
53 48 49 50 53 47 55 4E 52 41 54 45 31 00 00 00:Positron Ejector Fire Rate Sigma
53 48 49 50 53 47 55 4E 52 41 54 45 32 00 00 00:Positron Ejector Fire Rate Tau
53 48 49 50 53 47 55 4E 52 41 54 45 33 00 00 00:Positron Ejector Fire Rate Theta
53 48 49 50 4A 55 4D 50 32 00 00 00 00 00 00 00:Pulse Jet Sigma
50 48 4F 54 4F 4E 49 58 5F 43 4F 52 45 00 00 00:Photonix Core
53 48 49 50 4A 55 4D 50 33 00 00 00 00 00 00 00:Pulse Jet Tau
53 48 49 50 52 4F 43 4B 45 54 53 00 00 00 00 00:Rocket Launcher
48 44 52 49 56 45 42 4F 4F 53 54 31 00 00 00 00:Warp Reactor Sigma
48 44 52 49 56 45 42 4F 4F 53 54 32 00 00 00 00:Warp Reactor Tau
48 44 52 49 56 45 42 4F 4F 53 54 33 00 00 00 00:Warp Reactor Theta

[Multitool Parts]----------------------------------------------------------------

53 54 52 4F 4E 47 4C 41 53 45 52 00 00 00 00 00:Advanced Mining Laser
4C 41 53 43 4F 4F 4C 31 00 00 00 00 00 00 00 00:Beam Coolant Sigma
4C 41 53 43 4F 4F 4C 32 00 00 00 00 00 00 00 00:Beam Coolant Tau
4C 41 53 43 4F 4F 4C 33 00 00 00 00 00 00 00 00:Beam Coolant Theta
4C 41 53 4D 49 4E 45 53 50 45 45 44 31 00 00 00:Beam Intensifier Sigma
4C 41 53 4D 49 4E 45 53 50 45 45 44 32 00 00 00:Beam Intensifier Tau
4C 41 53 4D 49 4E 45 53 50 45 45 44 33 00 00 00:Beam Intensifier Theta
4C 41 53 4D 49 4E 45 52 41 44 31 00 00 00 00 00:Beam Focus Sigma
4C 41 53 4D 49 4E 45 52 41 44 32 00 00 00 00 00:Beam Focus Tau
4C 41 53 4D 49 4E 45 52 41 44 33 00 00 00 00 00:Beam Focus Theta
4C 41 53 44 4D 47 31 00 00 00 00 00 00 00 00 00:Combat Amplifier Sigma
4C 41 53 44 4D 47 32 00 00 00 00 00 00 00 00 00:Combat Amplifier Tau
4C 41 53 44 4D 47 33 00 00 00 00 00 00 00 00 00:Combat Amplifier Theta
4C 41 53 44 4D 47 34 00 00 00 00 00 00 00 00 00:Combat Amplifier Omega

52 41 49 4C 44 4D 47 31 00 00 00 00 00 00 00 00:Blaze Javelin Damage Sigma
52 41 49 4C 44 4D 47 32 00 00 00 00 00 00 00 00:Blaze Javelin Damage Tau
52 41 49 4C 44 4D 47 33 00 00 00 00 00 00 00 00:Blaze Javelin Damage Theta
52 41 49 4C 4D 49 4E 45 31 00 00 00 00 00 00 00:Blaze Javelin Drill Array Sigma
52 41 49 4C 4D 49 4E 45 32 00 00 00 00 00 00 00:Blaze Javelin Drill Array Tau
52 41 49 4C 4D 49 4E 45 33 00 00 00 00 00 00 00:Blaze Javelin Drill Array Theta
52 41 49 4C 43 4F 4F 4C 31 00 00 00 00 00 00 00:Blaze Javelin Coolant Sigma
52 41 49 4C 43 4F 4F 4C 32 00 00 00 00 00 00 00:Blaze Javelin Coolant Tau

42 4F 4C 54 5F 53 4D 00 00 00 00 00 00 00 00 00:Boltcaster SM
42 4F 4C 54 48 4F 4D 49 4E 47 00 00 00 00 00 00:Homingbolt Adapter
42 4F 4C 54 44 4D 47 31 00 00 00 00 00 00 00 00:Impact Damage Sigma
42 4F 4C 54 44 4D 47 32 00 00 00 00 00 00 00 00:Impact Damage Tau
42 4F 4C 54 44 4D 47 33 00 00 00 00 00 00 00 00:Impact Damage Theta
42 4F 4C 54 44 4D 47 34 00 00 00 00 00 00 00 00:Impact Damage Omega
42 4F 4C 54 43 4C 49 50 31 00 00 00 00 00 00 00:Plasma Clip Sigma
42 4F 4C 54 43 4C 49 50 32 00 00 00 00 00 00 00:Plasma Clip Tau
42 4F 4C 54 43 4C 49 50 33 00 00 00 00 00 00 00:Plasma Clip Theta
42 4F 4C 54 52 41 54 45 31 00 00 00 00 00 00 00:Rapidfire Sigma
42 4F 4C 54 52 41 54 45 32 00 00 00 00 00 00 00:Rapidfire Tau
42 4F 4C 54 52 41 54 45 33 00 00 00 00 00 00 00:Rapidfire Theta
42 4F 4C 54 53 54 41 42 31 00 00 00 00 00 00 00:Recoil Stabiliser Sigma
42 4F 4C 54 53 54 41 42 32 00 00 00 00 00 00 00:Recoil Stabiliser Tau
42 4F 4C 54 53 54 41 42 33 00 00 00 00 00 00 00:Recoil Stabiliser Theta
42 4F 4C 54 52 45 4C 31 00 00 00 00 00 00 00 00:Reload Accelerant Sigma
42 4F 4C 54 52 45 4C 32 00 00 00 00 00 00 00 00:Reload Accelerant Tau
42 4F 4C 54 52 45 4C 33 00 00 00 00 00 00 00 00:Reload Accelerant Theta
42 4F 4C 54 42 4F 55 4E 43 45 31 00 00 00 00 00:Ricochet Sigma
42 4F 4C 54 42 4F 55 4E 43 45 32 00 00 00 00 00:Ricochet Tau
42 4F 4C 54 42 4F 55 4E 43 45 33 00 00 00 00 00:Ricochet Theta

53 4D 47 44 4D 47 31 00 00 00 00 00 00 00 00 00:Pulse Spitter Damage Sigma
53 4D 47 44 4D 47 32 00 00 00 00 00 00 00 00 00:Pulse Spitter Damage Tau
53 4D 47 44 4D 47 33 00 00 00 00 00 00 00 00 00:Pulse Spitter Damage Theta
53 4D 47 52 45 4C 31 00 00 00 00 00 00 00 00 00:Pulse Spitter Reload Sigma
53 4D 47 52 45 4C 32 00 00 00 00 00 00 00 00 00:Pulse Spitter Reload Tau
53 4D 47 52 45 4C 33 00 00 00 00 00 00 00 00 00:Pulse Spitter Reload Theta
53 4D 47 41 43 43 31 00 00 00 00 00 00 00 00 00:Pulse Spitter Accuracy Sigma
53 4D 47 41 43 43 32 00 00 00 00 00 00 00 00 00:Pulse Spitter Accuracy Tau
53 4D 47 41 43 43 33 00 00 00 00 00 00 00 00 00:Pulse Spitter Accuracy Theta

53 48 4F 54 47 55 4E 44 4D 47 31 00 00 00 00 00:Scatter Blaster Damage Sigma
53 48 4F 54 47 55 4E 44 4D 47 32 00 00 00 00 00:Scatter Blaster Damage Tau
53 48 4F 54 47 55 4E 44 4D 47 33 00 00 00 00 00:Scatter Blaster Damage Theta
53 48 4F 54 47 55 4E 43 4C 49 50 31 00 00 00 00:Scatter Blaster Capacity Sigma
53 48 4F 54 47 55 4E 43 4C 49 50 32 00 00 00 00:Scatter Blaster Capacity Tau
53 48 4F 54 47 55 4E 43 4C 49 50 33 00 00 00 00:Scatter Blaster Capacity Theta
53 48 4F 54 47 55 4E 52 45 4C 31 00 00 00 00 00:Scatter Blaster Reload Sigma
53 48 4F 54 47 55 4E 52 45 4C 32 00 00 00 00 00:Scatter Blaster Reload Tau
53 48 4F 54 47 55 4E 52 45 4C 33 00 00 00 00 00:Scatter Blaster Reload Theta
53 48 4F 54 47 55 4E 41 43 43 31 00 00 00 00 00:Scatter Blaster Accuracy Sigma
53 48 4F 54 47 55 4E 41 43 43 32 00 00 00 00 00:Scatter Blaster Accuracy Tau
53 48 4F 54 47 55 4E 41 43 43 33 00 00 00 00 00:Scatter Blaster Accuracy Theta

47 52 45 4E 52 41 44 31 00 00 00 00 00 00 00 00:Damage Radius
47 52 45 4E 52 41 44 32 00 00 00 00 00 00 00 00:Damage Radius Tau
47 52 45 4E 44 4D 47 31 00 00 00 00 00 00 00 00:Grenade Intensity Sigma
47 52 45 4E 44 4D 47 32 00 00 00 00 00 00 00 00:Grenade Intensity Tau
47 52 45 4E 44 4D 47 33 00 00 00 00 00 00 00 00:Grenade Intensity Theta
47 52 45 4E 53 50 45 45 44 31 00 00 00 00 00 00:Grenade Propulsion
47 52 45 4E 53 50 45 45 44 32 00 00 00 00 00 00:Grenade Propulsion Tau
47 52 45 4E 48 4F 4D 49 4E 47 31 00 00 00 00 00:Homing Grenade
47 52 45 4E 42 4F 55 4E 43 45 31 00 00 00 00 00:Rebound Grenades
47 52 45 4E 42 4F 55 4E 43 45 32 00 00 00 00 00:Rebound Grenades Tau

53 43 41 4E 42 49 4E 4F 43 31 00 00 00 00 00 00:Analysis Visor
43 52 45 53 43 41 4E 31 00 00 00 00 00 00 00 00:Fauna Analyzer Sigma
43 52 45 53 43 41 4E 32 00 00 00 00 00 00 00 00:Fauna Analyzer Tau
43 52 45 53 43 41 4E 33 00 00 00 00 00 00 00 00:Fauna Analyzer Theta
46 4C 4F 52 41 53 43 41 4E 31 00 00 00 00 00 00:Flora Analyzer Sigma
46 4C 4F 52 41 53 43 41 4E 32 00 00 00 00 00 00:Flora Analyzer Tau
46 4C 4F 52 41 53 43 41 4E 33 00 00 00 00 00 00:Flora Analyzer Theta
53 43 41 4E 32 00 00 00 00 00 00 00 00 00 00 00:Range Boost Sigma
53 43 41 4E 33 00 00 00 00 00 00 00 00 00 00 00:Range Boost Tau

[Exocraft]--------------------------------------------------------------

56 45 48 49 43 4C 45 5F 45 4E 47 49 4E 45 00 00:Fusion Engine
56 45 48 49 43 4C 45 5F 53 43 41 4E 00 00 00 00:Exocraft Signal Booster
56 45 48 49 43 4C 45 5F 53 43 41 4E 31 00 00 00:Exocraft Signal Booster Upgrade Sigma
56 45 48 49 43 4C 45 5F 53 43 41 4E 32 00 00 00:Exocraft Signal Booster Upgrade Tau
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 00 00 00:Exocraft Mining Laser
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 31 00 00:Exocraft Mining Laser Upgrade Sigma
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 32 00 00:ATV Photon Cannon Beta
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 33 00 00:ATV Photon Cannon Gamma
56 45 48 49 43 4C 45 5F 47 55 4E 00 00 00 00 00:Exocraft Mounted Cannon
56 45 48 49 43 4C 45 5F 47 55 4E 31 00 00 00 00:Exocraft Mounted Cannon Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 00 00 00:Exocraft Acceleration Module
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 31 00 00:Exocraft Acceleration Module Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 32 00 00:Exocraft Acceleration Module Upgrade Tau
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 33 00 00:ATV Tune Up Gamma

[Freighter]------------------------------------------------------------

46 5F 48 44 52 49 56 45 42 4F 4F 53 54 31 00 00:Freighter Warp Reactor Sigma
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 32 00 00:Freighter Warp Reactor Tau
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 33 00 00:Freighter Warp Reactor Theta
</DropDownList>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Array of byte</VariableType>
              <ByteLength>16</ByteLength>
              <Address>item_p</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1808</ID>
              <Description>"Quantity"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>item_p</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1809</ID>
              <Description>"Total"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>item_p</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1810</ID>
              <Description>"Damaged (Numpad 2)"</Description>
              <VariableType>Float</VariableType>
              <Address>item_p</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>1811</ID>
              <Description>"Inv. Column"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>item_p</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>1812</ID>
              <Description>"Inv. Row"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>item_p</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>104</ID>
          <Description>"ShipTransfer"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2017-09-22
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(shiptransfer,NMS.exe,DB 74 17 48 8B 0D * * * * 80 B9 04 57 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+E8105D)

label(code)
label(return)

newmem:
xor al, al

code:
  //cmp byte ptr [rcx+00005704],00
  jmp return

shiptransfer+0A:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(shiptransfer)

[DISABLE]

shiptransfer+0A:
  db 80 B9 04 57 00 00 00 0F 94 C0

unregistersymbol(shiptransfer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+E8105D

"NMS.exe"+E81034: 49 8B D1              -  mov rdx,r9
"NMS.exe"+E81037: E8 F4 51 00 00        -  call NMS.exe+E86230
"NMS.exe"+E8103C: 0F B6 5C 24 78        -  movzx ebx,byte ptr [rsp+78]
"NMS.exe"+E81041: 4C 8B 44 24 70        -  mov r8,[rsp+70]
"NMS.exe"+E81046: 48 8B D7              -  mov rdx,rdi
"NMS.exe"+E81049: 44 0F B6 CB           -  movzx r9d,bl
"NMS.exe"+E8104D: E8 0E 59 00 00        -  call NMS.exe+E86960
"NMS.exe"+E81052: 84 DB                 -  test bl,bl
"NMS.exe"+E81054: 74 17                 -  je NMS.exe+E8106D
"NMS.exe"+E81056: 48 8B 0D AB BA 1A 01  -  mov rcx,[NMS.exe+202CB08]
// ---------- INJECTING HERE ----------
"NMS.exe"+E8105D: 80 B9 04 57 00 00 00  -  cmp byte ptr [rcx+00005704],00
// ---------- DONE INJECTING  ----------
"NMS.exe"+E81064: 0F 94 C0              -  sete al
"NMS.exe"+E81067: 88 81 04 57 00 00     -  mov [rcx+00005704],al
"NMS.exe"+E8106D: 48 8B 05 94 BA 1A 01  -  mov rax,[NMS.exe+202CB08]
"NMS.exe"+E81074: C6 80 F1 D6 3C 00 01  -  mov byte ptr [rax+003CD6F1],01
"NMS.exe"+E8107B: 48 8B 5C 24 50        -  mov rbx,[rsp+50]
"NMS.exe"+E81080: 48 8B 74 24 58        -  mov rsi,[rsp+58]
"NMS.exe"+E81085: 48 83 C4 40           -  add rsp,40
"NMS.exe"+E81089: 5F                    -  pop rdi
"NMS.exe"+E8108A: C3                    -  ret 
"NMS.exe"+E8108B: 48 8B 54 24 70        -  mov rdx,[rsp+70]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>150</ID>
          <Description>"Kill All Pirates"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2017-09-28
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(allkill,NMS.exe,2B 86 FC 00 00 00 83 F8 01 7D 0E) // should be unique
alloc(newmem,$1000,"NMS.exe"+8F05FA)

label(code)
label(return)

newmem:
mov rbx, [rsi+00000090]
cmp dword ptr [rbx+00000180], 0
//cmp dword ptr [rsi+000000F8], #6000
jne code
mov [rsi+000000FC], eax

code:
  sub eax,[rsi+000000FC]
  jmp return

allkill:
  jmp newmem
  nop
return:
registersymbol(allkill)

[DISABLE]

allkill:
  db 2B 86 FC 00 00 00

unregistersymbol(allkill)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+8F05FA

"NMS.exe"+8F05D9: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+8F05DC: FF 53 60                 -  call qword ptr [rbx+60]
"NMS.exe"+8F05DF: 8B D0                    -  mov edx,eax
"NMS.exe"+8F05E1: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+8F05E4: FF 93 80 00 00 00        -  call qword ptr [rbx+00000080]
"NMS.exe"+8F05EA: 0F 2F C6                 -  comiss xmm0,xmm6
"NMS.exe"+8F05ED: 0F 97 C1                 -  seta cl
"NMS.exe"+8F05F0: 8B 86 F8 00 00 00        -  mov eax,[rsi+000000F8]
"NMS.exe"+8F05F6: 85 C0                    -  test eax,eax
"NMS.exe"+8F05F8: 7E 19                    -  jle NMS.exe+8F0613
// ---------- INJECTING HERE ----------
"NMS.exe"+8F05FA: 2B 86 FC 00 00 00        -  sub eax,[rsi+000000FC]
// ---------- DONE INJECTING  ----------
"NMS.exe"+8F0600: 83 F8 01                 -  cmp eax,01
"NMS.exe"+8F0603: 7D 0E                    -  jnl NMS.exe+8F0613
"NMS.exe"+8F0605: 48 8B 56 08              -  mov rdx,[rsi+08]
"NMS.exe"+8F0609: 49 8B CE                 -  mov rcx,r14
"NMS.exe"+8F060C: E8 8F 85 FC FF           -  call NMS.exe+8B8BA0
"NMS.exe"+8F0611: EB 2C                    -  jmp NMS.exe+8F063F
"NMS.exe"+8F0613: 84 C9                    -  test cl,cl
"NMS.exe"+8F0615: 75 1C                    -  jne NMS.exe+8F0633
"NMS.exe"+8F0617: 48 8B 5E 08              -  mov rbx,[rsi+08]
"NMS.exe"+8F061B: 41 38 4F 74              -  cmp [r15+74],cl
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1944</ID>
          <Description>"Wanted Level"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>00FF00</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1862</ID>
              <Description>"No Sentinals"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(nosen,NMS.exe,89 7B 38 89 73 4C)
registersymbol(nosen)

nosen:
  db 90 90 90

[DISABLE]

nosen:
  db 89 7B 38

unregistersymbol(nosen)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>7959</ID>
              <Description>"Wanted Level Pointer"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>00FF00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Author : Squall8
}

[ENABLE]

aobscanmodule(wlp,NMS.exe,44 3B AB 58 17 00 00)
alloc(newmem,$1000,"NMS.exe"+8DDF46)

label(code)
label(return)
label(wlpp)

newmem:
  mov [wlpp],rbx

code:
  cmp r13d,[rbx+00001758]
  jmp return

wlpp:
  dq 0

wlp:
  jmp newmem
  nop
  nop
return:
registersymbol(wlp)
registersymbol(wlpp)

[DISABLE]

wlp:
  db 44 3B AB 58 17 00 00

unregistersymbol(wlp)
unregistersymbol(wlpp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7960</ID>
                  <Description>"Wanted Level"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>wlpp</Address>
                  <Offsets>
                    <Offset>1758</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1943</ID>
          <Description>"Working Scripts From Old Table"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1465</ID>
              <Description>"Universial Translator (Decode Words)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(words,NMS.exe,EB 02 32 C9 84 C9 41 8D 42 01 0F 28 C8 41)
words:
  db 90 90 B1 01
registersymbol(words)

[DISABLE]
words:
  db EB 02 32 C9
unregistersymbol(words)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+892E6C

"NMS.exe"+892E4C: 0F 1F 40 00           -  nop [rax+00]
"NMS.exe"+892E50: 4C 39 00              -  cmp [rax],r8
"NMS.exe"+892E53: 75 06                 -  jne NMS.exe+892E5B
"NMS.exe"+892E55: 48 39 50 08           -  cmp [rax+08],rdx
"NMS.exe"+892E59: 74 0B                 -  je NMS.exe+892E66
"NMS.exe"+892E5B: 48 83 C0 18           -  add rax,18
"NMS.exe"+892E5F: 48 3B C1              -  cmp rax,rcx
"NMS.exe"+892E62: 74 0A                 -  je NMS.exe+892E6E
"NMS.exe"+892E64: EB EA                 -  jmp NMS.exe+892E50
"NMS.exe"+892E66: 41 0F B6 4C 04 10     -  movzx ecx,byte ptr [r12+rax+10]
// ---------- INJECTING HERE ----------
"NMS.exe"+892E6C: EB 02                 -  jmp NMS.exe+892E70
"NMS.exe"+892E6E: 32 C9                 -  xor cl,cl
"NMS.exe"+892E70: 84 C9                 -  test cl,cl
// ---------- DONE INJECTING  ----------
"NMS.exe"+892E72: 0F 84 A3 00 00 00     -  je NMS.exe+892F1B
"NMS.exe"+892E78: 48 8D 05 1D 4B AB 00  -  lea rax,[NMS.exe+134799C]
"NMS.exe"+892E7F: 48 89 45 A0           -  mov [rbp-60],rax
"NMS.exe"+892E83: 48 8D 05 0E 4B AB 00  -  lea rax,[NMS.exe+1347998]
"NMS.exe"+892E8A: 48 89 45 A8           -  mov [rbp-58],rax
"NMS.exe"+892E8E: 48 8D 05 2B 4B AB 00  -  lea rax,[NMS.exe+13479C0]
"NMS.exe"+892E95: 48 89 45 B0           -  mov [rbp-50],rax
"NMS.exe"+892E99: 48 8D 1D 5E C7 A9 00  -  lea rbx,[NMS.exe+132F5FE]
"NMS.exe"+892EA0: 48 89 5D B8           -  mov [rbp-48],rbx
"NMS.exe"+892EA4: 48 8D 05 0D 4B AB 00  -  lea rax,[NMS.exe+13479B8]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>246</ID>
              <Description>"Inventory Slot Pointers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>00FF00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(inventory_slots,NMS.exe,8B 0C 8E 0F A3 D1)
alloc(newmem,$1000,inventory_slots)

label(code)
label(return)
label(inventory_slots_ptr)

newmem:
  push rcx
  mov rcx,inventory_slots_ptr
  mov [rcx],rsi
  pop rcx
code:
  mov ecx,[rsi+rcx*4]
  bt ecx,edx
  jmp return

inventory_slots_ptr:
  dq 0

inventory_slots:
  jmp newmem
  nop
return:
registersymbol(inventory_slots)
registersymbol(inventory_slots_ptr)

[DISABLE]
inventory_slots:
  db 8B 0C 8E 0F A3 D1
unregistersymbol(inventory_slots)
unregistersymbol(inventory_slots_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+44636B

"NMS.exe"+44634E: 44 3B D7                    -  cmp r10d,edi
"NMS.exe"+446351: 7D 28                       -  jnl NMS.exe+44637B
"NMS.exe"+446353: 41 8B CB                    -  mov ecx,r11d
"NMS.exe"+446356: 41 8B C3                    -  mov eax,r11d
"NMS.exe"+446359: 83 E1 E0                    -  and ecx,-20
"NMS.exe"+44635C: 2B C1                       -  sub eax,ecx
"NMS.exe"+44635E: 49 8B CB                    -  mov rcx,r11
"NMS.exe"+446361: 48 C1 F9 05                 -  sar rcx,05
"NMS.exe"+446365: 0F B6 D0                    -  movzx edx,al
"NMS.exe"+446368: 49 03 CA                    -  add rcx,r10
// ---------- INJECTING HERE ----------
"NMS.exe"+44636B: 8B 0C 8E                    -  mov ecx,[rsi+rcx*4]
"NMS.exe"+44636E: 0F A3 D1                    -  bt ecx,edx
// ---------- DONE INJECTING  ----------
"NMS.exe"+446371: 0F 92 C1                    -  setb cl
"NMS.exe"+446374: 84 C9                       -  test cl,cl
"NMS.exe"+446376: 74 03                       -  je NMS.exe+44637B
"NMS.exe"+446378: 41 FF C1                    -  inc r9d
"NMS.exe"+44637B: 41 FF C0                    -  inc r8d
"NMS.exe"+44637E: 44 3B C3                    -  cmp r8d,ebx
"NMS.exe"+446381: 7C AD                       -  jl NMS.exe+446330
"NMS.exe"+446383: 4C 8B 74 24 18              -  mov r14,[rsp+18]
"NMS.exe"+446388: 48 8B 6C 24 10              -  mov rbp,[rsp+10]
"NMS.exe"+44638D: 48 8B 5C 24 20              -  mov rbx,[rsp+20]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>247</ID>
                  <Description>"Currently Opened Inventory"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>inventory_slots_ptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>248</ID>
                      <Description>"Row 1 (set to -1 for all slots)"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>249</ID>
                      <Description>"Row 2"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>250</ID>
                      <Description>"Row 3"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>251</ID>
                      <Description>"Row 4"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+c</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>252</ID>
                      <Description>"Row 5"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+10</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>253</ID>
                      <Description>"Row 6"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+14</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7951</ID>
                      <Description>"Width"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+40</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7952</ID>
                      <Description>"Height"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>+42</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>143</ID>
              <Description>"Laser Color"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(laser_color,NMS.exe,F3 0F 10 1E 45 33 C0 BA 07) // should be unique
alloc(newmem,$1000,"NMS.exe"+A425F6)

label(code)
label(return)
label(laser_color_ptr)

newmem:
  mov r8,laser_color_ptr
  mov [r8],rsi
code:
  movss xmm3,[rsi]
  xor r8d,r8d
  jmp return

laser_color_ptr:
  dq 0

laser_color:
  jmp newmem
  nop
  nop
return:
registersymbol(laser_color)
registersymbol(laser_color_ptr)

[DISABLE]
laser_color:
  db F3 0F 10 1E 45 33 C0
unregistersymbol(laser_color)
unregistersymbol(laser_color_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A425F6

"NMS.exe"+A425D0: 45 33 C0              -  xor r8d,r8d
"NMS.exe"+A425D3: BA 05 29 00 00        -  mov edx,00002905
"NMS.exe"+A425D8: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A425DB: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A425DF: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A425E2: 48 8B 0D 07 26 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A425E9: E8 02 06 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A425EE: 48 85 C0              -  test rax,rax
"NMS.exe"+A425F1: 74 16                 -  je NMS.exe+A42609
"NMS.exe"+A425F3: 4C 8B 08              -  mov r9,[rax]
// ---------- INJECTING HERE ----------
"NMS.exe"+A425F6: F3 0F 10 1E           -  movss xmm3,[rsi]
"NMS.exe"+A425FA: 45 33 C0              -  xor r8d,r8d
// ---------- DONE INJECTING  ----------
"NMS.exe"+A425FD: BA 07 29 00 00        -  mov edx,00002907
"NMS.exe"+A42602: 48 8B C8              -  mov rcx,rax
"NMS.exe"+A42605: 41 FF 51 28           -  call qword ptr [r9+28]
"NMS.exe"+A42609: 8B 57 08              -  mov edx,[rdi+08]
"NMS.exe"+A4260C: 48 8B 0D DD 25 BE 00  -  mov rcx,[NMS.exe+1624BF0]
"NMS.exe"+A42613: E8 D8 05 1E 00        -  call NMS.exe+C22BF0
"NMS.exe"+A42618: 48 85 C0              -  test rax,rax
"NMS.exe"+A4261B: 74 1A                 -  je NMS.exe+A42637
"NMS.exe"+A4261D: 4C 8B 08              -  mov r9,[rax]
"NMS.exe"+A42620: F3 0F 10 5E 04        -  movss xmm3,[rsi+04]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1672</ID>
                  <Description>"Disco Lasers"</Description>
                  <LastState/>
                  <Color>8000FF</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
AddressList = getAddressList()
cRed = AddressList.getMemoryRecordByDescription('Red (0.0 to 1.0)')
memoryrecord_freeze(cRed)

cGreen = AddressList.getMemoryRecordByDescription('Green (0.0 to 1.0)')
memoryrecord_freeze(cGreen)

cBlue = AddressList.getMemoryRecordByDescription('Blue (0.0 to 1.0)')
memoryrecord_freeze(cBlue)

ColorTimer = createTimer(getMainForm(), false)
ColorTimer:setInterval(200)
ColorTimer:setOnTimer(function(sender)
memoryrecord_setValue(cRed, 1/math.random(0,255))
memoryrecord_setValue(cGreen, 1/math.random(0,255))
memoryrecord_setValue(cBlue, 1/math.random(0,255))
end)
ColorTimer:setEnabled(true)
{$asm}
[DISABLE]
{$lua}
if ColorTimer ~= nil then ColorTimer.Enabled = false; object_destroy(ColorTimer); ColorTimer = nil end
memoryrecord_unfreeze(cRed)
memoryrecord_unfreeze(cGreen)
memoryrecord_unfreeze(cBlue)
{$asm}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>204</ID>
                  <Description>"Base Address"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>laser_color_ptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>205</ID>
                      <Description>"Red (0.0 to 1.0)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>206</ID>
                      <Description>"Green (0.0 to 1.0)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>207</ID>
                      <Description>"Blue (0.0 to 1.0)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>197</ID>
              <Description>"Mouseover Object Pointer"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(mouseover_mine,NMS.exe,8B 91 F8 00 00 00 85)
alloc(newmem,$1000,mouseover_mine)

label(code)
label(return)
label(mouseover_mine_ptr)

newmem:
  mov rdx,mouseover_mine_ptr
  mov [rdx],rcx
code:
  mov edx,[rcx+000000F8]
  jmp return

mouseover_mine_ptr:
  dq 0

mouseover_mine:
  jmp newmem
  nop
return:
registersymbol(mouseover_mine)
registersymbol(mouseover_mine_ptr)

[DISABLE]
mouseover_mine:
  db 8B 91 F8 00 00 00
unregistersymbol(mouseover_mine)
unregistersymbol(mouseover_mine_ptr)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+47BD40

"NMS.exe"+47BD20: 49 3B D3                 -  cmp rdx,r11
"NMS.exe"+47BD23: 7C E0                    -  jl NMS.exe+47BD05
"NMS.exe"+47BD25: 33 C0                    -  xor eax,eax
"NMS.exe"+47BD27: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD2C: C3                       -  ret 
"NMS.exe"+47BD2D: 49 63 C1                 -  movsxd  rax,r9d
"NMS.exe"+47BD30: 48 69 C0 D0 00 00 00     -  imul rax,rax,000000D0
"NMS.exe"+47BD37: 48 03 03                 -  add rax,[rbx]
"NMS.exe"+47BD3A: 48 8B 5C 24 08           -  mov rbx,[rsp+08]
"NMS.exe"+47BD3F: C3                       -  ret 
// ---------- INJECTING HERE ----------
"NMS.exe"+47BD40: 8B 91 F8 00 00 00        -  mov edx,[rcx+000000F8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+47BD46: 85 D2                    -  test edx,edx
"NMS.exe"+47BD48: 7E 55                    -  jle NMS.exe+47BD9F
"NMS.exe"+47BD4A: 8B C2                    -  mov eax,edx
"NMS.exe"+47BD4C: 66 0F 6E C2              -  movd xmm0,edx
"NMS.exe"+47BD50: 0F 57 D2                 -  xorps xmm2,xmm2
"NMS.exe"+47BD53: 2B 81 FC 00 00 00        -  sub eax,[rcx+000000FC]
"NMS.exe"+47BD59: B9 00 00 00 00           -  mov ecx,00000000
"NMS.exe"+47BD5E: 0F 48 C1                 -  cmovs eax,ecx
"NMS.exe"+47BD61: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"NMS.exe"+47BD64: 66 0F 6E C8              -  movd xmm1,eax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>198</ID>
                  <Description>"Base Address"</Description>
                  <LastState RealAddress="00000000"/>
                  <VariableType>String</VariableType>
                  <Length>0</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>mouseover_mine_ptr</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>200</ID>
                      <Description>"Damage Taken"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+fc</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>199</ID>
                      <Description>"Damage Capacity"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>+f8</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>203</ID>
              <Description>"One-Hit Kills"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(onehit,NMS.exe,01 86 FC 00 00 00)
alloc(newmem,$1000,onehit)

label(code)
label(return)

newmem:
  mov eax,[rsi+000000F8]
code:
  add [rsi+000000FC],eax
  jmp return

onehit:
  jmp newmem
  nop
return:
registersymbol(onehit)

[DISABLE]
onehit:
  db 01 86 FC 00 00 00
unregistersymbol(onehit)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+8C0ADF

"NMS.exe"+8C0AC2: 48 8B 56 28           -  mov rdx,[rsi+28]
"NMS.exe"+8C0AC6: 80 7A 24 00           -  cmp byte ptr [rdx+24],00
"NMS.exe"+8C0ACA: 74 06                 -  je NMS.exe+8C0AD2
"NMS.exe"+8C0ACC: 41 8B 46 78           -  mov eax,[r14+78]
"NMS.exe"+8C0AD0: EB 04                 -  jmp NMS.exe+8C0AD6
"NMS.exe"+8C0AD2: 41 8B 46 74           -  mov eax,[r14+74]
"NMS.exe"+8C0AD6: 3B 42 28              -  cmp eax,[rdx+28]
"NMS.exe"+8C0AD9: 7E 0C                 -  jle NMS.exe+8C0AE7
"NMS.exe"+8C0ADB: 85 C0                 -  test eax,eax
"NMS.exe"+8C0ADD: 7E 08                 -  jle NMS.exe+8C0AE7
// ---------- INJECTING HERE ----------
"NMS.exe"+8C0ADF: 01 86 FC 00 00 00     -  add [rsi+000000FC],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+8C0AE5: B3 01                 -  mov bl,01
"NMS.exe"+8C0AE7: 85 C9                 -  test ecx,ecx
"NMS.exe"+8C0AE9: 7E 1A                 -  jle NMS.exe+8C0B05
"NMS.exe"+8C0AEB: 2B 8E FC 00 00 00     -  sub ecx,[rsi+000000FC]
"NMS.exe"+8C0AF1: 83 F9 01              -  cmp ecx,01
"NMS.exe"+8C0AF4: 7D 0F                 -  jnl NMS.exe+8C0B05
"NMS.exe"+8C0AF6: 48 8D 8E C0 01 00 00  -  lea rcx,[rsi+000001C0]
"NMS.exe"+8C0AFD: 49 8B D6              -  mov rdx,r14
"NMS.exe"+8C0B00: E8 AB 0F FE FF        -  call NMS.exe+8A1AB0
"NMS.exe"+8C0B05: 84 DB                 -  test bl,bl
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1596</ID>
              <Description>"Anti Profanity Filter"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(profanity1,ProfanityFilter_x64_v120.dll,F6 41 04 01 74 09)
profanity1:
db 90 90 90 90
registersymbol(profanity1)

aobscanmodule(profanity2,ProfanityFilter_x64_v120.dll,0F 8C * * * * 48 8B 54 24 78)
profanity2:
db 0F 8F
registersymbol(profanity2)

aobscanmodule(profanity3,ProfanityFilter_x64_v120.dll,74 0B 80 7C 24 3B 00)
profanity3:
db 75 0B
registersymbol(profanity3)

[DISABLE]
profanity1:
db F6 41 04 01

profanity2:
db 0F 8C

profanity3:
db 74 0B

unregistersymbol(profanity1)
unregistersymbol(profanity2)
unregistersymbol(profanity3)

{
// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+1220
ProfanityFilter_x64_v120.dll+1208: FF 15 BA3E0000  - call qword ptr [7FF8DB3550C8]
ProfanityFilter_x64_v120.dll+120E: EB E5 - jmp 7FF8DB3511F5
ProfanityFilter_x64_v120.dll+1210: B8 01000090 - mov eax,90000001
ProfanityFilter_x64_v120.dll+1215: 48 83 C4 40 - add rsp,40
ProfanityFilter_x64_v120.dll+1219: 41 5E - pop r14
ProfanityFilter_x64_v120.dll+121B: 5F - pop rdi
ProfanityFilter_x64_v120.dll+121C: 5E - pop rsi
ProfanityFilter_x64_v120.dll+121D: 5D - pop rbp
ProfanityFilter_x64_v120.dll+121E: 5B - pop rbx
ProfanityFilter_x64_v120.dll+121F: C3 - ret
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+1220: F6 41 04 01 - test byte ptr [rcx+04],01
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+1224: 74 09 - je 7FF8DB35122F
ProfanityFilter_x64_v120.dll+1226: 83 79 38 00 - cmp dword ptr [rcx+38],00
ProfanityFilter_x64_v120.dll+122A: 76 03 - jna 7FF8DB35122F
ProfanityFilter_x64_v120.dll+122C: B0 01 - mov al,01
ProfanityFilter_x64_v120.dll+122E: C3 - ret
ProfanityFilter_x64_v120.dll+122F: 32 C0  - xor al,al
ProfanityFilter_x64_v120.dll+1231: C3 - ret
ProfanityFilter_x64_v120.dll+1232: CC - int 3
ProfanityFilter_x64_v120.dll+1233: CC - int 3
ProfanityFilter_x64_v120.dll+1234: CC - int 3

// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+29EF
ProfanityFilter_x64_v120.dll+29C5: 45 8D 65 01  - lea r12d,[r13+01]
ProfanityFilter_x64_v120.dll+29C9: 8B 44 24 64  - mov eax,[rsp+64]
ProfanityFilter_x64_v120.dll+29CD: 48 8B 54 24 68  - mov rdx,[rsp+68]
ProfanityFilter_x64_v120.dll+29D2: 48 8B BC 24 E0000000  - mov rdi,[rsp+000000E0]
ProfanityFilter_x64_v120.dll+29DA: 8B 74 24 60  - mov esi,[rsp+60]
ProfanityFilter_x64_v120.dll+29DE: FF C0  - inc eax
ProfanityFilter_x64_v120.dll+29E0: 48 FF C2  - inc rdx
ProfanityFilter_x64_v120.dll+29E3: 89 44 24 64  - mov [rsp+64],eax
ProfanityFilter_x64_v120.dll+29E7: 48 89 54 24 68  - mov [rsp+68],rdx
ProfanityFilter_x64_v120.dll+29EC: 3B 47 08  - cmp eax,[rdi+08]
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+29EF: 0F8C 1BF3FFFF - jl 7FF8DB351D10
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+29F5: 48 8B 54 24 78  - mov rdx,[rsp+78]
ProfanityFilter_x64_v120.dll+29FA: FF 44 24 5C  - inc [rsp+5C]
ProfanityFilter_x64_v120.dll+29FE: 48 FF C2  - inc rdx
ProfanityFilter_x64_v120.dll+2A01: 48 89 54 24 78  - mov [rsp+78],rdx
ProfanityFilter_x64_v120.dll+2A06: 48 3B 94 24 88000000  - cmp rdx,[rsp+00000088]
ProfanityFilter_x64_v120.dll+2A0E: 0F8D 7BF2FFFF - jnl 7FF8DB351C8F
ProfanityFilter_x64_v120.dll+2A14: 4C 8B 84 24 80000000  - mov r8,[rsp+00000080]
ProfanityFilter_x64_v120.dll+2A1C: E9 B1F2FFFF - jmp 7FF8DB351CD2
ProfanityFilter_x64_v120.dll+2A21: CC - int 3
ProfanityFilter_x64_v120.dll+2A22: CC - int 3

// ORIGINAL CODE - INJECTION POINT: ProfanityFilter_x64_v120.dll+24CC
ProfanityFilter_x64_v120.dll+249F: E9 53FEFFFF - jmp 7FF8DB3522F7
ProfanityFilter_x64_v120.dll+24A4: 48 8B 5C 24 48  - mov rbx,[rsp+48]
ProfanityFilter_x64_v120.dll+24A9: 0FB6 BC 24 F0000000  - movzx edi,byte ptr [rsp+000000F0]
ProfanityFilter_x64_v120.dll+24B1: 0FB6 D0  - movzx edx,al
ProfanityFilter_x64_v120.dll+24B4: E9 4BFEFFFF - jmp 7FF8DB352304
ProfanityFilter_x64_v120.dll+24B9: 0FB6 7C 24 32  - movzx edi,byte ptr [rsp+32]
ProfanityFilter_x64_v120.dll+24BE: 44 0FB6 7C 24 33  - movzx r15d,byte ptr [rsp+33]
ProfanityFilter_x64_v120.dll+24C4: 40 84 FF  - test dil,dil
ProfanityFilter_x64_v120.dll+24C7: 74 10 - je 7FF8DB3524D9
ProfanityFilter_x64_v120.dll+24C9: 45 84 FF  - test r15l,r15l
// ---------- INJECTING HERE ----------
ProfanityFilter_x64_v120.dll+24CC: 74 0B - je 7FF8DB3524D9
// ---------- DONE INJECTING  ----------
ProfanityFilter_x64_v120.dll+24CE: 80 7C 24 3B 00 - cmp byte ptr [rsp+3B],00
ProfanityFilter_x64_v120.dll+24D3: 75 04 - jne 7FF8DB3524D9
ProfanityFilter_x64_v120.dll+24D5: B0 01 - mov al,01
ProfanityFilter_x64_v120.dll+24D7: EB 02 - jmp 7FF8DB3524DB
ProfanityFilter_x64_v120.dll+24D9: 32 C0  - xor al,al
ProfanityFilter_x64_v120.dll+24DB: 80 7C 24 35 00 - cmp byte ptr [rsp+35],00
ProfanityFilter_x64_v120.dll+24E0: 75 0E - jne 7FF8DB3524F0
ProfanityFilter_x64_v120.dll+24E2: 80 7C 24 3A 00 - cmp byte ptr [rsp+3A],00
ProfanityFilter_x64_v120.dll+24E7: 74 0F - je 7FF8DB3524F8
ProfanityFilter_x64_v120.dll+24E9: 80 7C 24 38 00 - cmp byte ptr [rsp+38],00
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7946</ID>
          <Description>"Galactic Map Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>00FF00</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(mapAOB,NMS.exe,F3 0F 11 44 24 40 84 C0 74 ** 89)
alloc(newmem,2048,mapAOB)
label(returnhere)
label(originalcode)
label(exit)
label(mapspeed)
registersymbol(mapspeed)
registersymbol(mapAOB)

newmem:
movss xmm0,[mapspeed]
movss [rsp+40],xmm0
jmp exit

originalcode:
movss [rsp+40],xmm0

exit:
jmp returnhere

//
mapspeed:
dd (float)10
//

mapAOB:
jmp newmem
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
mapAOB:
movss [rsp+40],xmm0
//Alt: db F3 0F 11 44 24 40

unregistersymbol(mapspeed)
unregistersymbol(mapAOB)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7822</ID>
              <Description>"value"</Description>
              <VariableType>Float</VariableType>
              <Address>mapspeed</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <Value>150</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>113</Key>
                  </Keys>
                  <Value>2.75</Value>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>7823</ID>
                  <Description>":: Galactic Map advice: 2.75 is default, starfield display takes a second to catch up at 200"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>7824</ID>
                  <Description>":: 200 is good for rushing to galactic centre"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>7940</ID>
                  <Description>"Planetside Shadow Fix (')"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(shadowAOB,NMS.exe,F3 0F 11 80 20 02 00 00 F3 0F ** ** ** ** ** ** F3 0F 11 88 DC 01 00 00 F3 0F 11 B0 D8 01 00 00)
alloc(newmem,2048,"NMS.exe"+C36B50) 
label(returnhere)
label(originalcode)
label(exit)
label(shadows1)
label(shadows2)
registersymbol(shadows1)
registersymbol(shadows2)
registersymbol(shadowAOB)

newmem:
movss xmm0,[shadows1]
movss [rax+00000220],xmm0
movss xmm0,[shadows2]
movss [rax+00000240],xmm0
jmp exit

originalcode:
movss [rax+00000220],xmm0

exit:
jmp returnhere

//
shadows1:
dd (float)1200
//
shadows2:
dd (float)3840
//

shadowAOB:
jmp newmem
nop
nop
nop
returnhere:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
shadowAOB:
movss [rax+00000220],xmm0
//Alt: db F3 0F 11 80 20 02 00 00
unregistersymbol(shadows1)
unregistersymbol(shadows2)
unregistersymbol(shadowAOB)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>192</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7969</ID>
          <Description>"Ignore"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FFFFFF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2116</ID>
              <Description>"Blink"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 1.33
  Author : Squall8
}

[ENABLE]

aobscanmodule(retdata,NMS.exe,48 ?? ?? ?? 48 ?? ?? ?? F3 ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? ?? F3 ?? ?? ?? ?? F3 ?? ?? ?? ?? F3)
alloc(newmem,$1000,"NMS.exe"+CD9E06)

label(code)
label(return)
label(ret_x)
label(ret_y)
label(ret_z)
label(retvalue)

registersymbol(retdata)
registersymbol(ret_x)
registersymbol(ret_y)
registersymbol(ret_z)
registersymbol(retvalue)

aobscanmodule(coorddata,NMS.exe,48 ?? ?? ?? 41 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 41 ?? ?? ?? ?? ?? ?? ?? 41 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? F3)
alloc(newmem2,$1000,"NMS.exe"+13D7E64)

registersymbol(coorddata)
registersymbol(blink_s1)
registersymbol(coordvalue)
label(coordvalue)
label(blink_s1)
label(loadblink)
label(code2)
label(return2)

newmem:
  mov [retvalue],rsi
  movss [rsi+10],xmm9
  fld [rsi+10]
  fstp [ret_x]
  fld [rsi+14]
  fstp [ret_y]
  fld [rsi+18]
  fstp [ret_z]
  mov [blink_s],0
  jmp return

blink_s:
  dq 0

ret_x:
  dq 0

ret_y:
  dq 0

ret_z:
  dq 0

retvalue:
  dq 0

code:
  movss [rsi+10],xmm9
  jmp return

newmem2:
  cmp [r8+24],(float)1
  jne code2
  mov [coordvalue],r8
  cmp [blink_s1],1
  je loadblink
  jmp code2

loadblink:
  movaps xmm0,[r8]
  movaps [rsp],xmm6
  fld [ret_x]
  fstp [r8]
  fld [ret_y]
  fstp [r8+04]
  fld [ret_z]
  fstp [r8+08]
  mov [blink_s1],0
  jmp return2

code2:
  movaps xmm0,[r8]
  movaps [rsp],xmm6
  jmp return2

blink_s1:
  dq 0

coordvalue:
  dq 0

retdata+0E:
  jmp newmem
  nop
return:

coorddata+04:
  jmp newmem2
  nop
  nop
  nop
return2:

[DISABLE]

retdata+0E:
  db F3 44 0F 11 4E 10

unregistersymbol(retdata)
unregistersymbol(blink_s)
unregistersymbol(ret_x)
unregistersymbol(ret_y)
unregistersymbol(ret_z)
unregistersymbol(retvalue)
dealloc(newmem)

coorddata+04:
  db 41 0F 28 00 0F 29 34 24

unregistersymbol(coorddata)
unregistersymbol(coordvalue)
unregistersymbol(blink_s1)
dealloc(newmwm2)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+CD9E06

"NMS.exe"+CD9DE2: 74 02                          -  je NMS.exe+CD9DE6
"NMS.exe"+CD9DE4: 33 C0                          -  xor eax,eax
"NMS.exe"+CD9DE6: 33 D2                          -  xor edx,edx
"NMS.exe"+CD9DE8: 8B 88 E0 00 00 00              -  mov ecx,[rax+000000E0]
"NMS.exe"+CD9DEE: E8 BD B5 91 FF                 -  call NMS.exe+5F53B0
"NMS.exe"+CD9DF3: 48 85 C0                       -  test rax,rax
"NMS.exe"+CD9DF6: 74 04                          -  je NMS.exe+CD9DFC
"NMS.exe"+CD9DF8: 48 8B 40 30                    -  mov rax,[rax+30]
"NMS.exe"+CD9DFC: 48 89 46 58                    -  mov [rsi+58],rax
"NMS.exe"+CD9E00: F3 44 0F 10 4D 10              -  movss xmm9,[rbp+10]
// ---------- INJECTING HERE ----------
"NMS.exe"+CD9E06: F3 44 0F 11 4E 10              -  movss [rsi+10],xmm9
// ---------- DONE INJECTING  ----------
"NMS.exe"+CD9E0C: F3 0F 10 7D 14                 -  movss xmm7,[rbp+14]
"NMS.exe"+CD9E11: F3 0F 11 7E 14                 -  movss [rsi+14],xmm7
"NMS.exe"+CD9E16: F3 44 0F 10 55 18              -  movss xmm10,[rbp+18]
"NMS.exe"+CD9E1C: F3 44 0F 11 56 18              -  movss [rsi+18],xmm10
"NMS.exe"+CD9E22: C7 46 1C 00 00 80 3F           -  mov [rsi+1C],3F800000
"NMS.exe"+CD9E29: F3 0F 10 75 20                 -  movss xmm6,[rbp+20]
"NMS.exe"+CD9E2E: F3 0F 11 76 20                 -  movss [rsi+20],xmm6
"NMS.exe"+CD9E33: F3 44 0F 10 5D 24              -  movss xmm11,[rbp+24]
"NMS.exe"+CD9E39: F3 44 0F 11 5E 24              -  movss [rsi+24],xmm11
"NMS.exe"+CD9E3F: F3 44 0F 10 45 28              -  movss xmm8,[rbp+28]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>2122</ID>
                  <Description>"Load Blink (Tilde Key)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>blink_s1</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>192</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>2140</ID>
                  <Description>"Ret Pos X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>ret_x</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2141</ID>
                  <Description>"Ret Pos Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>ret_y</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2142</ID>
                  <Description>"Ret Pos Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>ret_z</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>2143</ID>
                  <Description>"Ret X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retvalue</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2144</ID>
                  <Description>"Ret Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retvalue</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2145</ID>
                  <Description>"Ret Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retvalue</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2146</ID>
                  <Description>"Pos X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>coordvalue</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2147</ID>
                  <Description>"Pos Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>coordvalue</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>2148</ID>
                  <Description>"Pos Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>coordvalue</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7977</ID>
              <Description>"Glyphs"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2017-11-14
  Author : Squall8
}

[ENABLE]

aobscanmodule(glyphs,NMS.exe,0D 00 00 00 0F 10 00 0F 11 01 0F 10 48 10 0F 11 49 10)
alloc(newmem,$1000,glyphs)

label(code)
label(return)
label(glyph)

newmem:
  mov [glyph],rax

code:
  movups xmm1,[rax+10]
  movups [rcx+10],xmm1
  jmp return

glyph:
  dq 0

glyphs+0A:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(glyphs)
registersymbol(glyph)

[DISABLE]

glyphs+0A:
  db 0F 10 48 10 0F 11 49 10

unregistersymbol(glyphs)
unregistersymbol(glyph)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7978</ID>
                  <Description>"Glyphs"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>glyph</Address>
                  <Offsets>
                    <Offset>1C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7988</ID>
          <Description>"Ignore Units"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-03-15
  Author : Squall8
}

[ENABLE]

aobscanmodule(ignoreunits,NMS.exe,73 1A E8 BC 2D EE FF) //Blueprint Dealer
registersymbol(ignoreunits)

ignoreunits:
  db EB

aobscanmodule(ignoreunits2,NMS.exe,73 37 80 3D 37 32 2F 01 00) //Shops
registersymbol(ignoreunits2)

ignoreunits2:
  db EB

aobscanmodule(ignoreunits3,NMS.exe,72 67 48 8D 8E 10 0E 00 00) //Ship Dealer
registersymbol(ignoreunits3)

ignoreunits3:
  db 90 90

[DISABLE]

ignoreunits:
  db 73

unregistersymbol(ignoreunits)

ignoreunits2:
  db 73

unregistersymbol(ignoreunits2)

ignoreunits3:
  db 72 67

unregistersymbol(ignoreunits3)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8046</ID>
      <Description>"[NMS Next Update]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8039</ID>
          <Description>"Inf Health"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhp,NMS.exe,01 86 08 01 00 00)
registersymbol(infhp)

infhp:
  db 90 90 90 90 90 90

[DISABLE]

infhp:
  db 01 86 08 01 00 00

unregistersymbol(infhp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7994</ID>
          <Description>"Inf Sprint"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infsp,NMS.exe,F3 0F 11 87 94 2C 00 00 48)
registersymbol(infsp)

infsp:
  db 90 90 90 90 90 90 90 90

aobscanmodule(infsp2,NMS.exe,F3 0F 11 8F 94 2C 00 00 44 0F 2F F1 72 43)
registersymbol(infsp2)

infsp2:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infsp:
  db F3 0F 11 87 94 2C 00 00

unregistersymbol(infsp)

infsp2:
  db F3 0F 11 8F 94 2C 00 00

unregistersymbol(infsp2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7992</ID>
          <Description>"Inf Jetpack"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infjp,NMS.exe,F3 0F 11 87 54 19 00 00 EB)
registersymbol(infjp)

infjp:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infjp:
  db F3 0F 11 87 54 19 00 00

unregistersymbol(infjp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8073</ID>
          <Description>"Always Have Jetpack Power Surge (Pick Plant First)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(ahjps,NMS.exe,F3 0F 11 89 78 19 00 00)
alloc(newmem,$1000,ahjps)

label(code)
label(return)

newmem:

code:
  mov [rcx+00001978],(float)1
  jmp return

ahjps:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(ahjps)

[DISABLE]

ahjps:
  db F3 0F 11 89 78 19 00 00

unregistersymbol(ahjps)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8048</ID>
          <Description>"Inf Scanner"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infscanner,NMS.exe,89 79 10 89 79 38)
registersymbol(infscanner)

infscanner:
  db 90 90 90

[DISABLE]

infscanner:
  db 89 79 10

unregistersymbol(infscanner)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8024</ID>
          <Description>"Inf Life Support"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infls,NMS.exe,89 48 18 48 8B 0D ** ** ** ** 48 81 C1)
registersymbol(infls)

infls:
  db 90 90 90

[DISABLE]

infls:
  db 89 48 18

unregistersymbol(infls)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8023</ID>
          <Description>"Inf Ammo"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infammo,NMS.exe,47 29 A4 B7 30 12 00 00)
registersymbol(infammo)

infammo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infammo:
  db 47 29 A4 B7 30 12 00 00

unregistersymbol(infammo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8025</ID>
          <Description>"Inf Grenades"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infpll,NMS.exe,FF 4B 18 F3 0F 2C 85 18 01 00 00)
registersymbol(infpll)

infpll:
  db 90 90 90

[DISABLE]

infpll:
  db FF 4B 18

unregistersymbol(infpll)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8022</ID>
          <Description>"Inf Mining Beam"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infmb,NMS.exe,29 43 18 41 01 B4 BC 30 12 00 00)
registersymbol(infmb)

infmb:
  db 90 90 90

[DISABLE]

infmb:
  db 29 43 18

unregistersymbol(infmb)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8068</ID>
          <Description>"Inf Blaze Javelin"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infbj,NMS.exe,89 43 18 EB 06)
registersymbol(infbj)

infbj:
  db 90 90 90

[DISABLE]

infbj:
  db 89 43 18

unregistersymbol(infbj)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8045</ID>
          <Description>"Inf Terrain Manipulator"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(inftm,NMS.exe,41 89 4D 18 EB 02)
registersymbol(inftm)

inftm:
  db 90 90 90 90

[DISABLE]

inftm:
  db 41 89 4D 18

unregistersymbol(inftm)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8021</ID>
          <Description>"Inf Hazard Protection"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhzp,NMS.exe,F3 0F 58 E5 41 0F 28 C0)
registersymbol(infhzp)

infhzp:
  db 90 90 90 90

[DISABLE]

infhzp:
  db F3 0F 58 E5

unregistersymbol(infhzp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8054</ID>
          <Description>"No Mining Beam Overheat"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(nombo,NMS.exe,F3 0F 11 8E A0 11 00 00 F3)
registersymbol(nombo)

nombo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

nombo:
  db F3 0F 11 8E A0 11 00 00

unregistersymbol(nombo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8135</ID>
          <Description>"No Ship Overheat"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(nosoh,NMS.exe,F3 41 0F 11 8C 86 44 17 00 00)
registersymbol(nosoh)

nosoh:
  db 90 90 90 90 90 90 90 90 90 90

[DISABLE]

nosoh:
  db F3 41 0F 11 8C 86 44 17 00 00

unregistersymbol(nosoh)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8138</ID>
          <Description>"No Rocket Launcher Overheat"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(norlo,NMS.exe,41 89 84 8E 60 17 00 00)
registersymbol(norlo)

norlo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

norlo:
  db 41 89 84 8E 60 17 00 00

unregistersymbol(norlo)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8067</ID>
          <Description>"Inf Hyperdrive"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhd,NMS.exe,29 47 18 EB 03)
registersymbol(infhd)

infhd:
  db 90 90 90

[DISABLE]

infhd:
  db 29 47 18

unregistersymbol(infhd)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8016</ID>
          <Description>"Inf Launch Thrusters"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(inflt,NMS.exe,89 4B 18 48 8B D3)
registersymbol(inflt)

inflt:
  db 90 90 90

aobscanmodule(inflt2,NMS.exe,89 47 18 44 89 6C 24 38)
registersymbol(inflt2)

inflt2:
  db 90 90 90

[DISABLE]

inflt:
  db 89 4B 18

unregistersymbol(inflt)

inflt2:
  db 89 47 18

unregistersymbol(inflt2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8040</ID>
          <Description>"Inf Pulse Engine"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infpe,NMS.exe,41 FF 4E 18 89 B7 C4 00 00 00)
registersymbol(infpe)

infpe:
  db 90 90 90 90

[DISABLE]

infpe:
  db 41 FF 4E 18

unregistersymbol(infpe)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8071</ID>
          <Description>"Inf Deflector Shield"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(infds,NMS.exe,01 43 18 45 8B C4)
registersymbol(infds)

infds:
  db 90 90 90

[DISABLE]

infds:
  db 01 43 18

unregistersymbol(infds)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8084</ID>
          <Description>"Inf Exocraft Boost"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(infeb,NMS.exe,F3 0F 11 87 E4 05 00 00 44)
registersymbol(infeb)

infeb:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infeb:
  db F3 0F 11 87 E4 05 00 00

unregistersymbol(infeb)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8075</ID>
          <Description>"Inf Fusion Engine"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(infee,NMS.exe,89 48 18 48 83 C4 20 5B C3 CC)
registersymbol(infee)

infee:
  db 90 90 90

[DISABLE]

infee:
  db 89 48 18

unregistersymbol(infee)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8139</ID>
          <Description>"Inf Exocraft Mining Laser"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(infeml,NMS.exe,45 89 65 18 F3 0F 10 05 ** ** ** ** F3 41 0F)
registersymbol(infeml)

infeml:
  db 90 90 90 90

[DISABLE]

infeml:
  db 45 89 65 18

unregistersymbol(infeml)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8140</ID>
          <Description>"Inf Exocraft Cannon"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(infemc,NMS.exe,45 89 65 18 F3 0F 10 05 ** ** ** ** F3 41 0F)
registersymbol(infemc)

infemc:
  db 90 90 90 90

[DISABLE]

infemc:
  db 45 89 65 18

unregistersymbol(infemc)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8155</ID>
          <Description>"Summon Exocraft Anywhere"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(summon,NMS.exe,80 3C 08 00 0F 84 A7 00 00 00)
alloc(newmem,$1000,summon)

label(code)
label(return)

registersymbol(summon)

newmem:
  mov [rax+rcx],1

code:
  cmp byte ptr [rax+rcx],00
  je NMS.AK::WriteBytesMem::Count+2EDA30
  jmp return

summon:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:

[DISABLE]

summon:
  db 80 3C 08 00 0F 84 A7 00 00 00

unregistersymbol(summon)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8157</ID>
          <Description>"Stack Mods"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8156</ID>
              <Description>"Element Stack"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : MojoW (Findings) / Squall8 (Clean Up)
}

[ENABLE]

aobscanmodule(moreINV,NMS.exe,69 C0 FA 00 00 00 89)
registersymbol(moreINV)

moreINV:
  db 69 C0 50 C3 00 00

aobscanmodule(maxSlotReset,NMS.exe,69 C0 FA 00 00 00 E9)
registersymbol(maxSlotReset)

maxSlotReset:
  db 69 C0 50 C3 00 00

aobscanmodule(TransferSize,NMS.exe,69 D8 FA 00 00 00)
registersymbol(TransferSize)

TransferSize:
  db 69 D8 50 C3 00 00

[DISABLE]

moreINV:
  db 69 C0 FA 00 00 00

unregistersymbol(moreINV)

maxSlotReset:
  db 69 C0 FA 00 00 00

unregistersymbol(maxSlotReset)

TransferSize:
  db 69 D8 FA 00 00 00

unregistersymbol(TransferSize)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8159</ID>
              <Description>"Product Stack"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : MojoW (Findings) / Squall8 (Clean Up)
}

[ENABLE]

aobscanmodule(products,NMS.exe,0F AF 83 CC 00 00 00 EB)
alloc(newmem,$1000,products)

label(code)
label(return)

newmem:

code:
  imul eax,[rbx+000000CC],73
  jmp return

products:
  jmp newmem
  nop
  nop
return:
registersymbol(products)

[DISABLE]

products:
  db 0F AF 83 CC 00 00 00

unregistersymbol(products)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8062</ID>
          <Description>"Bypass Locks"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(bypasslock,NMS.exe,83 79 28 00 7E 12)
registersymbol(bypasslock)

bypasslock:
  db 90 90 90 90

[DISABLE]

bypasslock:
  db 83 79 28 00

unregistersymbol(bypasslock)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8059</ID>
          <Description>"Ignore Crafting Requirements (Non Base Building)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(itr,NMS.exe,00 0F B6 C3 48 8B 5C 24 70 48 8B)
alloc(newmem,$1000,itr)

label(code)
label(return)

registersymbol(itr)

aobscanmodule(ipr,NMS.exe,48 89 74 24 50 0F B6 C3 E9)
alloc(newmem2,$1000,ipr)

label(code2)
label(return2)

registersymbol(ipr)

newmem:

code:
  mov bl,01
  movzx eax,bl
  mov rbx,[rsp+70]
  jmp return

newmem2:

code2:
  mov [rsp+50],rsi
  mov bl,01
  jmp return2

itr+01:
  jmp newmem
  nop
  nop
  nop
return:

ipr:
  jmp newmem2
return2:

[DISABLE]

itr+01:
  db 0F B6 C3 48 8B 5C 24 70

unregistersymbol(itr)
dealloc(newmem)

ipr:
  db 48 89 74 24 50

unregistersymbol(ipr)
dealloc(newmem2)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8074</ID>
          <Description>"Ignore Crafting Requirements (Base Building)"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(icrbb1,NMS.exe,00 8B 01 41 3B C3 75 18 4C 3B 49 08)
registersymbol(icrbb1)

icrbb1+06:
  db 90 90

aobscanmodule(icrbb2,NMS.exe,00 8B 01 41 3B C3 75 18 4C 3B 49 08 75 12 4C 3B 51 10)
registersymbol(icrbb2)

icrbb2+0C:
  db 90 90

aobscanmodule(icrbb3,NMS.exe,00 8B 01 41 3B C3 75 18 4C 3B 49 08 75 12 4C 3B 51 10 75 0C 83 F8 01)
registersymbol(icrbb3)

icrbb3+12:
  db 90 90

aobscanmodule(icrbb4,NMS.exe,75 1A 48 3B 59 08)
registersymbol(icrbb4)

icrbb4:
  db 90 90

aobscanmodule(icrbb5,NMS.exe,75 14 48 3B 79 10)
registersymbol(icrbb5)

icrbb5:
  db 90 90

aobscanmodule(icrbb6,NMS.exe,75 0E 83 F8 01)
registersymbol(icrbb6)

icrbb6:
  db 90 90

aobscanmodule(icrbb7,NMS.exe,EB 04 44 03 51 18)
registersymbol(icrbb7)

icrbb7:
  db 90 90

[DISABLE]

icrbb1+06:
  db 75 18

unregistersymbol(icrbb1)

icrbb2+0C:
  db 75 12

unregistersymbol(icrbb2)

icrbb3+12:
  db 75 0C

unregistersymbol(icrbb3)

icrbb4:
  db 75 1A

unregistersymbol(icrbb4)

icrbb5:
  db 75 14

unregistersymbol(icrbb5)

icrbb6:
  db 75 0E

unregistersymbol(icrbb6)

icrbb7:
  db EB 04

unregistersymbol(icrbb7)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8070</ID>
          <Description>"Ignore Materials For Damaged Components"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(imdc1,NMS.exe,0F 8C EF FE FF FF B8)
registersymbol(imdc1)

imdc1:
  db 90 90 90 90 90 90

aobscanmodule(imdc2,NMS.exe,0F 8C 2F 01 00 00)
registersymbol(imdc2)

imdc2:
  db 90 90 90 90 90 90

[DISABLE]

imdc1:
  db 0F 8C EF FE FF FF

unregistersymbol(imdc1)

imdc2:
  db 0F 8C 2F 01 00 00

unregistersymbol(imdc2)

</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8085</ID>
          <Description>"Always Have Conversation Item"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(ahci1,NMS.exe,75 18 48 8B 48 10 49)
registersymbol(ahci1)

ahci1:
  db 90 90

aobscanmodule(ahci2,NMS.exe,75 0E 83 FA 01)
registersymbol(ahci2)

ahci2:
  db 90 90

aobscanmodule(ahci3,NMS.exe,75 22 48 8B 48 08)
registersymbol(ahci3)

ahci3:
  db 90 90

aobscanmodule(ahci4,NMS.exe,EB 04 44 03 48 18)
registersymbol(ahci4)

ahci4:
  db 90 90

[DISABLE]

ahci1:
  db 75 18

unregistersymbol(ahci1)

ahci2:
  db 75 0E

unregistersymbol(ahci2)

ahci3:
  db 75 22

unregistersymbol(ahci3)

ahci4:
  db EB 04

unregistersymbol(ahci4)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8121</ID>
          <Description>"Galactic Map Speed"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(gms,NMS.exe,F3 0F 11 44 24 2C 84 C0 74 0A F3 0F 10 05)
alloc(newmem,$1000,gms)

label(code)
label(return)
label(gmsp)

registersymbol(gms)
registersymbol(gmsp)

newmem:
  movss xmm0,[gmsp]

code:
  movss [rsp+2C],xmm0
  jmp return

gmsp:
  dq (float)2.75

gms:
  jmp newmem
  nop
return:

[DISABLE]

gms:
  db F3 0F 11 44 24 2C

unregistersymbol(gms)
unregistersymbol(gmsp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8122</ID>
              <Description>"Galactic Map Speed"</Description>
              <LastState Value="2.75" RealAddress="7FF748C4001C"/>
              <VariableType>Float</VariableType>
              <Address>gmsp</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>7981</ID>
          <Description>"Journey Pointers (View Corresponding Menu)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 1.38
  Date   : 2017-11-17
  Author : Squall8
}

[ENABLE]

assert(NMS.AK::WriteBytesMem::Count+4AAE3,48 39 0C 02 75 2F)
alloc(newmem,$1000,NMS.AK::WriteBytesMem::Count+4AAE3)

label(code)
label(return)
label(cmpval)
label(journeyp)

newmem:
  cmp qword ptr [cmpval],rcx
  jne code
  mov [journeyp],rdx

code:
  cmp [rdx+rax],rcx
  jne NMS.AK::WriteBytesMem::Count+4AB18
  jmp return

cmpval:
  dq 1

journeyp:
  dq 0

NMS.AK::WriteBytesMem::Count+4AAE3:
  jmp newmem
  nop
return:
registersymbol(cmpval)
registersymbol(journeyp)

[DISABLE]

NMS.AK::WriteBytesMem::Count+4AAE3:
  db 48 39 0C 02 75 2F

unregistersymbol(cmpval)
unregistersymbol(journeyp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7982</ID>
              <Description>"Value To Find"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Choose One

----------[Milestones]----------

5494769087316969796:Distance Walked (Max:100000)
5575266459342949441:Aliens Met (Max:40)
4993470898080206679:Words Learned (Max:150)
383414849357:Units Earned (Max:2000000)
6868910037801455173:Starships Destroyed (Max:80)
5495884997129553235:Sentinels Destroyed (Max:80)
6869206888661012300:Survived In Extreme Conditions (Max:28900)
5927114651544537412:Times Warped (Max:60)
5497841122519763268:Discovered All Creatures (Max:10)

----------[Lifeforms]----------

5638880925501706836:Gek Standing (Max:100)
5281982689246659668:Gek Missions Completed (Max:60)
5503208822573848404:Gek Words Learned (Max:650)
6436593082216829780:Gek Systems Visited (Max:60)

5638880925502816599:Vykeen Standing (Max:100)
5281982689246659671:Vykeen Missions Completed (Max:60)
5503208822573848407:Vykeen Words Learned (Max:650)
6436593082216829783:Vykeen Systems Visited (Max:60)

5638880925502691397:Korvax Standing (Max:100)
5281982689246659653:Korvax Missions Completed (Max:60)
5503208822573848389:Korvax Words Learned (Max:650)
6436593082216829765:Korvax Systems Visited (Max:60)

----------[Guilds]----------

6007595522374059860:Merchants Guild Standing (Max:100)
5575251066347603796:Merchants Guild Missions Completed (Max:60)
5791439267377007696:Plants Farmed (Max:80)

6007595522374059863:Mercenaries Guild Standing (Max:100)
5575251066347603799:Mercenaries Guild Missions Completed (Max:60)

6007595522374059845:Explorers Guild Standing (Max:100)
5575251066347603781:Explorers Guild Missions Completed (Max:60)
4702694104554946898:Rare Creatures Scanned (Max:50)
</DropDownList>
              <LastState Value="2" RealAddress="7FF748C3002C"/>
              <VariableType>8 Bytes</VariableType>
              <Address>cmpval</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>7983</ID>
                  <Description>"Integer Value"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>journeyp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>7984</ID>
                  <Description>"Float Value"</Description>
                  <VariableType>Float</VariableType>
                  <Address>journeyp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7985</ID>
              <Description>"Journey String Reference"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscan(reflist,41 54 4C 41 53 5F 53 54 4F 52 59 00 00 00 00 00 41 54 4C 41 53 5F 50 41 54 48 00 00 00 00 00 00)
label(reflistp)
registersymbol(reflistp)

reflist:
reflistp:
 
 
[DISABLE]
unregistersymbol(reflistp)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7986</ID>
                  <Description>"Reference Start"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>reflistp</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8086</ID>
          <Description>"Wanted Level"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(wlp,NMS.exe,45 3B BE A8 00 00 00 7C)
alloc(newmem,$1000,wlp)

label(code)
label(return)
label(wlpp)

registersymbol(wlp)
registersymbol(wlpp)

newmem:
  mov [wlpp],r14

code:
  cmp r15d,[r14+000000A8]
  jmp return

wlpp:
  dq 0

wlp:
  jmp newmem
  nop
  nop
return:

[DISABLE]

wlp:
  db 45 3B BE A8 00 00 00

unregistersymbol(wlp)
unregistersymbol(wlpp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8123</ID>
              <Description>"Wanted Level Wont Increase"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(wlwi,NMS.exe,89 5F 48 89 B7 80 00 00 00)
registersymbol(wlwi)

wlwi:
  db 90 90 90

[DISABLE]

wlwi:
  db 89 5F 48

unregistersymbol(wlwi)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8087</ID>
              <Description>"Wanted Level Pointer"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>wlpp</Address>
              <Offsets>
                <Offset>A8</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8088</ID>
          <Description>"Inventory Slot Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(invslots,NMS.exe,48 03 C8 8B 04 8E 0F A3 D0)
alloc(newmem,$1000,invslots)

label(code)
label(return)
label(invslotsp)

registersymbol(invslots)
registersymbol(invslotsp)

newmem:
  mov [invslotsp],rsi

code:
  mov eax,[rsi+rcx*4]
  bt eax,edx
  jmp return

invslotsp:
  dq 0

invslots+03:
  jmp newmem
  nop
return:

[DISABLE]

invslots+03:
  db 8B 04 8E 0F A3 D0

unregistersymbol(invslots)
unregistersymbol(invslotsp)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8089</ID>
              <Description>"Row 1 (set to -1 for all slots)"</Description>
              <LastState Value="15" RealAddress="22831DC6050"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8090</ID>
              <Description>"Row 2"</Description>
              <LastState Value="15" RealAddress="22831DC6054"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8091</ID>
              <Description>"Row 3"</Description>
              <LastState Value="7" RealAddress="22831DC6058"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8092</ID>
              <Description>"Row 4"</Description>
              <LastState Value="0" RealAddress="22831DC605C"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8093</ID>
              <Description>"Row 5"</Description>
              <LastState Value="0" RealAddress="22831DC6060"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8094</ID>
              <Description>"Row 6"</Description>
              <LastState Value="0" RealAddress="22831DC6064"/>
              <VariableType>Byte</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>14</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8095</ID>
              <Description>"Width (Default Max: 8)"</Description>
              <LastState Value="5" RealAddress="22831DC6090"/>
              <VariableType>2 Bytes</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>40</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8096</ID>
              <Description>"Height (Default Max: 6)"</Description>
              <LastState Value="6" RealAddress="22831DC6092"/>
              <VariableType>2 Bytes</VariableType>
              <Address>invslotsp</Address>
              <Offsets>
                <Offset>42</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8014</ID>
          <Description>"Money Pointer (View Inv)"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(units,NMS.exe,44 8B A1 44 0D 00 00)
alloc(newmem,$1000,units)

label(code)
label(return)
label(unitsp)

registersymbol(units)
registersymbol(unitsp)

newmem:
  mov [unitsp],rcx

code:
  mov r12d,[rcx+00000D44]
  jmp return

unitsp:
  dq 0

units:
  jmp newmem
  nop
  nop
return:

[DISABLE]

units:
  db 44 8B A1 44 0D 00 00

unregistersymbol(units)
unregistersymbol(unitsp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8015</ID>
              <Description>"Units"</Description>
              <LastState Value="65227488" RealAddress="22831DC5D54"/>
              <VariableType>4 Bytes</VariableType>
              <Address>unitsp</Address>
              <Offsets>
                <Offset>D44</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8055</ID>
              <Description>"Nanites"</Description>
              <LastState Value="987479" RealAddress="22831DC5D58"/>
              <VariableType>4 Bytes</VariableType>
              <Address>unitsp</Address>
              <Offsets>
                <Offset>D48</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8056</ID>
              <Description>"Quicksilver"</Description>
              <LastState Value="0" RealAddress="22831DC5D5C"/>
              <VariableType>4 Bytes</VariableType>
              <Address>unitsp</Address>
              <Offsets>
                <Offset>D4C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8041</ID>
          <Description>"Current Inventory Stats Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(cincst,NMS.exe,F3 45 0F 2C 46 10)
alloc(newmem,$1000,cincst)

label(code)
label(return)
label(cisp)

registersymbol(cincst)
registersymbol(cisp)

newmem:
  mov [cisp],r14

code:
  cvttss2si r8d,[r14+10]
  jmp return

cisp:
  dq 0

cincst:
  jmp newmem
  nop
return:

[DISABLE]

cincst:
  db F3 45 0F 2C 46 10

unregistersymbol(cincst)
unregistersymbol(cisp)
dealloc(newmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8042</ID>
              <Description>"Damage"</Description>
              <LastState Value="50000" RealAddress="227CB979B10"/>
              <VariableType>Float</VariableType>
              <Address>cisp</Address>
              <Offsets>
                <Offset>-20</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8043</ID>
              <Description>"Shield/Mining"</Description>
              <LastState Value="50000" RealAddress="227CB979B28"/>
              <VariableType>Float</VariableType>
              <Address>cisp</Address>
              <Offsets>
                <Offset>-8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8044</ID>
              <Description>"Hyperdrive/Scanner"</Description>
              <LastState Value="500000" RealAddress="227CB979B40"/>
              <VariableType>Float</VariableType>
              <Address>cisp</Address>
              <Offsets>
                <Offset>10</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8160</ID>
          <Description>"Highlighted Item Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-26
  Author : Cedric (Elements/Products) / Squall8 (Tech)
}

[ENABLE]

aobscanmodule(hoverptr,NMS.exe,32 C0 4C 8D 5C 24 70 49 8B 5B 30 49 8B 6B 38)
alloc(newmem,$1000,hoverptr)

label(code)
label(return)
label(pHover)

registersymbol(hoverptr)
registersymbol(pHover)

aobscanmodule(hitem2,NMS.exe,4C 8B F1 83 3A 01)
alloc(newmem2,$1000,hitem2)

label(code2)
label(return2)

registersymbol(hitem2)

newmem:
cmp rax, 1
jne code
mov [pHover], rdi

code:
  mov rbx,[r11+30]
  mov rbp,[r11+38]
  jmp return

pHover:
dq 0

newmem2:

code2:
  mov r14,rcx
  cmp dword ptr [rdx],01
  mov [pHover],rdx
  jmp return2

hoverptr+07:
  jmp newmem
  nop
  nop
  nop
return:

hitem2:
  jmp newmem2
  nop
return2:

[DISABLE]

hoverptr+07:
  db 49 8B 5B 30 49 8B 6B 38

unregistersymbol(hoverptr)
unregistersymbol(pHover)
dealloc(newmem)

hitem2:
  db 4C 8B F1 83 3A 01

unregistersymbol(hitem2)
dealloc(newmem2)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>8161</ID>
              <Description>"Item Name"</Description>
              <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">[Elements (New)]-----------------------------------------------------------

45 58 5F 47 52 45 45 4E 00 00 00 00 00 00 00 00:Activated Emeril
45 58 5F 42 4C 55 45 00 00 00 00 00 00 00 00 00:Activated Indium
54 4F 58 49 43 31 00 00 00 00 00 00 00 00 00 00:Ammonia
50 4C 41 4E 54 5F 44 55 53 54 00 00 00 00 00 00:Cactus Flesh
52 45 44 32 00 00 00 00 00 00 00 00 00 00 00 00:Cadmium
46 55 45 4C 31 00 00 00 00 00 00 00 00 00 00 00:Carbon
57 41 54 45 52 32 00 00 00 00 00 00 00 00 00 00:Chlorine
53 54 45 4C 4C 41 52 32 00 00 00 00 00 00 00 00:Chromatic Metal
43 41 56 45 31 00 00 00 00 00 00 00 00 00 00 00:Cobalt
46 55 45 4C 32 00 00 00 00 00 00 00 00 00 00 00:Condensed Carbon
59 45 4C 4C 4F 57 32 00 00 00 00 00 00 00 00 00:Copper
4C 41 55 4E 43 48 53 55 42 32 00 00 00 00 00 00:Deuterium
4C 41 55 4E 43 48 53 55 42 00 00 00 00 00 00 00:Di-Hydrogen
43 4F 4C 44 31 00 00 00 00 00 00 00 00 00 00 00:Dioxite
47 52 45 45 4E 32 00 00 00 00 00 00 00 00 00 00:Emeril
4C 41 4E 44 31 00 00 00 00 00 00 00 00 00 00 00:Ferrite Dust
50 4C 41 4E 54 5F 53 4E 4F 57 00 00 00 00 00 00:Frost Crystal
50 4C 41 4E 54 5F 52 41 44 49 4F 00 00 00 00 00:Gamma Root
41 53 54 45 52 4F 49 44 32 00 00 00 00 00 00 00:Gold
42 4C 55 45 32 00 00 00 00 00 00 00 00 00 00 00:Indium
43 41 56 45 32 00 00 00 00 00 00 00 00 00 00 00:Ionised Cobalt
50 4C 41 4E 54 5F 57 41 54 45 52 00 00 00 00 00:Kelp Sac
4C 41 4E 44 33 00 00 00 00 00 00 00 00 00 00 00:Magnetised Ferrite
50 4C 41 4E 54 5F 43 41 56 45 00 00 00 00 00 00:Marrow Bulb
43 52 45 41 54 55 52 45 31 00 00 00 00 00 00 00:Mordite
54 45 43 48 46 52 41 47 00 00 00 00 00 00 00 00:Nanite Cluster
4F 58 59 47 45 4E 00 00 00 00 00 00 00 00 00 00:Oxygen
4C 55 53 48 31 00 00 00 00 00 00 00 00 00 00 00:Paraffinium
48 4F 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Phosphorus
41 53 54 45 52 4F 49 44 33 00 00 00 00 00 00 00:Platinum
52 4F 42 4F 54 31 00 00 00 00 00 00 00 00 00 00:Pugneum
4C 41 4E 44 32 00 00 00 00 00 00 00 00 00 00 00:Pure Ferrite
44 55 53 54 59 31 00 00 00 00 00 00 00 00 00 00:Pyrite
53 50 41 43 45 47 55 4E 4B 31 00 00 00 00 00 00:Residual Goop
53 50 41 43 45 47 55 4E 4B 32 00 00 00 00 00 00:Runaway Mould
53 50 41 43 45 47 55 4E 4B 33 00 00 00 00 00 00:Rusted Metal
57 41 54 45 52 31 00 00 00 00 00 00 00 00 00 00:Salt
41 53 54 45 52 4F 49 44 31 00 00 00 00 00 00 00:Silver
43 41 54 41 4C 59 53 54 31 00 00 00 00 00 00 00:Sodium
43 41 54 41 4C 59 53 54 32 00 00 00 00 00 00 00:Sodium Nitrate
50 4C 41 4E 54 5F 48 4F 54 00 00 00 00 00 00 00:Solanium
50 4C 41 4E 54 5F 4C 55 53 48 00 00 00 00 00 00:Star Bulb
47 41 53 31 00 00 00 00 00 00 00 00 00 00 00 00:Sulphurine
52 4F 43 4B 45 54 53 55 42 00 00 00 00 00 00 00:Tritium
52 41 44 49 4F 31 00 00 00 00 00 00 00 00 00 00:Uranium

[Products (New)]---------------------------------------------------------------

46 41 52 4D 50 52 4F 44 31 00 00 00 00 00 00 00:Acid
41 4C 42 55 4D 45 4E 50 45 41 52 4C 00 00 00 00:Albumen Pearl
43 4F 4D 4D 4F 44 49 54 59 36 00 00 00 00 00 00:Antimatter
41 4D 5F 48 4F 55 53 49 4E 47 00 00 00 00 00 00:Antimatter Housing
41 4C 4C 4F 59 31 00 00 00 00 00 00 00 00 00 00:Aronium
41 43 43 45 53 53 31 00 00 00 00 00 00 00 00 00:Atlas Pass V1
41 43 43 45 53 53 32 00 00 00 00 00 00 00 00 00:Atlas Pass V2
41 43 43 45 53 53 33 00 00 00 00 00 00 00 00 00:Atlas Pass V3
41 54 4C 41 53 5F 53 45 45 44 5F 31 00 00 00 00:Captured Nanode
46 55 45 4C 50 52 4F 44 33 00 00 00 00 00 00 00:Carbon Crystal
4E 41 4E 4F 54 55 42 45 53 00 00 00 00 00 00 00:Carbon Nanotubes
57 41 54 45 52 50 52 4F 44 33 00 00 00 00 00 00:Chloride Lattice
46 41 52 4D 50 52 4F 44 39 00 00 00 00 00 00 00:Circuit Board
43 41 56 45 5F 43 52 41 46 54 00 00 00 00 00 00:Cobalt Mirror
43 4F 4D 50 4F 55 4E 44 36 00 00 00 00 00 00 00:Cryo Pump
41 54 4C 41 53 5F 53 45 45 44 5F 34 00 00 00 00:Dark Matter
41 54 4C 41 53 5F 53 45 45 44 5F 35 00 00 00 00:Dawn's End
43 41 54 41 50 52 4F 44 33 00 00 00 00 00 00 00:Destablised Sodium
4A 45 4C 4C 59 00 00 00 00 00 00 00 00 00 00 00:Di-Hydrogen Jelly
41 4C 4C 4F 59 32 00 00 00 00 00 00 00 00 00 00:Dirty Bronze
4E 41 56 5F 44 41 54 41 5F 44 52 4F 50 00 00 00:Drop-Pod Coordinate Data
41 54 4C 41 53 5F 53 45 45 44 5F 32 00 00 00 00:Englobed Shade
52 45 41 43 54 49 4F 4E 32 00 00 00 00 00 00 00:Enriched Carbon
43 4F 4D 50 4F 55 4E 44 34 00 00 00 00 00 00 00:Fusion Accelerant
54 52 41 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Gek Relic
41 4C 4C 4F 59 37 00 00 00 00 00 00 00 00 00 00:Geodesite
46 41 52 4D 50 52 4F 44 33 00 00 00 00 00 00 00:Glass
41 4C 4C 4F 59 36 00 00 00 00 00 00 00 00 00 00:Grantine
47 52 41 56 42 41 4C 4C 00 00 00 00 00 00 00 00:Gravitino Ball
41 54 4C 41 53 5F 53 45 45 44 5F 31 30 00 00 00:Heart Of The Sun
46 41 52 4D 50 52 4F 44 34 00 00 00 00 00 00 00:Heat Capacitor
43 41 52 42 4F 4E 5F 53 45 41 4C 00 00 00 00 00:Hermetic Seal
41 4C 4C 4F 59 33 00 00 00 00 00 00 00 00 00 00:Herox
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 35 00 00:High Capacity Vector Compressor
43 4F 4D 50 4F 55 4E 44 33 00 00 00 00 00 00 00:Hot Ice
50 4F 57 45 52 43 45 4C 4C 00 00 00 00 00 00 00:Ion Battery
41 4C 4C 4F 59 38 00 00 00 00 00 00 00 00 00 00:Iridesite
45 58 50 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Korvax Casing
45 58 50 5F 43 55 52 49 4F 32 00 00 00 00 00 00:Korvax Convergence Cube
46 49 45 4E 44 43 4F 52 45 00 00 00 00 00 00 00:Larval Core
41 4C 4C 4F 59 34 00 00 00 00 00 00 00 00 00 00:Lemmium
50 52 4F 44 46 55 45 4C 32 00 00 00 00 00 00 00:Life Support Gel
46 41 52 4D 50 52 4F 44 37 00 00 00 00 00 00 00:Liquid Explosive
46 41 52 4D 50 52 4F 44 38 00 00 00 00 00 00 00:Living Glass
46 41 52 4D 50 52 4F 44 32 00 00 00 00 00 00 00:Lubricant
41 4C 4C 4F 59 35 00 00 00 00 00 00 00 00 00 00:Magno-Gold
43 41 53 49 4E 47 00 00 00 00 00 00 00 00 00 00:Metal Plating
4D 49 43 52 4F 43 48 49 50 00 00 00 00 00 00 00:Microprocessor
4D 49 4E 44 5F 41 52 43 00 00 00 00 00 00 00 00:Mind Arc
4E 41 56 5F 44 41 54 41 00 00 00 00 00 00 00 00:Navigation Data
52 45 41 43 54 49 4F 4E 33 00 00 00 00 00 00 00:Nitrogen Salt
41 54 4C 41 53 5F 53 45 45 44 5F 33 00 00 00 00:Noospheric Orb
41 54 4C 41 53 5F 53 45 45 44 5F 38 00 00 00 00:Novae Reclaiment
54 52 41 5F 41 4C 4C 4F 59 33 00 00 00 00 00 00:Optical Solvent
43 4F 4D 50 4F 55 4E 44 31 00 00 00 00 00 00 00:Organic Catalyst
50 52 4F 44 46 55 45 4C 31 00 00 00 00 00 00 00:Oxygen Capsule
4F 58 59 5F 43 52 41 46 54 00 00 00 00 00 00 00:Oxygen Filter
41 54 4C 41 53 5F 53 45 45 44 5F 36 00 00 00 00:Photic Jade
46 41 52 4D 50 52 4F 44 35 00 00 00 00 00 00 00:Poly-Fibre
41 4D 4D 4F 00 00 00 00 00 00 00 00 00 00 00 00:Projectile Ammunition
51 55 41 44 5F 50 52 4F 44 00 00 00 00 00 00 00:Quad Servo
4C 41 4E 44 50 52 4F 44 33 00 00 00 00 00 00 00:Rare Metal Element
53 41 43 56 45 4E 4F 4D 00 00 00 00 00 00 00 00:Sac Venom
57 41 54 45 52 5F 43 52 41 46 54 00 00 00 00 00:Salt Refractor
42 50 5F 53 41 4C 56 41 47 45 00 00 00 00 00 00:Salvaged Technology
43 4F 4D 50 4F 55 4E 44 32 00 00 00 00 00 00 00:Semiconductor
43 41 54 41 5F 43 52 41 46 54 00 00 00 00 00 00:Sodium Diode
4C 41 55 4E 43 48 46 55 45 4C 00 00 00 00 00 00:Starship Launch Fuel
41 54 4C 41 53 5F 53 45 45 44 5F 37 00 00 00 00:State Phasure
43 4F 4D 50 4F 55 4E 44 35 00 00 00 00 00 00 00:Superconductor
4F 58 59 50 52 4F 44 33 00 00 00 00 00 00 00 00:Superoxide Crystal
54 45 43 48 5F 43 4F 4D 50 00 00 00 00 00 00 00:Technology Module
43 41 56 45 50 52 4F 44 33 00 00 00 00 00 00 00:Tetra Cobalt
52 45 41 43 54 49 4F 4E 31 00 00 00 00 00 00 00:Thermic Condensate
46 41 52 4D 50 52 4F 44 36 00 00 00 00 00 00 00:Unstable Gel
47 52 45 4E 46 55 45 4C 31 00 00 00 00 00 00 00:Unstable Plasma
43 41 56 45 43 55 42 45 00 00 00 00 00 00 00 00:Vortex Cubes
57 41 52 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Vykeen Effigy
57 41 4C 4B 45 52 5F 50 52 4F 44 00 00 00 00 00:Walker Brain
48 59 50 45 52 46 55 45 4C 31 00 00 00 00 00 00:Warp Cell

[Upgrades (Classified As Products)]--------------------------------------------

55 5F 45 4E 45 52 47 59 31 00 00 00 00 00 00 00:Life Support Module (B)
55 5F 4A 45 54 42 4F 4F 53 54 34 00 00 00 00 00:Movement Module (S)
55 5F 4A 45 54 42 4F 4F 53 54 31 00 00 00 00 00:Movement Module (C)
55 5F 52 41 44 33 00 00 00 00 00 00 00 00 00 00:Radiation Protection Module (S)
55 5F 52 41 44 31 00 00 00 00 00 00 00 00 00 00:Radiation Protection Module (B)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 34 00 00:Shield Module (S)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 31 00 00:Shield Module (C)
55 5F 43 4F 4C 44 50 52 4F 54 32 00 00 00 00 00:Thermal Protection Module (A) (Fire)
55 5F 43 4F 4C 44 50 52 4F 54 31 00 00 00 00 00:Thermal Protection Module (B) (Fire)
55 5F 48 4F 54 50 52 4F 54 32 00 00 00 00 00 00:Thermal Protection Module (A) (Ice)
55 5F 48 4F 54 50 52 4F 54 31 00 00 00 00 00 00:Thermal Protection Module (B) (Ice)
55 5F 54 4F 58 31 00 00 00 00 00 00 00 00 00 00:Toxic Protection Module (B)
55 5F 55 4E 57 31 00 00 00 00 00 00 00 00 00 00:Underwater Protection Module (B)

55 5F 52 41 49 4C 32 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (B)
55 5F 52 41 49 4C 31 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (C)
55 5F 42 4F 4C 54 31 00 00 00 00 00 00 00 00 00:Boltcaster Module (C)
55 5F 54 47 52 45 4E 41 44 45 31 00 00 00 00 00:Geology Cannon Module (C)
55 5F 4C 41 53 45 52 34 00 00 00 00 00 00 00 00:Mining Beam Module (S)
55 5F 4C 41 53 45 52 32 00 00 00 00 00 00 00 00:Mining Beam Module (B)
55 5F 4C 41 53 45 52 31 00 00 00 00 00 00 00 00:Mining Beam Module (C)
55 5F 47 52 45 4E 41 44 45 33 00 00 00 00 00 00:Plasma Launcher Module (A)
55 5F 47 52 45 4E 41 44 45 32 00 00 00 00 00 00:Plasma Launcher Module (B)
55 5F 47 52 45 4E 41 44 45 31 00 00 00 00 00 00:Plasma Launcher Module (C)
55 5F 53 4D 47 31 00 00 00 00 00 00 00 00 00 00:Pulse Spitter Module (C)
55 5F 53 43 41 4E 4E 45 52 32 00 00 00 00 00 00:Scanner Module (B)
55 5F 53 43 41 4E 4E 45 52 31 00 00 00 00 00 00:Scanner Module (C)
55 5F 53 48 4F 54 47 55 4E 33 00 00 00 00 00 00:Scatter Blaster Module (A)
55 5F 53 48 4F 54 47 55 4E 32 00 00 00 00 00 00:Scatter Blaster Module (B)
55 5F 53 48 4F 54 47 55 4E 31 00 00 00 00 00 00:Scatter Blaster Module (C)

55 5F 53 48 49 50 42 4C 4F 42 32 00 00 00 00 00:Cyclotron Module (B)
55 5F 53 48 49 50 42 4C 4F 42 31 00 00 00 00 00:Cyclotron Module (C)
55 5F 48 59 50 45 52 31 00 00 00 00 00 00 00 00:Hyperdrive Module (C)
55 5F 53 48 49 50 4D 49 4E 49 31 00 00 00 00 00:Infra-Knife Module (C)
55 5F 53 48 49 50 4C 41 53 31 00 00 00 00 00 00:Phase Beam Module (C)
55 5F 53 48 49 50 47 55 4E 31 00 00 00 00 00 00:Photon Cannan Module (C)
55 5F 53 48 49 50 53 48 4F 54 33 00 00 00 00 00:Positron Module (A)
55 5F 53 48 49 50 53 48 4F 54 32 00 00 00 00 00:Positron Module (B)
55 5F 53 48 49 50 53 48 4F 54 31 00 00 00 00 00:Positron Module (C)
55 5F 50 55 4C 53 45 34 00 00 00 00 00 00 00 00:Pulse Engine Module (S)
55 5F 50 55 4C 53 45 31 00 00 00 00 00 00 00 00:Pulse Engine Module (C)
55 5F 53 48 49 50 53 48 49 45 4C 44 31 00 00 00:Starship Shield Module (C)

[Uncategorized]------------------------------------------------------

41 54 4C 41 53 53 55 49 54 00 00 00 00 00 00 00:Remembrance
53 54 41 52 53 55 49 54 00 00 00 00 00 00 00 00:Star Seed

--------------------------[Technology]---------------------------------

[Ship]-----------------------------------------------------------------

53 48 49 50 53 43 41 4E 5F 43 4F 4D 42 41 54 00:Conflict Scanner
53 48 49 50 50 4C 41 53 4D 41 00 00 00 00 00 00:Cylotron Ballista
53 48 49 50 53 48 49 45 4C 44 00 00 00 00 00 00:Deflector Shield
53 48 49 50 53 43 41 4E 5F 45 43 4F 4E 00 00 00:Economy Scanner
48 59 50 45 52 44 52 49 56 45 00 00 00 00 00 00:Hyperdrive
53 48 49 50 4D 49 4E 49 47 55 4E 00 00 00 00 00:Intra-Knife Accelerator
4C 41 55 4E 43 48 45 52 00 00 00 00 00 00 00 00:Launch Thrusters
53 48 49 50 4C 41 53 31 00 00 00 00 00 00 00 00:Phase Beam
53 48 49 50 47 55 4E 31 00 00 00 00 00 00 00 00:Photon Cannon
53 48 49 50 53 48 4F 54 47 55 4E 00 00 00 00 00:Positron Ejector
53 48 49 50 4A 55 4D 50 31 00 00 00 00 00 00 00:Pulse Engine
53 48 49 50 52 4F 43 4B 45 54 53 00 00 00 00 00:Rocket Launcher

55 54 5F 53 48 49 50 53 48 49 45 4C 44 00 00 00:Ablative Armour
48 44 52 49 56 45 42 4F 4F 53 54 31 00 00 00 00:Cadmium Drive
55 54 5F 53 48 49 50 42 4C 4F 42 00 00 00 00 00:Dyson Pump
48 44 52 49 56 45 42 4F 4F 53 54 32 00 00 00 00:Emeril Drive
55 54 5F 53 48 49 50 4C 41 53 00 00 00 00 00 00:Fourier De-Limiter
55 54 5F 53 48 49 50 53 48 4F 54 00 00 00 00 00:Fragment Supercharger
48 44 52 49 56 45 42 4F 4F 53 54 33 00 00 00 00:Indium Drive
55 54 5F 52 4F 43 4B 45 54 53 00 00 00 00 00 00:Large Rocket Tubes
55 54 5F 53 48 49 50 47 55 4E 00 00 00 00 00 00:Non-Linear Optics
55 54 5F 53 48 49 50 4D 49 4E 49 00 00 00 00 00:Non-Linear Optics 2

[Multitool]-----------------------------------------------------------

52 41 49 4C 47 55 4E 00 00 00 00 00 00 00 00 00:Blaze Javelin
42 4F 4C 54 00 00 00 00 00 00 00 00 00 00 00 00:Boltcaster
53 43 4F 50 45 00 00 00 00 00 00 00 00 00 00 00:Combat Scope
54 45 52 52 41 49 4E 5F 47 52 45 4E 00 00 00 00:Geology Cannon
4C 41 53 45 52 00 00 00 00 00 00 00 00 00 00 00:Mining Beam
47 52 4F 55 4E 44 5F 53 48 49 45 4C 44 00 00 00:Personal Forcefield
47 52 45 4E 41 44 45 00 00 00 00 00 00 00 00 00:Plasma Launcher
53 4D 47 00 00 00 00 00 00 00 00 00 00 00 00 00:Pulse Spitter
53 43 41 4E 31 00 00 00 00 00 00 00 00 00 00 00:Scanner
53 48 4F 54 47 55 4E 00 00 00 00 00 00 00 00 00:Scatter Blaster
54 45 52 52 41 49 4E 45 44 49 54 4F 52 00 00 00:Terrain Manipulator

53 54 52 4F 4E 47 4C 41 53 45 52 00 00 00 00 00:Advanced Mining Laser
55 54 5F 53 4D 47 00 00 00 00 00 00 00 00 00 00:Amplified Cartriges
55 54 5F 42 4F 4C 54 00 00 00 00 00 00 00 00 00:Barrel Ioniser
55 54 5F 52 41 49 4C 00 00 00 00 00 00 00 00 00:Mass Accelerator
55 54 5F 53 48 4F 54 00 00 00 00 00 00 00 00 00:Shell Greaser
55 54 5F 53 43 41 4E 00 00 00 00 00 00 00 00 00:Waveform Recycler

[Exosuit]----------------------------------------------------------------

50 52 4F 54 45 43 54 00 00 00 00 00 00 00 00 00:Hazard Protection
50 4F 57 45 52 47 4C 4F 56 45 00 00 00 00 00 00:Hasmat Gauntlet
4A 45 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Jetpack
45 4E 45 52 47 59 00 00 00 00 00 00 00 00 00 00:Life Support
55 54 5F 4A 55 4D 50 00 00 00 00 00 00 00 00 00:Rocket Boots

55 54 5F 4A 45 54 00 00 00 00 00 00 00 00 00 00:Neural Stimulator
55 54 5F 45 4E 45 52 47 59 00 00 00 00 00 00 00:Oxygen Recycler
55 54 5F 50 52 4F 54 45 43 54 00 00 00 00 00 00:Shield Lattice

[Exocraft]--------------------------------------------------------------

56 45 48 49 43 4C 45 5F 45 4E 47 49 4E 45 00 00:Fusion Engine
56 45 48 49 43 4C 45 5F 53 43 41 4E 00 00 00 00:Exocraft Signal Booster
56 45 48 49 43 4C 45 5F 53 43 41 4E 31 00 00 00:Exocraft Signal Booster Upgrade Sigma
56 45 48 49 43 4C 45 5F 53 43 41 4E 32 00 00 00:Exocraft Signal Booster Upgrade Tau
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 00 00 00:Exocraft Mining Laser
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 31 00 00:Exocraft Mining Laser Upgrade Sigma
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 32 00 00:ATV Photon Cannon Beta
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 33 00 00:ATV Photon Cannon Gamma
56 45 48 49 43 4C 45 5F 47 55 4E 00 00 00 00 00:Exocraft Mounted Cannon
56 45 48 49 43 4C 45 5F 47 55 4E 31 00 00 00 00:Exocraft Mounted Cannon Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 00 00 00:Exocraft Acceleration Module
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 31 00 00:Exocraft Acceleration Module Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 32 00 00:Exocraft Acceleration Module Upgrade Tau
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 33 00 00:ATV Tune Up Gamma

[Freighter]------------------------------------------------------------

46 5F 48 59 50 45 52 44 52 49 56 45 00 00 00 00:Freighter Hyperdrive

46 5F 48 44 52 49 56 45 42 4F 4F 53 54 31 00 00:Freighter Warp Reactor Sigma
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 32 00 00:Freighter Warp Reactor Tau
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 33 00 00:Freighter Warp Reactor Theta

[Elements (Old)]------------------------------------------------------------

54 52 41 44 45 41 42 4C 45 34 00 00 00 00 00 00:Aluminum
56 45 48 49 43 4C 45 53 55 42 32 00 00 00 00 00:Armadium
53 55 42 42 41 52 52 45 4E 00 00 00 00 00 00 00:Cactus Flesh
54 52 41 44 45 41 42 4C 45 38 00 00 00 00 00 00:Calium
54 45 43 48 52 41 52 45 31 00 00 00 00 00 00 00:Chrysonite
54 52 41 44 45 41 42 4C 45 32 00 00 00 00 00 00:Copper
53 55 42 50 4F 4F 50 00 00 00 00 00 00 00 00 00:Coprite
53 55 42 42 4C 55 45 53 59 53 00 00 00 00 00 00:Cymatygen
56 45 48 49 43 4C 45 53 55 42 31 00 00 00 00 00:Detritum
54 52 41 44 45 41 42 4C 45 36 00 00 00 00 00 00:Emeril
53 55 42 53 4E 4F 57 00 00 00 00 00 00 00 00 00:Frost Crystal
53 55 42 54 4F 58 49 43 00 00 00 00 00 00 00 00:Fungal Mould
53 55 42 52 41 44 49 4F 41 43 54 49 56 45 00 00:Gamma Root
54 52 41 44 45 41 42 4C 45 35 00 00 00 00 00 00:Gold
54 45 43 48 31 00 00 00 00 00 00 00 00 00 00 00:Heridium
54 52 41 44 45 41 42 4C 45 31 00 00 00 00 00 00:Iridium
43 4F 4D 31 00 00 00 00 00 00 00 00 00 00 00 00:Iron
53 55 42 57 41 54 45 52 00 00 00 00 00 00 00 00:Kelp Sac
53 50 41 43 45 47 55 4E 4B 34 00 00 00 00 00 00:Living Slime
53 55 42 43 52 45 41 54 55 52 45 00 00 00 00 00:Mordite
54 52 41 44 45 41 42 4C 45 39 00 00 00 00 00 00:Murrine
54 52 41 44 45 41 42 4C 45 33 00 00 00 00 00 00:Nickel
47 41 53 33 00 00 00 00 00 00 00 00 00 00 00 00:Nitrogen
54 52 41 44 45 41 42 4C 45 31 30 00 00 00 00 00:Omegon
54 45 43 48 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Platinum
46 55 45 4C 52 41 52 45 31 00 00 00 00 00 00 00:Plutonium
53 55 42 44 52 4F 4E 45 00 00 00 00 00 00 00 00:Pugneum
54 52 41 44 45 41 42 4C 45 37 00 00 00 00 00 00:Radnox
47 41 53 32 00 00 00 00 00 00 00 00 00 00 00 00:Radon
53 55 42 52 45 44 53 59 53 00 00 00 00 00 00 00:Rubeum
53 55 42 53 43 4F 52 43 48 45 44 00 00 00 00 00:Solanium
53 55 42 4C 55 53 48 00 00 00 00 00 00 00 00 00:Star Bulb
46 55 45 4C 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Thamium9
43 4F 4D 52 41 52 45 31 00 00 00 00 00 00 00 00:Titanium
53 55 42 53 48 49 50 00 00 00 00 00 00 00 00 00:Tropheum
53 55 42 47 52 45 45 4E 53 59 53 00 00 00 00 00:Viridium
53 50 41 43 45 47 55 4E 4B 35 00 00 00 00 00 00:Viscous Fluids
43 4F 4D 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00 00:Zinc

[Misc (Old)]-----------------------------------------------------------------

41 51 55 41 53 50 48 45 52 45 00 00 00 00 00 00:Aqua Sphere
43 55 52 49 4F 34 00 00 00 00 00 00 00 00 00 00:Atlas Stone
54 52 41 5F 54 45 43 48 34 00 00 00 00 00 00 00:Autonomus Positioning Unit
54 52 41 5F 4D 49 4E 45 52 41 4C 53 33 00 00 00:Bromide Salt
48 41 43 4B 31 00 00 00 00 00 00 00 00 00 00 00:Bypass Chip
43 4F 4D 4D 4F 44 49 54 59 31 00 00 00 00 00 00:Carite Sheet
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 33 00 00:Comet Droplets
43 57 49 52 45 00 00 00 00 00 00 00 00 00 00 00:Copper Wire
4D 45 47 41 50 52 4F 44 33 00 00 00 00 00 00 00:Cryogenic Chamber
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 31 00 00:Decrypted User Data
54 52 41 5F 54 45 43 48 31 00 00 00 00 00 00 00:Decommissioned Circuit Board
54 52 41 5F 45 58 4F 54 49 43 53 31 00 00 00 00:De-Scented Pheromone Bottle
53 45 4E 54 49 4E 45 4C 32 00 00 00 00 00 00 00:Dimensional Matrix
54 52 41 5F 4D 49 4E 45 52 41 4C 53 31 00 00 00:Dirt
43 4F 4D 4D 4F 44 49 54 59 37 00 00 00 00 00 00:Dynamic Resonator
43 4F 4D 4D 4F 44 49 54 59 35 00 00 00 00 00 00:Electron Vapour
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 31 00 00:Enormous Metal Cog
54 52 41 5F 45 4E 45 52 47 59 34 00 00 00 00 00:Experimental Power Fluid
43 55 52 49 4F 36 00 00 00 00 00 00 00 00 00 00:Fascination Bead
54 52 41 5F 41 4C 4C 4F 59 34 00 00 00 00 00 00:Five Dimensional Torus
4D 45 47 41 50 52 4F 44 31 00 00 00 00 00 00 00:Freighter Fuel
54 52 41 5F 45 4E 45 52 47 59 35 00 00 00 00 00:Fusion Core
55 4C 54 52 41 50 52 4F 44 31 00 00 00 00 00 00:Fusion Ignitor
43 55 52 49 4F 37 00 00 00 00 00 00 00 00 00 00:Gek Charm
43 55 52 49 4F 31 00 00 00 00 00 00 00 00 00 00:Gek Relic
44 52 55 47 53 31 00 00 00 00 00 00 00 00 00 00:Geknip
43 55 52 49 4F 35 00 00 00 00 00 00 00 00 00 00:Grahgrah
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 34 00 00:Holographic Crankshaft
54 52 41 5F 45 4E 45 52 47 59 32 00 00 00 00 00:Industrial Grade Battery
47 45 4C 00 00 00 00 00 00 00 00 00 00 00 00 00:Insulating Gel
54 52 41 5F 45 58 4F 54 49 43 53 33 00 00 00 00:Instability Injector
54 52 41 5F 54 45 43 48 33 00 00 00 00 00 00 00:Ion Capacitor
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 34 00 00:Ion Sphere
43 55 52 49 4F 33 00 00 00 00 00 00 00 00 00 00:Korvax Casing
43 55 52 49 4F 39 00 00 00 00 00 00 00 00 00 00:Korvax Convergence Cube
43 4F 4D 4D 4F 44 49 54 59 34 00 00 00 00 00 00:Microdensity Fabric
41 54 4C 41 53 5F 53 45 45 44 5F 39 00 00 00 00:Modified Quanta
54 52 41 5F 45 58 4F 54 49 43 53 35 00 00 00 00:Neural Duct
43 4F 4D 4D 4F 44 49 54 59 32 00 00 00 00 00 00:Night Crystals
4E 49 50 4E 49 50 42 55 44 53 00 00 00 00 00 00:Nip Nip Buds
4D 50 4C 41 54 45 00 00 00 00 00 00 00 00 00 00:Non-Ferrous Plate
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 32 00 00:Non-Stick Piston
54 52 41 5F 45 4E 45 52 47 59 33 00 00 00 00 00:Ohmic Gel
54 52 41 5F 45 58 4F 54 49 43 53 34 00 00 00 00:Organic Piping
54 52 41 5F 4D 49 4E 45 52 41 4C 53 34 00 00 00:Polychromatic Zirconium
50 52 4F 44 46 55 45 4C 33 00 00 00 00 00 00 00:Power Reservoir
54 52 41 5F 54 45 43 48 35 00 00 00 00 00 00 00:Quantum Accelerator
4D 45 47 41 50 52 4F 44 32 00 00 00 00 00 00 00:Quantum Processor
54 52 41 5F 4D 49 4E 45 52 41 4C 53 35 00 00 00:Re-Latticed Arc Crystals
41 54 4C 41 53 53 55 49 54 00 00 00 00 00 00 00:Remembrance
53 48 49 45 4C 44 46 55 45 4C 32 00 00 00 00 00:Shielding Plate
53 48 49 45 4C 44 46 55 45 4C 31 00 00 00 00 00:Shielding Shard
53 48 49 45 4C 44 46 55 45 4C 33 00 00 00 00 00:Shielding Sheet
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 33 00 00:Six Pronged Mesh Decoupler
54 52 41 5F 45 4E 45 52 47 59 31 00 00 00 00 00:Spark Canister
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 32 00 00:Star Silk
55 4C 54 52 41 50 52 4F 44 32 00 00 00 00 00 00:Stasis Device
54 52 41 5F 41 4C 4C 4F 59 35 00 00 00 00 00 00:Superconducting Fibre
43 4F 4D 4D 4F 44 49 54 59 33 00 00 00 00 00 00:Suspension Fluid
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 35 00 00:Teleport Coordinators
46 41 52 4D 50 52 4F 44 42 41 53 49 43 32 00 00:Voltaic Cell
43 55 52 49 4F 38 00 00 00 00 00 00 00 00 00 00:Vy'keen Dagger
43 55 52 49 4F 32 00 00 00 00 00 00 00 00 00 00:Vy'keen Effigy
46 41 52 4D 50 52 4F 44 42 41 53 49 43 31 00 00:Weatherproof Rubber
54 52 41 5F 54 45 43 48 32 00 00 00 00 00 00 00:Welding Soap
</DropDownList>
              <LastState Value="56 45 48 49 43 4C 45 5F 47 55 4E 00 00 00 00 00" RealAddress="227C26AE898"/>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Array of byte</VariableType>
              <ByteLength>16</ByteLength>
              <Address>pHover</Address>
              <Offsets>
                <Offset>8</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys>
                    <Key>99</Key>
                  </Keys>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>8162</ID>
              <Description>"Quantity"</Description>
              <LastState Value="189" RealAddress="227C26AE8A8"/>
              <VariableType>4 Bytes</VariableType>
              <Address>pHover</Address>
              <Offsets>
                <Offset>18</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8163</ID>
              <Description>"Total"</Description>
              <LastState Value="200" RealAddress="227C26AE8AC"/>
              <VariableType>4 Bytes</VariableType>
              <Address>pHover</Address>
              <Offsets>
                <Offset>1C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8164</ID>
              <Description>"Damaged (Numpad 2)"</Description>
              <LastState Value="0" RealAddress="227C26AE8B0"/>
              <VariableType>Float</VariableType>
              <Address>pHover</Address>
              <Offsets>
                <Offset>20</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>98</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>8165</ID>
              <Description>"Inv. Column"</Description>
              <LastState Value="3" RealAddress="227C26AE8B4"/>
              <VariableType>4 Bytes</VariableType>
              <Address>pHover</Address>
              <Offsets>
                <Offset>24</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>8166</ID>
              <Description>"Inv. Row"</Description>
              <LastState Value="0" RealAddress="227C26AE8B8"/>
              <VariableType>4 Bytes</VariableType>
              <Address>pHover</Address>
              <Offsets>
                <Offset>28</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>mmoney</Name>
      <Address>53157FBF10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stackamt</Name>
      <Address>7FF787F8001B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stackamt2</Name>
      <Address>7FF787F80013</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation</Name>
      <Address>7FF7EF159B87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>7FF726AA1297</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sprint</Name>
      <Address>7FF726AA4230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jetpack</Name>
      <Address>7FF726AA3A54</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address>7FF726AD350D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mb</Name>
      <Address>7FF726AD1A88</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>no</Name>
      <Address>7FF726ACF2A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ihd</Name>
      <Address>7FF726A6D2BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pb</Name>
      <Address>7FF726BBEBF3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ids</Name>
      <Address>7FF726AA12E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ieb</Name>
      <Address>7FF726BE7D5C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cGcProductTable_end</Name>
      <Address>7FF725DA1490</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation2</Name>
      <Address>7FF7265CA042</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxboost</Name>
      <Address>7FF725D40C5B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minspeed</Name>
      <Address>7FF725D40C57</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>takeoff</Name>
      <Address>7FF725D40C53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overthruster</Name>
      <Address>7FF725D40C4F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oscillationAOB</Name>
      <Address>7FF726BB9939</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>takeoffAOB</Name>
      <Address>7FF726B8ACF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boostwaitAOB</Name>
      <Address>7FF726B7FC9B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boostaccelAOB</Name>
      <Address>7FF726B7FFB8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minspeedAOB</Name>
      <Address>7FF72606AC51</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fov</Name>
      <Address>7FF7264C6E80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>7FF726AD3384</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
