<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"All Cheats"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>153</ID>
          <Description>"Infinite Hazard Protection"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Hazard / Float / Increasing 0 - 1
}

[ENABLE]

aobscanmodule(infhazard,NMS.exe,F3 0F 5D C4 F3 0F 11 03) // should be unique
alloc(newmem,$1000,"NMS.exe"+120F996)

label(code)
label(return)

newmem:

code:
  minss xmm0,xmm4
  xorps xmm0, xmm0
  movss [rbx],xmm0
  jmp return

infhazard:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(infhazard)

[DISABLE]

infhazard:
  db F3 0F 5D C4 F3 0F 11 03

unregistersymbol(infhazard)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+120F996

"NMS.exe"+120F966: 49 03 C8                       -  add rcx,r8
"NMS.exe"+120F969: F3 0F 10 9C 18 40 AE 10 00     -  movss xmm3,[rax+rbx+0010AE40]
"NMS.exe"+120F972: F3 0F 10 94 19 40 AE 10 00     -  movss xmm2,[rcx+rbx+0010AE40]
"NMS.exe"+120F97B: 41 8B D7                       -  mov edx,r15d
"NMS.exe"+120F97E: 48 8B CF                       -  mov rcx,rdi
"NMS.exe"+120F981: E8 EA 06 00 00                 -  call NMS.exe+1210070
"NMS.exe"+120F986: 41 0F 28 E1                    -  movaps xmm4,xmm9
"NMS.exe"+120F98A: F3 0F 5E E0                    -  divss xmm4,xmm0
"NMS.exe"+120F98E: F3 0F 58 E5                    -  addss xmm4,xmm5
"NMS.exe"+120F992: 41 0F 28 C0                    -  movaps xmm0,xmm8
// ---------- INJECTING HERE ----------
"NMS.exe"+120F996: F3 0F 5D C4                    -  minss xmm0,xmm4
"NMS.exe"+120F99A: F3 0F 11 03                    -  movss [rbx],xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+120F99E: F3 0F 10 05 DE A3 36 01        -  movss xmm0,[NMS.exe+2579D84]
"NMS.exe"+120F9A6: F3 0F 11 43 48                 -  movss [rbx+48],xmm0
"NMS.exe"+120F9AB: EB 63                          -  jmp NMS.exe+120FA10
"NMS.exe"+120F9AD: F3 0F 10 03                    -  movss xmm0,[rbx]
"NMS.exe"+120F9B1: 0F 2F C7                       -  comiss xmm0,xmm7
"NMS.exe"+120F9B4: 76 5A                          -  jna NMS.exe+120FA10
"NMS.exe"+120F9B6: F3 0F 10 05 C6 A3 36 01        -  movss xmm0,[NMS.exe+2579D84]
"NMS.exe"+120F9BE: F3 0F 5C 43 18                 -  subss xmm0,[rbx+18]
"NMS.exe"+120F9C3: 43 0F 2F 44 2E 1C              -  comiss xmm0,[r14+r13+1C]
"NMS.exe"+120F9C9: 76 45                          -  jna NMS.exe+120FA10
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>155</ID>
          <Description>"Infinite Jetpack"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Jetpack Amount / Float / 0 - 2.75 (dec)
}

[ENABLE]

aobscanmodule(infjetpack,NMS.exe,F3 0F 5C C1 F3 0F 11 87 64 19 00 00) // should be unique

infjetpack:
  db 90 90 90 90
registersymbol(infjetpack)

[DISABLE]

infjetpack:
  db F3 0F 5C C1

unregistersymbol(infjetpack)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11ED326

"NMS.exe"+11ED2EC: F3 0F 10 0D 14 FC B7 00     -  movss xmm1,[NMS.exe+1D6CF08]
"NMS.exe"+11ED2F4: F3 0F 5C C8                 -  subss xmm1,xmm0
"NMS.exe"+11ED2F8: F3 0F 59 D2                 -  mulss xmm2,xmm2
"NMS.exe"+11ED2FC: F3 0F 59 CA                 -  mulss xmm1,xmm2
"NMS.exe"+11ED300: F3 0F 10 05 B0 C3 E4 00     -  movss xmm0,[NMS.exe+20396B8]
"NMS.exe"+11ED308: F3 41 0F 5C C7              -  subss xmm0,xmm15
"NMS.exe"+11ED30D: F3 0F 59 C8                 -  mulss xmm1,xmm0
"NMS.exe"+11ED311: F3 41 0F 58 CF              -  addss xmm1,xmm15
"NMS.exe"+11ED316: F3 0F 59 8D 98 0A 00 00     -  mulss xmm1,[rbp+00000A98]
"NMS.exe"+11ED31E: F3 0F 10 87 64 19 00 00     -  movss xmm0,[rdi+00001964]
// ---------- INJECTING HERE ----------
"NMS.exe"+11ED326: F3 0F 5C C1                 -  subss xmm0,xmm1
"NMS.exe"+11ED32A: F3 0F 11 87 64 19 00 00     -  movss [rdi+00001964],xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+11ED332: EB 08                       -  jmp NMS.exe+11ED33C
"NMS.exe"+11ED334: F3 0F 10 87 64 19 00 00     -  movss xmm0,[rdi+00001964]
"NMS.exe"+11ED33C: F3 0F 10 8D A8 0A 00 00     -  movss xmm1,[rbp+00000AA8]
"NMS.exe"+11ED344: 41 0F 2F CE                 -  comiss xmm1,xmm14
"NMS.exe"+11ED348: 76 3A                       -  jna NMS.exe+11ED384
"NMS.exe"+11ED34A: 44 0F 2F F0                 -  comiss xmm14,xmm0
"NMS.exe"+11ED34E: 72 34                       -  jb NMS.exe+11ED384
"NMS.exe"+11ED350: 89 5C 24 38                 -  mov [rsp+38],ebx
"NMS.exe"+11ED354: 48 89 5C 24 30              -  mov [rsp+30],rbx
"NMS.exe"+11ED359: 89 5C 24 28                 -  mov [rsp+28],ebx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"Infinite Life Support"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Life Support / 4 Bytes / 0 - 100 (dec)
}

[ENABLE]

aobscanmodule(inflifesupport,NMS.exe,8B 48 18 2B CB) // should be unique
alloc(newmem,$1000,"NMS.exe"+11D7A5C)

label(code)
label(return)

newmem:
mov [rax+18], edx

code:
  mov ecx,[rax+18]
  //sub ecx,ebx
  jmp return

inflifesupport:
  jmp newmem
return:
registersymbol(inflifesupport)

[DISABLE]

inflifesupport:
  db 8B 48 18 2B CB

unregistersymbol(inflifesupport)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11D7A5C

"NMS.exe"+11D7A32: 7E 3E                    -  jle NMS.exe+11D7A72
"NMS.exe"+11D7A34: 48 8B 0D BD A4 3A 01     -  mov rcx,[NMS.exe+2581EF8]
"NMS.exe"+11D7A3B: 48 81 C1 30 0C 00 00     -  add rcx,00000C30
"NMS.exe"+11D7A42: 41 B9 01 00 00 00        -  mov r9d,00000001
"NMS.exe"+11D7A48: 45 33 C0                 -  xor r8d,r8d
"NMS.exe"+11D7A4B: 41 8D 51 30              -  lea edx,[r9+30]
"NMS.exe"+11D7A4F: E8 6C D6 5F FF           -  call NMS.exe+7D50C0
"NMS.exe"+11D7A54: 48 85 C0                 -  test rax,rax
"NMS.exe"+11D7A57: 74 19                    -  je NMS.exe+11D7A72
"NMS.exe"+11D7A59: 8B 50 1C                 -  mov edx,[rax+1C]
// ---------- INJECTING HERE ----------
"NMS.exe"+11D7A5C: 8B 48 18                 -  mov ecx,[rax+18]
"NMS.exe"+11D7A5F: 2B CB                    -  sub ecx,ebx
// ---------- DONE INJECTING  ----------
"NMS.exe"+11D7A61: 85 C9                    -  test ecx,ecx
"NMS.exe"+11D7A63: 7F 05                    -  jg NMS.exe+11D7A6A
"NMS.exe"+11D7A65: 41 8B CE                 -  mov ecx,r14d
"NMS.exe"+11D7A68: EB 05                    -  jmp NMS.exe+11D7A6F
"NMS.exe"+11D7A6A: 3B CA                    -  cmp ecx,edx
"NMS.exe"+11D7A6C: 0F 4D CA                 -  cmovge ecx,edx
"NMS.exe"+11D7A6F: 89 48 18                 -  mov [rax+18],ecx
"NMS.exe"+11D7A72: 48 8B 0D 7F A4 3A 01     -  mov rcx,[NMS.exe+2581EF8]
"NMS.exe"+11D7A79: 48 81 C1 30 0C 00 00     -  add rcx,00000C30
"NMS.exe"+11D7A80: E8 3B 68 5F FF           -  call NMS.exe+7CE2C0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>159</ID>
          <Description>"Infinite Sprint"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Sprint Amount / Float / 0 - 1 (dec)
}

[ENABLE]

aobscanmodule(infsprint,NMS.exe,F3 0F 5C C8 F3 0F 11 8F A4 2C 00 00 44 0F 2F F1 72 3D) // should be unique

infsprint:
  db 90 90 90 90
registersymbol(infsprint)

[DISABLE]

infsprint:
  db F3 0F 5C C8

unregistersymbol(infsprint)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11EDD2F

"NMS.exe"+11EDCEA: F3 0F 59 05 32 E9 B7 00     -  mulss xmm0,[NMS.exe+1D6C624]
"NMS.exe"+11EDCF2: F3 0F 58 05 A6 EC B7 00     -  addss xmm0,dword ptr [NMS.exe+1D6C9A0]
"NMS.exe"+11EDCFA: F3 44 0F 10 6D A0           -  movss xmm13,[rbp-60]
"NMS.exe"+11EDD00: F3 44 0F 59 E8              -  mulss xmm13,xmm0
"NMS.exe"+11EDD05: F3 44 0F 11 6D A0           -  movss [rbp-60],xmm13
"NMS.exe"+11EDD0B: F3 0F 10 05 71 BC E4 00     -  movss xmm0,[NMS.exe+2039984]
"NMS.exe"+11EDD13: F3 0F 10 BD 98 0A 00 00     -  movss xmm7,[rbp+00000A98]
"NMS.exe"+11EDD1B: F3 0F 59 C7                 -  mulss xmm0,xmm7
"NMS.exe"+11EDD1F: F3 0F 5E 85 90 0A 00 00     -  divss xmm0,[rbp+00000A90]
"NMS.exe"+11EDD27: F3 0F 10 8F A4 2C 00 00     -  movss xmm1,[rdi+00002CA4]
// ---------- INJECTING HERE ----------
"NMS.exe"+11EDD2F: F3 0F 5C C8                 -  subss xmm1,xmm0
"NMS.exe"+11EDD33: F3 0F 11 8F A4 2C 00 00     -  movss [rdi+00002CA4],xmm1
// ---------- DONE INJECTING  ----------
"NMS.exe"+11EDD3B: 44 0F 2F F1                 -  comiss xmm14,xmm1
"NMS.exe"+11EDD3F: 72 3D                       -  jb NMS.exe+11EDD7E
"NMS.exe"+11EDD41: 4C 89 B7 A0 2C 00 00        -  mov [rdi+00002CA0],r14
"NMS.exe"+11EDD48: 44 89 64 24 38              -  mov [rsp+38],r12d
"NMS.exe"+11EDD4D: 4C 89 64 24 30              -  mov [rsp+30],r12
"NMS.exe"+11EDD52: 44 89 64 24 28              -  mov [rsp+28],r12d
"NMS.exe"+11EDD57: 4C 89 64 24 20              -  mov [rsp+20],r12
"NMS.exe"+11EDD5C: 45 33 C9                    -  xor r9d,r9d
"NMS.exe"+11EDD5F: 45 33 C0                    -  xor r8d,r8d
"NMS.exe"+11EDD62: 48 8B 97 10 02 00 00        -  mov rdx,[rdi+00000210]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>161</ID>
          <Description>"Infinite Mining Beam"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Mining Beam / 4 bytes / 0 - 200 (dec)
}

[ENABLE]

aobscanmodule(infminingbeam,NMS.exe,29 43 18 41 01 B4 BC 40 12 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+11C7BE5)

label(code)
label(return)

newmem:
mov eax, [rbx+1C]
mov [rbx+18], eax

code:
  //sub [rbx+18],eax
  add [r12+rdi*4+00001240],esi
  jmp return

infminingbeam:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(infminingbeam)

[DISABLE]

infminingbeam:
  db 29 43 18 41 01 B4 BC 40 12 00 00

unregistersymbol(infminingbeam)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11C7BE5

"NMS.exe"+11C7BC1: 85 F6                       -  test esi,esi
"NMS.exe"+11C7BC3: 75 0A                       -  jne NMS.exe+11C7BCF
"NMS.exe"+11C7BC5: B8 01 00 00 00              -  mov eax,00000001
"NMS.exe"+11C7BCA: E9 83 FD FF FF              -  jmp NMS.exe+11C7952
"NMS.exe"+11C7BCF: 45 84 F6                    -  test r14l,r14l
"NMS.exe"+11C7BD2: 75 1C                       -  jne NMS.exe+11C7BF0
"NMS.exe"+11C7BD4: 66 0F 6E C6                 -  movd xmm0,esi
"NMS.exe"+11C7BD8: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
"NMS.exe"+11C7BDB: FF 15 AF 33 96 00           -  call qword ptr [NMS.exe+1B2AF90]
"NMS.exe"+11C7BE1: F3 0F 2C C0                 -  cvttss2si eax,xmm0
// ---------- INJECTING HERE ----------
"NMS.exe"+11C7BE5: 29 43 18                    -  sub [rbx+18],eax
"NMS.exe"+11C7BE8: 41 01 B4 BC 30 12 00 00     -  add [r12+rdi*4+00001230],esi
// ---------- DONE INJECTING  ----------
"NMS.exe"+11C7BF0: B8 04 00 00 00              -  mov eax,00000004
"NMS.exe"+11C7BF5: E9 58 FD FF FF              -  jmp NMS.exe+11C7952
"NMS.exe"+11C7BFA: CC                          -  int 3 
"NMS.exe"+11C7BFB: CC                          -  int 3 
"NMS.exe"+11C7BFC: CC                          -  int 3 
"NMS.exe"+11C7BFD: CC                          -  int 3 
"NMS.exe"+11C7BFE: CC                          -  int 3 
"NMS.exe"+11C7BFF: CC                          -  int 3 
"NMS.exe"+11C7C00: 40 53                       -  push rbx
"NMS.exe"+11C7C02: 48 83 EC 30                 -  sub rsp,30
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"No Overheat"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  No Overheat / Float / 0 - 6 (inc)
}

[ENABLE]

aobscanmodule(nooverheat,NMS.exe,F3 41 0F 58 CC F3 0F 11 8E) // should be unique

nooverheat:
  db 90 90 90 90 90
registersymbol(nooverheat)

[DISABLE]

nooverheat:
  db F3 41 0F 58 CC

unregistersymbol(nooverheat)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11C3ABF

"NMS.exe"+11C3A83: 0F 2F C8                 -  comiss xmm1,xmm0
"NMS.exe"+11C3A86: 0F 82 17 02 00 00        -  jb NMS.exe+11C3CA3
"NMS.exe"+11C3A8C: C6 86 AC 11 00 00 00     -  mov byte ptr [rsi+000011AC],00
"NMS.exe"+11C3A93: 44 89 A6 A0 11 00 00     -  mov [rsi+000011A0],r12d
"NMS.exe"+11C3A9A: 44 89 A6 58 13 00 00     -  mov [rsi+00001358],r12d
"NMS.exe"+11C3AA1: E9 FD 01 00 00           -  jmp NMS.exe+11C3CA3
"NMS.exe"+11C3AA6: F3 0F 10 8E A0 11 00 00  -  movss xmm1,[rsi+000011A0]
"NMS.exe"+11C3AAE: 41 0F 28 C4              -  movaps xmm0,xmm12
"NMS.exe"+11C3AB2: 80 BE F8 09 00 00 00     -  cmp byte ptr [rsi+000009F8],00
"NMS.exe"+11C3AB9: 0F 84 97 01 00 00        -  je NMS.exe+11C3C56
// ---------- INJECTING HERE ----------
"NMS.exe"+11C3ABF: F3 41 0F 58 CC           -  addss xmm1,xmm12
// ---------- DONE INJECTING  ----------
"NMS.exe"+11C3AC4: F3 0F 11 8E A0 11 00 00  -  movss [rsi+000011A0],xmm1
"NMS.exe"+11C3ACC: F3 0F 58 86 A4 11 00 00  -  addss xmm0,dword ptr [rsi+000011A4]
"NMS.exe"+11C3AD4: F3 0F 11 86 A4 11 00 00  -  movss [rsi+000011A4],xmm0
"NMS.exe"+11C3ADC: 48 8B CE                 -  mov rcx,rsi
"NMS.exe"+11C3ADF: E8 4C CB FF FF           -  call NMS.exe+11C0630
"NMS.exe"+11C3AE4: F3 0F 10 8E A4 11 00 00  -  movss xmm1,[rsi+000011A4]
"NMS.exe"+11C3AEC: 0F 2F C8                 -  comiss xmm1,xmm0
"NMS.exe"+11C3AEF: 76 5D                    -  jna NMS.exe+11C3B4E
"NMS.exe"+11C3AF1: 45 33 C0                 -  xor r8d,r8d
"NMS.exe"+11C3AF4: 8B 96 E8 04 00 00        -  mov edx,[rsi+000004E8]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>167</ID>
          <Description>"Infinite Shield"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Shield / 4 Bytes / 0 - 100 (dec)
}

[ENABLE]

aobscanmodule(infshield,NMS.exe,01 86 08 01 00 00) // should be unique

infshield:
  db 90 90 90 90 90 90
registersymbol(infshield)

[DISABLE]

infshield:
  db 01 86 08 01 00 00

unregistersymbol(infshield)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11DCF67

"NMS.exe"+11DCF38: 8B 4C 24 4C              -  mov ecx,[rsp+4C]
"NMS.exe"+11DCF3C: 8B 85 B0 05 00 00        -  mov eax,[rbp+000005B0]
"NMS.exe"+11DCF42: 23 0D B4 64 76 01        -  and ecx,[NMS.exe+29433FC]
"NMS.exe"+11DCF48: 0B C1                    -  or eax,ecx
"NMS.exe"+11DCF4A: 89 85 B0 05 00 00        -  mov [rbp+000005B0],eax
"NMS.exe"+11DCF50: F3 0F 58 8D B0 05 00 00  -  addss xmm1,dword ptr [rbp+000005B0]
"NMS.exe"+11DCF58: F3 0F 2C C1              -  cvttss2si eax,xmm1
"NMS.exe"+11DCF5C: 89 85 B0 05 00 00        -  mov [rbp+000005B0],eax
"NMS.exe"+11DCF62: 4D 85 FF                 -  test r15,r15
"NMS.exe"+11DCF65: 75 40                    -  jne NMS.exe+11DCFA7
// ---------- INJECTING HERE ----------
"NMS.exe"+11DCF67: 01 86 08 01 00 00        -  add [rsi+00000108],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+11DCF6D: 8B 86 08 01 00 00        -  mov eax,[rsi+00000108]
"NMS.exe"+11DCF73: 85 C0                    -  test eax,eax
"NMS.exe"+11DCF75: 7F 14                    -  jg NMS.exe+11DCF8B
"NMS.exe"+11DCF77: 33 C0                    -  xor eax,eax
"NMS.exe"+11DCF79: 48 FF 86 80 00 00 00     -  inc [rsi+00000080]
"NMS.exe"+11DCF80: 89 86 08 01 00 00        -  mov [rsi+00000108],eax
"NMS.exe"+11DCF86: E9 A1 00 00 00           -  jmp NMS.exe+11DD02C
"NMS.exe"+11DCF8B: B9 64 00 00 00           -  mov ecx,00000064
"NMS.exe"+11DCF90: 3B C1                    -  cmp eax,ecx
"NMS.exe"+11DCF92: 0F 4D C1                 -  cmovge eax,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>163</ID>
          <Description>"Infinite Scanner"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Scanner / Float / 0 - 1.0 (dec)
}

[ENABLE]

aobscanmodule(infscanner,NMS.exe,89 79 10 89 79 38) // should be unique
alloc(newmem,$1000,"NMS.exe"+11321D3)

label(code)
label(return)

newmem:
mov [rcx+10], (float)1.0

code:
  //mov [rcx+10],edi
  mov [rcx+38],edi
  jmp return

infscanner:
  jmp newmem
  nop
return:
registersymbol(infscanner)

[DISABLE]

infscanner:
  db 89 79 10 89 79 38

unregistersymbol(infscanner)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11321D3

"NMS.exe"+113219B: F3 0F 10 41 10           -  movss xmm0,[rcx+10]
"NMS.exe"+11321A0: 0F 2F 05 85 3E C3 00     -  comiss xmm0,[NMS.exe+1D6602C]
"NMS.exe"+11321A7: 0F 82 63 04 00 00        -  jb NMS.exe+1132610
"NMS.exe"+11321AD: 80 B9 B0 00 00 00 00     -  cmp byte ptr [rcx+000000B0],00
"NMS.exe"+11321B4: 0F 85 56 04 00 00        -  jne NMS.exe+1132610
"NMS.exe"+11321BA: F3 0F 10 05 C2 7B 44 01  -  movss xmm0,[NMS.exe+2579D84]
"NMS.exe"+11321C2: F3 0F 11 41 18           -  movss [rcx+18],xmm0
"NMS.exe"+11321C7: C6 81 B0 00 00 00 01     -  mov byte ptr [rcx+000000B0],01
"NMS.exe"+11321CE: 33 FF                    -  xor edi,edi
"NMS.exe"+11321D0: 89 79 30                 -  mov [rcx+30],edi
// ---------- INJECTING HERE ----------
"NMS.exe"+11321D3: 89 79 10                 -  mov [rcx+10],edi
"NMS.exe"+11321D6: 89 79 38                 -  mov [rcx+38],edi
// ---------- DONE INJECTING  ----------
"NMS.exe"+11321D9: F3 0F 10 4A 08           -  movss xmm1,[rdx+08]
"NMS.exe"+11321DE: F3 0F 10 42 04           -  movss xmm0,[rdx+04]
"NMS.exe"+11321E3: 8B 02                    -  mov eax,[rdx]
"NMS.exe"+11321E5: 89 41 50                 -  mov [rcx+50],eax
"NMS.exe"+11321E8: F3 0F 11 41 54           -  movss [rcx+54],xmm0
"NMS.exe"+11321ED: F3 0F 11 49 58           -  movss [rcx+58],xmm1
"NMS.exe"+11321F2: C7 41 5C 00 00 80 3F     -  mov [rcx+5C],3F800000
"NMS.exe"+11321F9: F3 0F 10 4A 18           -  movss xmm1,[rdx+18]
"NMS.exe"+11321FE: F3 0F 10 42 14           -  movss xmm0,[rdx+14]
"NMS.exe"+1132203: 8B 42 10                 -  mov eax,[rdx+10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>238</ID>
          <Description>"Infinite Terrain Manipulator"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  Terrain Manipulator / 4 bytes / 0 - 200 (dec)
}

[ENABLE]

aobscanmodule(infterrainmanip,NMS.exe,2B C8 85 C9 BB 00 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+11CAC06)

label(code)
label(return)

newmem:
mov ecx, [r13+1C]

code:
  //sub ecx,eax
  test ecx,ecx
  mov ebx,00000000
  jmp return

infterrainmanip:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(infterrainmanip)

[DISABLE]

infterrainmanip:
  db 2B C8 85 C9 BB 00 00 00 00

unregistersymbol(infterrainmanip)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11CAC06

"NMS.exe"+11CABDA: 77 0A                          -  ja NMS.exe+11CABE6
"NMS.exe"+11CABDC: F3 0F 10 0D 5C 65 E7 00        -  movss xmm1,[NMS.exe+2041140]
"NMS.exe"+11CABE4: EB 08                          -  jmp NMS.exe+11CABEE
"NMS.exe"+11CABE6: F3 0F 10 0D 56 65 E7 00        -  movss xmm1,[NMS.exe+2041144]
"NMS.exe"+11CABEE: 66 0F 6E C3                    -  movd xmm0,ebx
"NMS.exe"+11CABF2: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"NMS.exe"+11CABF5: F3 0F 59 C1                    -  mulss xmm0,xmm1
"NMS.exe"+11CABF9: E8 F4 2E 8D 00                 -  call NMS.exe+1A9DAF2
"NMS.exe"+11CABFE: F3 0F 2C C0                    -  cvttss2si eax,xmm0
"NMS.exe"+11CAC02: 41 8B 4D 18                    -  mov ecx,[r13+18]
// ---------- INJECTING HERE ----------
"NMS.exe"+11CAC06: 2B C8                          -  sub ecx,eax
"NMS.exe"+11CAC08: 85 C9                          -  test ecx,ecx
"NMS.exe"+11CAC0A: BB 00 00 00 00                 -  mov ebx,00000000
// ---------- DONE INJECTING  ----------
"NMS.exe"+11CAC0F: 0F 4E CB                       -  cmovle ecx,ebx
"NMS.exe"+11CAC12: 41 89 4D 18                    -  mov [r13+18],ecx
"NMS.exe"+11CAC16: EB 02                          -  jmp NMS.exe+11CAC1A
"NMS.exe"+11CAC18: 33 DB                          -  xor ebx,ebx
"NMS.exe"+11CAC1A: 80 BE F1 00 00 00 00           -  cmp byte ptr [rsi+000000F1],00
"NMS.exe"+11CAC21: 75 67                          -  jne NMS.exe+11CAC8A
"NMS.exe"+11CAC23: 48 63 46 30                    -  movsxd  rax,dword ptr [rsi+30]
"NMS.exe"+11CAC27: 8B 4C 86 10                    -  mov ecx,[rsi+rax*4+10]
"NMS.exe"+11CAC2B: F7 C1 00 00 FC FF              -  test ecx,FFFC0000
"NMS.exe"+11CAC31: 76 15                          -  jna NMS.exe+11CAC48
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>184</ID>
          <Description>"Infinite Launch Thrusters"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  Launch Thruster / 4 Bytes / 0 - 200 (dec)
}

[ENABLE]

aobscanmodule(inflaunch,NMS.exe,89 4B 18 48 8B D3) // should be unique
alloc(newmem,$1000,"NMS.exe"+1376001)

label(code)
label(return)

newmem:
mov ecx, [rbx+1C]

code:
  mov [rbx+18],ecx
  mov rdx,rbx
  jmp return

inflaunch:
  jmp newmem
  nop
return:
registersymbol(inflaunch)

[DISABLE]

inflaunch:
  db 89 4B 18 48 8B D3

unregistersymbol(inflaunch)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+1376001

"NMS.exe"+1375FD8: 48 8B 74 24 58              -  mov rsi,[rsp+58]
"NMS.exe"+1375FDD: 48 85 DB                    -  test rbx,rbx
"NMS.exe"+1375FE0: 74 4A                       -  je NMS.exe+137602C
"NMS.exe"+1375FE2: 44 8B 43 18                 -  mov r8d,[rbx+18]
"NMS.exe"+1375FE6: 44 3B C0                    -  cmp r8d,eax
"NMS.exe"+1375FE9: 7C 41                       -  jl NMS.exe+137602C
"NMS.exe"+1375FEB: F3 0F 10 1D A9 FE 9E 00     -  movss xmm3,[NMS.exe+1D65E9C]
"NMS.exe"+1375FF3: 41 8B C8                    -  mov ecx,r8d
"NMS.exe"+1375FF6: 2B C8                       -  sub ecx,eax
"NMS.exe"+1375FF8: 48 C7 44 24 30 00 00 00 00  -  mov qword ptr [rsp+30],00000000
// ---------- INJECTING HERE ----------
"NMS.exe"+1376001: 89 4B 18                    -  mov [rbx+18],ecx
"NMS.exe"+1376004: 48 8B D3                    -  mov rdx,rbx
// ---------- DONE INJECTING  ----------
"NMS.exe"+1376007: 48 8B 0D EA BE 20 01        -  mov rcx,[NMS.exe+2581EF8]
"NMS.exe"+137600E: F3 0F 10 15 D2 16 CC 00     -  movss xmm2,[NMS.exe+20376E8]
"NMS.exe"+1376016: 48 81 C1 70 19 28 00        -  add rcx,00281970
"NMS.exe"+137601D: C6 44 24 28 01              -  mov byte ptr [rsp+28],01
"NMS.exe"+1376022: 44 89 44 24 20              -  mov [rsp+20],r8d
"NMS.exe"+1376027: E8 E4 7B 55 FF              -  call NMS.exe+8CDC10
"NMS.exe"+137602C: 48 8B 5C 24 50              -  mov rbx,[rsp+50]
"NMS.exe"+1376031: 48 83 C4 40                 -  add rsp,40
"NMS.exe"+1376035: 5D                          -  pop rbp
"NMS.exe"+1376036: C3                          -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>187</ID>
          <Description>"Infinite Pulse Drive"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infpulse,NMS.exe,41 FF 4E 18 89 B7 C4 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+139246F)

label(code)
label(return)

newmem:

code:
  //dec [r14+18]
  mov [rdi+000000C4],esi
  jmp return

infpulse:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(infpulse)

[DISABLE]

infpulse:
  db 41 FF 4E 18 89 B7 C4 00 00 00

unregistersymbol(infpulse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+139246F

"NMS.exe"+1392440: 89 74 24 20              -  mov [rsp+20],esi
"NMS.exe"+1392444: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+1392447: 4C 8D 85 D0 02 00 00     -  lea r8,[rbp+000002D0]
"NMS.exe"+139244E: 48 8B D3                 -  mov rdx,rbx
"NMS.exe"+1392451: E8 1A 17 44 FF           -  call NMS.exe+7D3B70
"NMS.exe"+1392456: 41 0F 28 CC              -  movaps xmm1,xmm12
"NMS.exe"+139245A: F3 0F 5E 8D 6C 04 00 00  -  divss xmm1,[rbp+0000046C]
"NMS.exe"+1392462: F3 0F 10 87 C4 00 00 00  -  movss xmm0,[rdi+000000C4]
"NMS.exe"+139246A: 0F 2F C1                 -  comiss xmm0,xmm1
"NMS.exe"+139246D: 76 0A                    -  jna NMS.exe+1392479
// ---------- INJECTING HERE ----------
"NMS.exe"+139246F: 41 FF 4E 18              -  dec [r14+18]
"NMS.exe"+1392473: 89 B7 C4 00 00 00        -  mov [rdi+000000C4],esi
// ---------- DONE INJECTING  ----------
"NMS.exe"+1392479: 49 8B 07                 -  mov rax,[r15]
"NMS.exe"+139247C: BA 06 00 00 00           -  mov edx,00000006
"NMS.exe"+1392481: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+1392484: FF 50 10                 -  call qword ptr [rax+10]
"NMS.exe"+1392487: 0F 2F 05 52 2C 9D 00     -  comiss xmm0,[NMS.exe+1D650E0]
"NMS.exe"+139248E: 77 16                    -  ja NMS.exe+13924A6
"NMS.exe"+1392490: 49 8B 07                 -  mov rax,[r15]
"NMS.exe"+1392493: BA 2B 00 00 00           -  mov edx,0000002B
"NMS.exe"+1392498: 49 8B CF                 -  mov rcx,r15
"NMS.exe"+139249B: FF 50 08                 -  call qword ptr [rax+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>236</ID>
          <Description>"No Ship Overheat"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  No Ship Overheat / Float / 0 - 1.0 (inc)
}

[ENABLE]

aobscanmodule(noshipoverheat,NMS.exe,F3 41 0F 58 8C 86 44 17 00 00) // should be unique

noshipoverheat:
  db 90 90 90 90 90 90 90 90 90 90
registersymbol(noshipoverheat)

[DISABLE]

noshipoverheat:
  db F3 41 0F 58 8C 86 44 17 00 00

unregistersymbol(noshipoverheat)


{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+139CC16

"NMS.exe"+139CBF1: 4C 63 E0                             -  movsxd  r12,eax
"NMS.exe"+139CBF4: 49 C1 E4 06                          -  shl r12,06
"NMS.exe"+139CBF8: 49 8B 06                             -  mov rax,[r14]
"NMS.exe"+139CBFB: 49 8B CE                             -  mov rcx,r14
"NMS.exe"+139CBFE: FF 50 38                             -  call qword ptr [rax+38]
"NMS.exe"+139CC01: 49 63 86 AC 00 00 00                 -  movsxd  rax,dword ptr [r14+000000AC]
"NMS.exe"+139CC08: 41 0F 2F C5                          -  comiss xmm0,xmm13
"NMS.exe"+139CC0C: 76 1E                                -  jna NMS.exe+139CC2C
"NMS.exe"+139CC0E: 41 0F 28 CA                          -  movaps xmm1,xmm10
"NMS.exe"+139CC12: F3 0F 5E C8                          -  divss xmm1,xmm0
// ---------- INJECTING HERE ----------
"NMS.exe"+139CC16: F3 41 0F 58 8C 86 44 17 00 00        -  addss xmm1,dword ptr [r14+rax*4+00001744]
// ---------- DONE INJECTING  ----------
"NMS.exe"+139CC20: F3 41 0F 11 8C 86 44 17 00 00        -  movss [r14+rax*4+00001744],xmm1
"NMS.exe"+139CC2A: EB 0C                                -  jmp NMS.exe+139CC38
"NMS.exe"+139CC2C: 41 C7 84 86 44 17 00 00 00 00 80 3F  -  mov [r14+rax*4+00001744],3F800000
"NMS.exe"+139CC38: 49 63 86 AC 00 00 00                 -  movsxd  rax,dword ptr [r14+000000AC]
"NMS.exe"+139CC3F: F3 41 0F 10 84 86 44 17 00 00        -  movss xmm0,[r14+rax*4+00001744]
"NMS.exe"+139CC49: 41 0F 2F C1                          -  comiss xmm0,xmm9
"NMS.exe"+139CC4D: 0F 82 48 01 00 00                    -  jb NMS.exe+139CD9B
"NMS.exe"+139CC53: 42 80 BC 30 7C 17 00 00 00           -  cmp byte ptr [rax+r14+0000177C],00
"NMS.exe"+139CC5C: 0F 85 14 01 00 00                    -  jne NMS.exe+139CD76
"NMS.exe"+139CC62: BE CA 12 EC BD                       -  mov esi,BDEC12CA
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>237</ID>
          <Description>"Free Crafting"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(freecraft,NMS.exe,41 18 8B DE 3B C6 0F 4C D8 2B C3 89 41 18) // should be unique

freecraft+09:
  db 90 90
registersymbol(freecraft)

[DISABLE]

freecraft+09:
  db 2B C3

unregistersymbol(freecraft)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+7CD99D

"NMS.exe"+7CD982: 48 8B DF              -  mov rbx,rdi
"NMS.exe"+7CD985: 4C 0F 47 E3           -  cmova r12,rbx
"NMS.exe"+7CD989: 4D 85 E4              -  test r12,r12
"NMS.exe"+7CD98C: 74 65                 -  je NMS.exe+7CD9F3
"NMS.exe"+7CD98E: 66 90                 -  nop 
"NMS.exe"+7CD990: 49 8B 0F              -  mov rcx,[r15]
"NMS.exe"+7CD993: 8B 41 18              -  mov eax,[rcx+18]
"NMS.exe"+7CD996: 8B DE                 -  mov ebx,esi
"NMS.exe"+7CD998: 3B C6                 -  cmp eax,esi
"NMS.exe"+7CD99A: 0F 4C D8              -  cmovl ebx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+7CD99D: 2B C3                 -  sub eax,ebx
"NMS.exe"+7CD99F: 89 41 18              -  mov [rcx+18],eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+7CD9A2: 85 DB                 -  test ebx,ebx
"NMS.exe"+7CD9A4: 7E 3D                 -  jle NMS.exe+7CD9E3
"NMS.exe"+7CD9A6: 48 8B 41 24           -  mov rax,[rcx+24]
"NMS.exe"+7CD9AA: 48 89 45 D8           -  mov [rbp-28],rax
"NMS.exe"+7CD9AE: C7 45 E0 01 00 00 00  -  mov [rbp-20],00000001
"NMS.exe"+7CD9B5: 49 8D 4E 60           -  lea rcx,[r14+60]
"NMS.exe"+7CD9B9: 48 8B 51 08           -  mov rdx,[rcx+08]
"NMS.exe"+7CD9BD: 48 39 51 10           -  cmp [rcx+10],rdx
"NMS.exe"+7CD9C1: 74 17                 -  je NMS.exe+7CD9DA
"NMS.exe"+7CD9C3: F2 0F 10 45 D8        -  movsd xmm0,[rbp-28]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>241</ID>
          <Description>"Infinite Ship Shield"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infshipshield,NMS.exe,01 43 18 45 8B C4) // should be unique
alloc(newmem,$1000,"NMS.exe"+11DF80A)

label(code)
label(return)

newmem:


code:
  //add [rbx+18],eax
  mov r8d,r12d
  jmp return

infshipshield:
  jmp newmem
  nop
return:
registersymbol(infshipshield)

[DISABLE]

infshipshield:
  db 01 43 18 45 8B C4

unregistersymbol(infshipshield)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11DF80A

"NMS.exe"+11DF7E7: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+11DF7EA: 45 8B C4                 -  mov r8d,r12d
"NMS.exe"+11DF7ED: 48 8B CE                 -  mov rcx,rsi
"NMS.exe"+11DF7F0: 41 8D 51 5B              -  lea edx,[r9+5B]
"NMS.exe"+11DF7F4: E8 E7 58 5F FF           -  call NMS.exe+7D50E0
"NMS.exe"+11DF7F9: 48 8B D8                 -  mov rbx,rax
"NMS.exe"+11DF7FC: 48 85 C0                 -  test rax,rax
"NMS.exe"+11DF7FF: 74 44                    -  je NMS.exe+11DF845
"NMS.exe"+11DF801: 8B 85 B0 05 00 00        -  mov eax,[rbp+000005B0]
"NMS.exe"+11DF807: 45 33 C9                 -  xor r9d,r9d
// ---------- INJECTING HERE ----------
"NMS.exe"+11DF80A: 01 43 18                 -  add [rbx+18],eax
"NMS.exe"+11DF80D: 45 8B C4                 -  mov r8d,r12d
// ---------- DONE INJECTING  ----------
"NMS.exe"+11DF810: 48 8B CE                 -  mov rcx,rsi
"NMS.exe"+11DF813: 41 8D 51 5B              -  lea edx,[r9+5B]
"NMS.exe"+11DF817: E8 A4 57 5F FF           -  call NMS.exe+7D4FC0
"NMS.exe"+11DF81C: 8B 4B 18                 -  mov ecx,[rbx+18]
"NMS.exe"+11DF81F: 48 85 C0                 -  test rax,rax
"NMS.exe"+11DF822: 74 05                    -  je NMS.exe+11DF829
"NMS.exe"+11DF824: 8B 40 1C                 -  mov eax,[rax+1C]
"NMS.exe"+11DF827: EB 05                    -  jmp NMS.exe+11DF82E
"NMS.exe"+11DF829: B8 01 00 00 00           -  mov eax,00000001
"NMS.exe"+11DF82E: 85 C9                    -  test ecx,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>288</ID>
          <Description>"Infinite Plasma Grenade"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-31
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infplasmagren,NMS.exe,FF 4B 18 F3 0F 2C 85 18 01 00 00) // should be unique

infplasmagren:
  db 90 90 90
registersymbol(infplasmagren)

[DISABLE]

infplasmagren:
  db FF 4B 18 F3 0F 2C 85 18 01 00 00

unregistersymbol(infplasmagren)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11D00D2

"NMS.exe"+11D009F: 88 44 24 6C                 -  mov [rsp+6C],al
"NMS.exe"+11D00A3: 48 8D 4C 24 60              -  lea rcx,[rsp+60]
"NMS.exe"+11D00A8: FF 15 BA 12 96 00           -  call qword ptr [NMS.exe+1B31368]
"NMS.exe"+11D00AE: 0F 28 05 FB D6 B9 00        -  movaps xmm0,[NMS.exe+1D6D7B0]
"NMS.exe"+11D00B5: 0F 29 45 A0                 -  movaps [rbp-60],xmm0
"NMS.exe"+11D00B9: 4C 8D 4D A0                 -  lea r9,[rbp-60]
"NMS.exe"+11D00BD: 41 0F 28 D5                 -  movaps xmm2,xmm13
"NMS.exe"+11D00C1: 48 8D 54 24 60              -  lea rdx,[rsp+60]
"NMS.exe"+11D00C6: 48 8D 8D 50 03 00 00        -  lea rcx,[rbp+00000350]
"NMS.exe"+11D00CD: E8 9E AC 73 FF              -  call NMS.exe+90AD70
// ---------- INJECTING HERE ----------
"NMS.exe"+11D00D2: FF 4B 18                    -  dec [rbx+18]
"NMS.exe"+11D00D5: F3 0F 2C 85 18 01 00 00     -  cvttss2si eax,[rbp+00000118]
// ---------- DONE INJECTING  ----------
"NMS.exe"+11D00DD: 89 44 24 70                 -  mov [rsp+70],eax
"NMS.exe"+11D00E1: F3 44 0F 2C AD 0C 01 00 00  -  cvttss2si r13d,[rbp+0000010C]
"NMS.exe"+11D00EA: F3 44 0F 10 B5 14 01 00 00  -  movss xmm14,[rbp+00000114]
"NMS.exe"+11D00F3: F3 44 0F 10 BD 10 01 00 00  -  movss xmm15,[rbp+00000110]
"NMS.exe"+11D00FC: F3 0F 2C 85 1C 01 00 00     -  cvttss2si eax,[rbp+0000011C]
"NMS.exe"+11D0104: 85 C0                       -  test eax,eax
"NMS.exe"+11D0106: 0F 9F 85 58 03 00 00        -  setg byte ptr [rbp+00000358]
"NMS.exe"+11D010D: 66 0F 6F 05 EB CE B9 00     -  movdqa xmm0,[NMS.exe+1D6D000]
"NMS.exe"+11D0115: F3 0F 7F 45 40              -  movdqu [rbp+40],xmm0
"NMS.exe"+11D011A: 66 0F 6F 0D 1E D1 B9 00     -  movdqa xmm1,[NMS.exe+1D6D240]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>277</ID>
          <Description>"Infinite Warp"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infwarp,NMS.exe,29 47 18 EB 03) // should be unique

infwarp:
  db 90 90 90

registersymbol(infwarp)

[DISABLE]

infwarp:
  db 29 47 18

unregistersymbol(infwarp)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+117EDED

"NMS.exe"+117EDCA: 74 12                          -  je NMS.exe+117EDDE
"NMS.exe"+117EDCC: E8 8F 42 41 FF                 -  call NMS.exe+593060
"NMS.exe"+117EDD1: 80 78 08 00                    -  cmp byte ptr [rax+08],00
"NMS.exe"+117EDD5: 75 2A                          -  jne NMS.exe+117EE01
"NMS.exe"+117EDD7: 0F B6 05 1A 48 EB 00           -  movzx eax,byte ptr [NMS.exe+20335F8]
"NMS.exe"+117EDDE: 84 C0                          -  test al,al
"NMS.exe"+117EDE0: 75 1F                          -  jne NMS.exe+117EE01
"NMS.exe"+117EDE2: 41 83 FC 09                    -  cmp r12d,09
"NMS.exe"+117EDE6: 74 0A                          -  je NMS.exe+117EDF2
"NMS.exe"+117EDE8: E8 C3 DE 05 00                 -  call NMS.exe+11DCCB0
// ---------- INJECTING HERE ----------
"NMS.exe"+117EDED: 29 47 18                       -  sub [rdi+18],eax
"NMS.exe"+117EDF0: EB 03                          -  jmp NMS.exe+117EDF5
// ---------- DONE INJECTING  ----------
"NMS.exe"+117EDF2: FF 4F 18                       -  dec [rdi+18]
"NMS.exe"+117EDF5: 8B 47 18                       -  mov eax,[rdi+18]
"NMS.exe"+117EDF8: 85 C0                          -  test eax,eax
"NMS.exe"+117EDFA: 41 0F 4E C7                    -  cmovle eax,r15d
"NMS.exe"+117EDFE: 89 47 18                       -  mov [rdi+18],eax
"NMS.exe"+117EE01: 33 C0                          -  xor eax,eax
"NMS.exe"+117EE03: 48 89 44 24 5C                 -  mov [rsp+5C],rax
"NMS.exe"+117EE08: 48 89 44 24 64                 -  mov [rsp+64],rax
"NMS.exe"+117EE0D: 48 89 44 24 6C                 -  mov [rsp+6C],rax
"NMS.exe"+117EE12: 48 89 44 24 74                 -  mov [rsp+74],rax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>239</ID>
          <Description>"Infinite Ammo"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(infammo,NMS.exe,47 29 A4 B7 40 12 00 00) // should be unique

infammo:
  db 90 90 90 90 90 90 90 90
registersymbol(infammo)

[DISABLE]

infammo:
  db 47 29 A4 B7 40 12 00 00

unregistersymbol(infammo)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11CC9FF

"NMS.exe"+11CC9C2: 66 0F 6F 05 D6 D3 B9 00     -  movdqa xmm0,[NMS.exe+1D69DA0]
"NMS.exe"+11CC9CA: F3 0F 7F 45 40              -  movdqu [rbp+40],xmm0
"NMS.exe"+11CC9CF: 66 0F 6F 0D 09 D6 B9 00     -  movdqa xmm1,[NMS.exe+1D69FE0]
"NMS.exe"+11CC9D7: F3 0F 7F 4D 50              -  movdqu [rbp+50],xmm1
"NMS.exe"+11CC9DC: C7 45 60 23 00 00 00        -  mov [rbp+60],00000023
"NMS.exe"+11CC9E3: C7 45 64 21 00 00 00        -  mov [rbp+64],00000021
"NMS.exe"+11CC9EA: 4C 8D 4D 80                 -  lea r9,[rbp-80]
"NMS.exe"+11CC9EE: 46 8B 44 B5 40              -  mov r8d,[rbp+r14*4+40]
"NMS.exe"+11CC9F3: 48 8B 95 68 03 00 00        -  mov rdx,[rbp+00000368]
"NMS.exe"+11CC9FA: E8 31 81 60 FF              -  call NMS.exe+7D4B30
// ---------- INJECTING HERE ----------
"NMS.exe"+11CC9FF: 47 29 A4 B7 30 12 00 00     -  sub [r15+r14*4+00001230],r12d
// ---------- DONE INJECTING  ----------
"NMS.exe"+11CCA07: 43 83 BC B7 30 12 00 00 00  -  cmp dword ptr [r15+r14*4+00001230],00
"NMS.exe"+11CCA10: 0F 8F 6D 02 00 00           -  jg NMS.exe+11CCC83
"NMS.exe"+11CCA16: 49 8B 07                    -  mov rax,[r15]
"NMS.exe"+11CCA19: 41 8B D6                    -  mov edx,r14d
"NMS.exe"+11CCA1C: 49 8B CF                    -  mov rcx,r15
"NMS.exe"+11CCA1F: FF 50 50                    -  call qword ptr [rax+50]
"NMS.exe"+11CCA22: 48 85 C0                    -  test rax,rax
"NMS.exe"+11CCA25: 0F 84 26 01 00 00           -  je NMS.exe+11CCB51
"NMS.exe"+11CCA2B: 48 8B 0D D6 88 3B 01        -  mov rcx,[NMS.exe+2585308]
"NMS.exe"+11CCA32: 48 83 C1 58                 -  add rcx,58
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>177</ID>
      <Description>"Player Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(playerptr,NMS.exe,44 8B A1 44 0D 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+A012A5)

label(code)
label(return)
label(pPlayer)

newmem:
mov [pPlayer], rcx

code:
  mov r12d,[rcx+00000D44]
  jmp return

pPlayer:
dq 0

playerptr:
  jmp newmem
  nop
  nop
return:
registersymbol(playerptr)
registersymbol(pPlayer)

[DISABLE]

playerptr:
  db 44 8B A1 44 0D 00 00

unregistersymbol(playerptr)
unregistersymbol(pPlayer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A012A5

"NMS.exe"+A0127B: 48 0F AF D7                 -  imul rdx,rdi
"NMS.exe"+A0127F: 48 89 55 90                 -  mov [rbp-70],rdx
"NMS.exe"+A01283: 45 33 C0                    -  xor r8d,r8d
"NMS.exe"+A01286: 48 8D 55 80                 -  lea rdx,[rbp-80]
"NMS.exe"+A0128A: 49 8B CD                    -  mov rcx,r13
"NMS.exe"+A0128D: E8 AE BB B8 FF              -  call NMS.exe+58CE40
"NMS.exe"+A01292: 48 8B F0                    -  mov rsi,rax
"NMS.exe"+A01295: 48 85 C0                    -  test rax,rax
"NMS.exe"+A01298: 0F 84 08 0E 00 00           -  je NMS.exe+A020A6
"NMS.exe"+A0129E: 48 8B 0D 53 0C B8 01        -  mov rcx,[NMS.exe+2581EF8]
// ---------- INJECTING HERE ----------
"NMS.exe"+A012A5: 44 8B A1 44 0D 00 00        -  mov r12d,[rcx+00000D44]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A012AC: B8 40 00 00 00              -  mov eax,00000040
"NMS.exe"+A012B1: 65 48 8B 0C 25 58 00 00 00  -  mov rcx,gs:[00000058]
"NMS.exe"+A012BA: 48 8B 11                    -  mov rdx,[rcx]
"NMS.exe"+A012BD: 8B 0C 10                    -  mov ecx,[rax+rdx]
"NMS.exe"+A012C0: 39 0D 8A C5 0A 02           -  cmp [NMS.exe+2AAD850],ecx
"NMS.exe"+A012C6: 7E 31                       -  jle NMS.exe+A012F9
"NMS.exe"+A012C8: 48 8D 0D 81 C5 0A 02        -  lea rcx,[NMS.exe+2AAD850]
"NMS.exe"+A012CF: E8 C0 60 DF 00              -  call NMS.exe+17F7394
"NMS.exe"+A012D4: 83 3D 75 C5 0A 02 FF        -  cmp dword ptr [NMS.exe+2AAD850],-01
"NMS.exe"+A012DB: 75 1C                       -  jne NMS.exe+A012F9
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Pointer"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Units"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+D44</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"Nanite Clusters"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+D48</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>178</ID>
              <Description>"Shield"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+D38</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>270</ID>
              <Description>"Wanted"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+27E938</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>287</ID>
              <Description>"Jet Pack Surge"</Description>
              <VariableType>Byte</VariableType>
              <Address>+2801DC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>312</ID>
              <Description>"Primary Ship"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+4728</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>315</ID>
              <Description>"Known Glyphs"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>16</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+6260</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>391</ID>
              <Description>"Vocab Base"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>8 Bytes</VariableType>
              <Address>+47A8</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>417</ID>
          <Description>"Solar Base"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>8 Bytes</VariableType>
          <Address>pPlayer</Address>
          <Offsets>
            <Offset>27DFF8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>233</ID>
      <Description>"Hover Item"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(hoverptr,NMS.exe,32 C0 4C 8D 5C 24 70 49 8B 5B 30 49 8B 6B 38) // should be unique
alloc(newmem,$1000,"NMS.exe"+9F91B3)

label(code)
label(return)
label(pHover)

newmem:
cmp rax, 1
jne code
mov [pHover], rdi

code:
  mov rbx,[r11+30]
  mov rbp,[r11+38]
  jmp return

pHover:
dq 0

hoverptr+07:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(hoverptr)
registersymbol(pHover)

[DISABLE]

hoverptr+07:
  db 49 8B 5B 30 49 8B 6B 38

unregistersymbol(hoverptr)
unregistersymbol(pHover)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9F91B3

"NMS.exe"+9F918D: 4C 8B 84 24 D0 00 00 00        -  mov r8,[rsp+000000D0]
"NMS.exe"+9F9195: 4D 8B CF                       -  mov r9,r15
"NMS.exe"+9F9198: 49 8B D6                       -  mov rdx,r14
"NMS.exe"+9F919B: 4C 89 64 24 20                 -  mov [rsp+20],r12
"NMS.exe"+9F91A0: 48 8B CB                       -  mov rcx,rbx
"NMS.exe"+9F91A3: E8 58 A6 00 00                 -  call NMS.exe+A03800
"NMS.exe"+9F91A8: B0 01                          -  mov al,01
"NMS.exe"+9F91AA: EB 02                          -  jmp NMS.exe+9F91AE
"NMS.exe"+9F91AC: 32 C0                          -  xor al,al
"NMS.exe"+9F91AE: 4C 8D 5C 24 70                 -  lea r11,[rsp+70]
// ---------- INJECTING HERE ----------
"NMS.exe"+9F91B3: 49 8B 5B 30                    -  mov rbx,[r11+30]
"NMS.exe"+9F91B7: 49 8B 6B 38                    -  mov rbp,[r11+38]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9F91BB: 49 8B 73 40                    -  mov rsi,[r11+40]
"NMS.exe"+9F91BF: 49 8B E3                       -  mov rsp,r11
"NMS.exe"+9F91C2: 41 5F                          -  pop r15
"NMS.exe"+9F91C4: 41 5E                          -  pop r14
"NMS.exe"+9F91C6: 41 5D                          -  pop r13
"NMS.exe"+9F91C8: 41 5C                          -  pop r12
"NMS.exe"+9F91CA: 5F                             -  pop rdi
"NMS.exe"+9F91CB: C3                             -  ret 
"NMS.exe"+9F91CC: CC                             -  int 3 
"NMS.exe"+9F91CD: CC                             -  int 3 
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Pointer"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pHover</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>23</ID>
              <Description>"Name"</Description>
              <VariableType>String</VariableType>
              <Length>16</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+08</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>24</ID>
              <Description>"Amount"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+18</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>116</Key>
                  </Keys>
                  <Value>(Max)</Value>
                  <ID>0</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>25</ID>
              <Description>"Max"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+1C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"Column"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+24</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"Row"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+28</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>276</ID>
      <Description>"Translator"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(translator,NMS.exe,3? C0 84 C0 0F 84 AE 00 00 00) // should be unique

translator:
  db B0 01
registersymbol(translator)

[DISABLE]

translator:
  db 32 C0

unregistersymbol(translator)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+EB3200

"NMS.exe"+EB31DC: 74 22                 -  je NMS.exe+EB3200
"NMS.exe"+EB31DE: 48 8B 44 24 38        -  mov rax,[rsp+38]
"NMS.exe"+EB31E3: 4C 8B 44 24 30        -  mov r8,[rsp+30]
"NMS.exe"+EB31E8: 4C 39 01              -  cmp [rcx],r8
"NMS.exe"+EB31EB: 75 0A                 -  jne NMS.exe+EB31F7
"NMS.exe"+EB31ED: 48 39 41 08           -  cmp [rcx+08],rax
"NMS.exe"+EB31F1: 0F 84 B6 00 00 00     -  je NMS.exe+EB32AD
"NMS.exe"+EB31F7: 48 83 C1 18           -  add rcx,18
"NMS.exe"+EB31FB: 48 3B CA              -  cmp rcx,rdx
"NMS.exe"+EB31FE: 75 E8                 -  jne NMS.exe+EB31E8
// ---------- INJECTING HERE ----------
"NMS.exe"+EB3200: 32 C0                 -  xor al,al
"NMS.exe"+EB3202: 84 C0                 -  test al,al
"NMS.exe"+EB3204: 0F 84 AE 00 00 00     -  je NMS.exe+EB32B8
// ---------- DONE INJECTING  ----------
"NMS.exe"+EB320A: 48 8D 05 6F 73 E4 00  -  lea rax,[NMS.exe+1CFA580]
"NMS.exe"+EB3211: C6 45 50 00           -  mov byte ptr [rbp+50],00
"NMS.exe"+EB3215: 48 89 44 24 40        -  mov [rsp+40],rax
"NMS.exe"+EB321A: 4C 8D 4D 80           -  lea r9,[rbp-80]
"NMS.exe"+EB321E: 48 8D 05 57 73 E4 00  -  lea rax,[NMS.exe+1CFA57C]
"NMS.exe"+EB3225: 48 89 44 24 48        -  mov [rsp+48],rax
"NMS.exe"+EB322A: 48 8D 15 2F 14 E8 00  -  lea rdx,[NMS.exe+1D34660]
"NMS.exe"+EB3231: 48 8D 05 40 73 E4 00  -  lea rax,[NMS.exe+1CFA578]
"NMS.exe"+EB3238: 48 89 44 24 50        -  mov [rsp+50],rax
"NMS.exe"+EB323D: 48 8D 4D 50           -  lea rcx,[rbp+50]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>327</ID>
      <Description>"Always Summon Freighter Battle"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-09
  Author : Cedric

  Always Summon Freighter Battle
}

[ENABLE]

aobscanmodule(alwaysbattle,NMS.exe,75 27 48 8B 0D ?? ?? ?? ?? 48 81 C1 ?? ?? ?? ?? E8 ??) // should be unique

alwaysbattle:
  db 90 90
registersymbol(alwaysbattle)

[DISABLE]

alwaysbattle:
  db 75 27

unregistersymbol(alwaysbattle)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+7D9948

"NMS.exe"+7D9916: 0F B7 05 9F F2 51 01           -  movzx eax,word ptr [NMS.exe+1CF8BBC]
"NMS.exe"+7D991D: 66 89 45 F4                    -  mov [rbp-0C],ax
"NMS.exe"+7D9921: FF 15 41 5A 35 01              -  call qword ptr [NMS.exe+1B2F368]
"NMS.exe"+7D9927: 48 8B 0D 6A B1 DA 01           -  mov rcx,[NMS.exe+2584A98]
"NMS.exe"+7D992E: 4C 8D 4D 28                    -  lea r9,[rbp+28]
"NMS.exe"+7D9932: 48 81 C1 C8 37 03 00           -  add rcx,000337C8
"NMS.exe"+7D9939: 4C 8D 45 D8                    -  lea r8,[rbp-28]
"NMS.exe"+7D993D: 48 8D 55 E8                    -  lea rdx,[rbp-18]
"NMS.exe"+7D9941: E8 5A B9 E1 FF                 -  call NMS.exe+5F52A0
"NMS.exe"+7D9946: 85 C0                          -  test eax,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+7D9948: 75 27                          -  jne NMS.exe+7D9971
"NMS.exe"+7D994A: 48 8B 0D 47 B1 DA 01           -  mov rcx,[NMS.exe+2584A98]
// ---------- DONE INJECTING  ----------
"NMS.exe"+7D9951: 48 81 C1 00 73 37 00           -  add rcx,00377300
"NMS.exe"+7D9958: E8 33 90 FA FF                 -  call NMS.exe+782990
"NMS.exe"+7D995D: 84 C0                          -  test al,al
"NMS.exe"+7D995F: 75 10                          -  jne NMS.exe+7D9971
"NMS.exe"+7D9961: F7 05 39 B1 DA 01 FD FF FF FF  -  test [NMS.exe+2584AA4],FFFFFFFD
"NMS.exe"+7D996B: 74 04                          -  je NMS.exe+7D9971
"NMS.exe"+7D996D: B2 01                          -  mov dl,01
"NMS.exe"+7D996F: EB 02                          -  jmp NMS.exe+7D9973
"NMS.exe"+7D9971: 32 D2                          -  xor dl,dl
"NMS.exe"+7D9973: 48 8B 0D 1E B1 DA 01           -  mov rcx,[NMS.exe+2584A98]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>326</ID>
      <Description>"Kill All Pirates"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-05
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(killpirates,NMS.exe,41 2B 96 C4 01 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+A69896)

label(code)
label(return)

newmem:
  mov [r14+000001C4], edx

code:
  sub edx,[r14+000001C4]
  jmp return

killpirates:
  jmp newmem
  nop
  nop
return:
registersymbol(killpirates)

[DISABLE]

killpirates:
  db 41 2B 96 C4 01 00 00

unregistersymbol(killpirates)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A69896

"NMS.exe"+A6986D: 4A 8B 0C E9                 -  mov rcx,[rcx+r13*8]
"NMS.exe"+A69871: E8 EA 80 FC FF              -  call NMS.exe+A31960
"NMS.exe"+A69876: 4C 8B F0                    -  mov r14,rax
"NMS.exe"+A69879: 48 85 C0                    -  test rax,rax
"NMS.exe"+A6987C: 0F 84 FB 02 00 00           -  je NMS.exe+A69B7D
"NMS.exe"+A69882: 8B 80 C0 01 00 00           -  mov eax,[rax+000001C0]
"NMS.exe"+A69888: F3 0F 10 25 3C 78 30 01     -  movss xmm4,[NMS.exe+1D710CC]
"NMS.exe"+A69890: 85 C0                       -  test eax,eax
"NMS.exe"+A69892: 7E 43                       -  jle NMS.exe+A698D7
"NMS.exe"+A69894: 8B D0                       -  mov edx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+A69896: 41 2B 96 C4 01 00 00        -  sub edx,[r14+000001C4]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A6989D: B9 00 00 00 00              -  mov ecx,00000000
"NMS.exe"+A698A2: 0F 49 CA                    -  cmovns ecx,edx
"NMS.exe"+A698A5: 66 0F 6E C9                 -  movd xmm1,ecx
"NMS.exe"+A698A9: 0F 5B C9                    -  cvtdq2ps xmm1,xmm1
"NMS.exe"+A698AC: 66 0F 6E C0                 -  movd xmm0,eax
"NMS.exe"+A698B0: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
"NMS.exe"+A698B3: F3 0F 5E C8                 -  divss xmm1,xmm0
"NMS.exe"+A698B7: 41 0F 2F CB                 -  comiss xmm1,xmm11
"NMS.exe"+A698BB: 77 0B                       -  ja NMS.exe+A698C8
"NMS.exe"+A698BD: 41 0F 28 CB                 -  movaps xmm1,xmm11
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>443</ID>
      <Description>"Run Speed Multiplier"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-11
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(runspeed,NMS.exe,F3 44 0F 59 C1 F3 41 0F 5E) // should be unique
alloc(newmem,$1000,"NMS.exe"+11EDEAA)

label(code)
label(return)
label(fRunSpeed)

newmem:
mulss xmm8, [fRunSpeed]

code:
  mulss xmm8,xmm1
  jmp return

fRunSpeed:
dd (float)1.0

runspeed:
  jmp newmem
return:
registersymbol(runspeed)
registersymbol(fRunSpeed)

[DISABLE]

runspeed:
  db F3 44 0F 59 C1

unregistersymbol(runspeed)
unregistersymbol(fRunSpeed)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+11EDEAA

"NMS.exe"+11EDE7A: 41 0F 2E C7                 -  ucomiss xmm0,xmm15
"NMS.exe"+11EDE7E: 7A 22                       -  jp NMS.exe+11EDEA2
"NMS.exe"+11EDE80: 75 20                       -  jne NMS.exe+11EDEA2
"NMS.exe"+11EDE82: 48 8B 87 58 01 00 00        -  mov rax,[rdi+00000158]
"NMS.exe"+11EDE89: 48 63 88 98 01 00 00        -  movsxd  rcx,dword ptr [rax+00000198]
"NMS.exe"+11EDE90: 48 6B C1 1C                 -  imul rax,rcx,1C
"NMS.exe"+11EDE94: 48 8D 0D DD DE E4 00        -  lea rcx,[NMS.exe+203BD78]
"NMS.exe"+11EDE9B: F3 0F 10 0C 08              -  movss xmm1,[rax+rcx]
"NMS.exe"+11EDEA0: EB 08                       -  jmp NMS.exe+11EDEAA
"NMS.exe"+11EDEA2: F3 0F 10 0D 36 B7 E4 00     -  movss xmm1,[NMS.exe+20395E0]
// ---------- INJECTING HERE ----------
"NMS.exe"+11EDEAA: F3 44 0F 59 C1              -  mulss xmm8,xmm1
// ---------- DONE INJECTING  ----------
"NMS.exe"+11EDEAF: F3 41 0F 5E F0              -  divss xmm6,xmm8
"NMS.exe"+11EDEB4: 41 0F 28 C7                 -  movaps xmm0,xmm15
"NMS.exe"+11EDEB8: F3 0F 5C C6                 -  subss xmm0,xmm6
"NMS.exe"+11EDEBC: F3 41 0F 5F C1              -  maxss xmm0,xmm9
"NMS.exe"+11EDEC1: F3 41 0F 5D C7              -  minss xmm0,xmm15
"NMS.exe"+11EDEC6: F3 44 0F 10 05 01 C1 E4 00  -  movss xmm8,[NMS.exe+2039FD0]
"NMS.exe"+11EDECF: F3 44 0F 59 C1              -  mulss xmm8,xmm1
"NMS.exe"+11EDED4: F3 44 0F 59 C0              -  mulss xmm8,xmm0
"NMS.exe"+11EDED9: F3 44 0F 11 45 F0           -  movss [rbp-10],xmm8
"NMS.exe"+11EDEDF: F3 44 0F 10 4C 24 58        -  movss xmm9,[rsp+58]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>334</ID>
          <Description>"Speed Multiplier"</Description>
          <VariableType>Float</VariableType>
          <Address>fRunSpeed</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>183</ID>
      <Description>"Inventory Pointer"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(inventoryptr,NMS.exe,44 0F BF 51 40) // should be unique
alloc(newmem,$1000,"NMS.exe"+76CFCF)

label(code)
label(return)
label(pInventory)

newmem:
mov [pInventory], rcx

code:
  movsx r10d,word ptr [rcx+40]
  jmp return

pInventory:
dq 0

inventoryptr:
  jmp newmem
return:
registersymbol(inventoryptr)
registersymbol(pInventory)

[DISABLE]

inventoryptr:
  db 44 0F BF 51 40

unregistersymbol(inventoryptr)
unregistersymbol(pInventory)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+76CFCF

"NMS.exe"+76CFB9: CC                    -  int 3 
"NMS.exe"+76CFBA: CC                    -  int 3 
"NMS.exe"+76CFBB: CC                    -  int 3 
"NMS.exe"+76CFBC: CC                    -  int 3 
"NMS.exe"+76CFBD: CC                    -  int 3 
"NMS.exe"+76CFBE: CC                    -  int 3 
"NMS.exe"+76CFBF: CC                    -  int 3 
"NMS.exe"+76CFC0: 48 89 5C 24 08        -  mov [rsp+08],rbx
"NMS.exe"+76CFC5: 48 89 74 24 10        -  mov [rsp+10],rsi
"NMS.exe"+76CFCA: 48 89 7C 24 18        -  mov [rsp+18],rdi
// ---------- INJECTING HERE ----------
"NMS.exe"+76CFCF: 44 0F BF 51 40        -  movsx r10d,word ptr [rcx+40]
// ---------- DONE INJECTING  ----------
"NMS.exe"+76CFD4: 45 33 DB              -  xor r11d,r11d
"NMS.exe"+76CFD7: 0F BF 79 42           -  movsx edi,word ptr [rcx+42]
"NMS.exe"+76CFDB: 41 8B DA              -  mov ebx,r10d
"NMS.exe"+76CFDE: 0F AF DF              -  imul ebx,edi
"NMS.exe"+76CFE1: 48 8B F1              -  mov rsi,rcx
"NMS.exe"+76CFE4: 45 8B CB              -  mov r9d,r11d
"NMS.exe"+76CFE7: 85 DB                 -  test ebx,ebx
"NMS.exe"+76CFE9: 7E 63                 -  jle NMS.exe+76D04E
"NMS.exe"+76CFEB: 0F 1F 44 00 00        -  nop [rax+rax+00]
"NMS.exe"+76CFF0: 41 8B C1              -  mov eax,r9d
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>71</ID>
          <Description>"Pointer"</Description>
          <LastState RealAddress="00000000"/>
          <VariableType>String</VariableType>
          <Length>0</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>pInventory</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Columns (Max 8)"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>+40</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>73</ID>
              <Description>"Rows (Max 6)"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>+42</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>84</ID>
              <Description>"Max Slots"</Description>
              <VariableType>2 Bytes</VariableType>
              <Address>+44</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>74</ID>
              <Description>"Row 1"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>75</ID>
              <Description>"Row 2"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>76</ID>
              <Description>"Row 3"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>77</ID>
              <Description>"Row 4"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>78</ID>
              <Description>"Row 5"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+10</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>79</ID>
              <Description>"Row 6"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>8</BitLength>
              <ShowAsBinary>1</ShowAsBinary>
              <Address>+14</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>284</ID>
          <Description>"Stats"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>90</ID>
              <Description>"Pointer"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pInventory</Address>
              <Offsets>
                <Offset>0</Offset>
                <Offset>90</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>282</ID>
                  <Description>"Name"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+0</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>281</ID>
                      <Description>"Value"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+10</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>91</ID>
                  <Description>"Name"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+18</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>93</ID>
                      <Description>"Shield"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+10</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>283</ID>
                  <Description>"Name"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+30</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>92</ID>
                      <Description>"Hyperdrive"</Description>
                      <VariableType>Float</VariableType>
                      <Address>+10</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>445</ID>
      <Description>"Experimental"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>425</ID>
          <Description>"Base Pointer (GLOBAL DATA)"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-11
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(baseptr,NMS.exe,F3 0F 5E D1 0F 57 C0) // should be unique
alloc(newmem,$1000,"NMS.exe"+136D357)

label(code)
label(return)
label(pBase)

newmem:
mov [pBase], r11
mov [pBase+8], r11
add [pBase+8], rax

code:
  divss xmm2,xmm1
  xorps xmm0,xmm0
  jmp return

pBase:
dq 0 0

baseptr:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(baseptr)
registersymbol(pBase)

[DISABLE]

baseptr:
  db F3 0F 5E D1 0F 57 C0

unregistersymbol(baseptr)
unregistersymbol(pBase)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+1371B71

"NMS.exe"+1371B20: 0F 57 C0                       -  xorps xmm0,xmm0
"NMS.exe"+1371B23: F3 0F 58 C8                    -  addss xmm1,xmm0
"NMS.exe"+1371B27: F3 42 0F 58 8C 18 A8 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415A8]
"NMS.exe"+1371B31: F3 42 0F 58 8C 18 AC 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415AC]
"NMS.exe"+1371B3B: F3 42 0F 58 8C 18 B0 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415B0]
"NMS.exe"+1371B45: F3 42 0F 58 8C 18 B4 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415B4]
"NMS.exe"+1371B4F: F3 42 0F 58 8C 18 B8 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415B8]
"NMS.exe"+1371B59: F3 42 0F 58 8C 18 BC 15 04 02  -  addss xmm1,dword ptr [rax+r11+020415BC]
"NMS.exe"+1371B63: 48 6B C2 1C                    -  imul rax,rdx,1C
"NMS.exe"+1371B67: F3 42 0F 10 94 18 BC 15 04 02  -  movss xmm2,[rax+r11+020415BC]
// ---------- INJECTING HERE ----------
"NMS.exe"+1371B71: F3 0F 5E D1                    -  divss xmm2,xmm1
"NMS.exe"+1371B75: 0F 57 C0                       -  xorps xmm0,xmm0
// ---------- DONE INJECTING  ----------
"NMS.exe"+1371B78: F3 0F 2A 05 14 FA CC 00        -  cvtsi2ss xmm0,[NMS.exe+2041594]
"NMS.exe"+1371B80: F3 0F 10 0D EC 09 A0 00        -  movss xmm1,[NMS.exe+1D72574]
"NMS.exe"+1371B88: F3 0F 5E C8                    -  divss xmm1,xmm0
"NMS.exe"+1371B8C: 0F 2F CA                       -  comiss xmm1,xmm2
"NMS.exe"+1371B8F: 0F 86 CE FE FF FF              -  jbe NMS.exe+1371A63
"NMS.exe"+1371B95: 4D 69 C0 99 F8 76 5A           -  imul r8,r8,5A76F899
"NMS.exe"+1371B9C: 4D 03 C2                       -  add r8,r10
"NMS.exe"+1371B9F: 41 8B C8                       -  mov ecx,r8d
"NMS.exe"+1371BA2: 49 C1 E8 20                    -  shr r8,20
"NMS.exe"+1371BA6: 0F 57 C0                       -  xorps xmm0,xmm0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>426</ID>
              <Description>"Base"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pBase</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>427</ID>
                  <Description>"Spaceship Cache Count"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+2041594</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>434</ID>
                  <Description>"Spawn Freq Multi Low"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+2041598</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>437</ID>
                  <Description>"Spawn Freq Multi Med"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+204159C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>436</ID>
                  <Description>"Spawn Freq Multi High"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415A0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>444</ID>
              <Description>"Weights"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pBase+8</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>435</ID>
                  <Description>"Freighter Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415A4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>428</ID>
                  <Description>"Dropship Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415A8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>429</ID>
                  <Description>"Fighter Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415AC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>430</ID>
                  <Description>"Scientific Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415B0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>431</ID>
                  <Description>"Shuttle Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415B4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>432</ID>
                  <Description>"PlayerFreighter Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415B8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>433</ID>
                  <Description>"Exotic Spawn Weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+20415BC</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>442</ID>
          <Description>"Always S Class"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-11
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(alwaysS,NMS.exe,44 89 8F D4 00 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+7DE4F3)

label(code)
label(return)

newmem:
mov r9d, 3

code:
  mov [rdi+000000D4],r9d
  jmp return

alwaysS:
  jmp newmem
  nop
  nop
return:
registersymbol(alwaysS)

[DISABLE]

alwaysS:
  db 44 89 8F D4 00 00 00

unregistersymbol(alwaysS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+7DE4F3

"NMS.exe"+7DE4D4: F3 0F 59 C3                    -  mulss xmm0,xmm3
"NMS.exe"+7DE4D8: F3 0F 58 C8                    -  addss xmm1,xmm0
"NMS.exe"+7DE4DC: 0F 2F CA                       -  comiss xmm1,xmm2
"NMS.exe"+7DE4DF: 73 12                          -  jae NMS.exe+7DE4F3
"NMS.exe"+7DE4E1: 41 FF C1                       -  inc r9d
"NMS.exe"+7DE4E4: 49 FF C0                       -  inc r8
"NMS.exe"+7DE4E7: 48 83 C2 04                    -  add rdx,04
"NMS.exe"+7DE4EB: 49 83 F8 04                    -  cmp r8,04
"NMS.exe"+7DE4EF: 7C DF                          -  jl NMS.exe+7DE4D0
"NMS.exe"+7DE4F1: EB 07                          -  jmp NMS.exe+7DE4FA
// ---------- INJECTING HERE ----------
"NMS.exe"+7DE4F3: 44 89 8F D4 00 00 00           -  mov [rdi+000000D4],r9d
// ---------- DONE INJECTING  ----------
"NMS.exe"+7DE4FA: 8D 46 FD                       -  lea eax,[rsi-03]
"NMS.exe"+7DE4FD: A9 FC FF FF FF                 -  test eax,FFFFFFFC
"NMS.exe"+7DE502: 75 05                          -  jne NMS.exe+7DE509
"NMS.exe"+7DE504: 83 FE 05                       -  cmp esi,05
"NMS.exe"+7DE507: 75 12                          -  jne NMS.exe+7DE51B
"NMS.exe"+7DE509: C7 87 D4 00 00 00 00 00 00 00  -  mov [rdi+000000D4],00000000
"NMS.exe"+7DE513: EB 06                          -  jmp NMS.exe+7DE51B
"NMS.exe"+7DE515: 89 81 D4 00 00 00              -  mov [rcx+000000D4],eax
"NMS.exe"+7DE51B: 48 8B 47 78                    -  mov rax,[rdi+78]
"NMS.exe"+7DE51F: 4D 8B C6                       -  mov r8,r14
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>296</ID>
          <Description>"Current Mission"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-01
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(currentmissionptr,NMS.exe,48 8B 01 48 8B D9 FF 50 78) // should be unique
alloc(newmem,$1000,"NMS.exe"+A83126)

label(code)
label(return)
label(pMission)

newmem:
mov [pMission], rcx

code:
  mov rax,[rcx]
  mov rbx,rcx
  jmp return

pMission:
dq 0

currentmissionptr:
  jmp newmem
  nop
return:
registersymbol(currentmissionptr)
registersymbol(pMission)

[DISABLE]

currentmissionptr:
  db 48 8B 01 48 8B D9

unregistersymbol(currentmissionptr)
unregistersymbol(pMission)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A83126

"NMS.exe"+A83118: CC                       -  int 3 
"NMS.exe"+A83119: CC                       -  int 3 
"NMS.exe"+A8311A: CC                       -  int 3 
"NMS.exe"+A8311B: CC                       -  int 3 
"NMS.exe"+A8311C: CC                       -  int 3 
"NMS.exe"+A8311D: CC                       -  int 3 
"NMS.exe"+A8311E: CC                       -  int 3 
"NMS.exe"+A8311F: CC                       -  int 3 
"NMS.exe"+A83120: 40 53                    -  push rbx
"NMS.exe"+A83122: 48 83 EC 20              -  sub rsp,20
// ---------- INJECTING HERE ----------
"NMS.exe"+A83126: 48 8B 01                 -  mov rax,[rcx]
"NMS.exe"+A83129: 48 8B D9                 -  mov rbx,rcx
// ---------- DONE INJECTING  ----------
"NMS.exe"+A8312C: FF 50 78                 -  call qword ptr [rax+78]
"NMS.exe"+A8312F: 84 C0                    -  test al,al
"NMS.exe"+A83131: 75 50                    -  jne NMS.exe+A83183
"NMS.exe"+A83133: 48 8B 0D 5E 61 B0 01     -  mov rcx,[NMS.exe+2589298]
"NMS.exe"+A8313A: 38 81 88 74 03 00        -  cmp [rcx+00037488],al
"NMS.exe"+A83140: 74 39                    -  je NMS.exe+A8317B
"NMS.exe"+A83142: 48 8B 43 08              -  mov rax,[rbx+08]
"NMS.exe"+A83146: 48 39 81 70 74 03 00     -  cmp [rcx+00037470],rax
"NMS.exe"+A8314D: 75 2C                    -  jne NMS.exe+A8317B
"NMS.exe"+A8314F: 48 8B 43 10              -  mov rax,[rbx+10]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>294</ID>
              <Description>"Base"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pMission</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>292</ID>
                  <Description>"Type"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>+8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>293</ID>
                  <Description>"Step"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+48</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>299</ID>
                  <Description>"Unknown"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+4C</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>298</ID>
                  <Description>"Total"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+50</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>297</ID>
                  <Description>"Current"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+54</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>337</ID>
          <Description>"Fleet Mission"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-09
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(fleetmissionptr,NMS.exe,49 2B CB 48 03 8F C8 00 00 00 48 85 C0 74 06 4C 2B D8 49 03 CB 48) // should be unique
alloc(newmem,$1000,"NMS.exe"+9A59B2)

label(code)
label(return)
label(pFleetMission)

newmem:
mov [pFleetMission], rdi

code:
  sub rcx,r11
  add rcx,[rdi+000000C8]
  jmp return

pFleetMission:
dq 0

fleetmissionptr:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(fleetmissionptr)
registersymbol(pFleetMission)

[DISABLE]

fleetmissionptr:
  db 49 2B CB 48 03 8F C8 00 00 00

unregistersymbol(fleetmissionptr)
unregistersymbol(pFleetMission)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9A59B2

"NMS.exe"+9A5980: 48 85 C0                 -  test rax,rax
"NMS.exe"+9A5983: 0F 84 3F 01 00 00        -  je NMS.exe+9A5AC8
"NMS.exe"+9A5989: 88 5D C7                 -  mov [rbp-39],bl
"NMS.exe"+9A598C: 48 39 9F C8 00 00 00     -  cmp [rdi+000000C8],rbx
"NMS.exe"+9A5993: 0F 84 86 00 00 00        -  je NMS.exe+9A5A1F
"NMS.exe"+9A5999: 4C 8B 1D E8 6E BD 01     -  mov r11,[NMS.exe+257C888]
"NMS.exe"+9A59A0: 48 8B CF                 -  mov rcx,rdi
"NMS.exe"+9A59A3: E8 B8 5C DE FF           -  call NMS.exe+78B660
"NMS.exe"+9A59A8: 48 63 C8                 -  movsxd  rcx,eax
"NMS.exe"+9A59AB: 48 8B 87 D0 00 00 00     -  mov rax,[rdi+000000D0]
// ---------- INJECTING HERE ----------
"NMS.exe"+9A59B2: 49 2B CB                 -  sub rcx,r11
"NMS.exe"+9A59B5: 48 03 8F C8 00 00 00     -  add rcx,[rdi+000000C8]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9A59BC: 48 85 C0                 -  test rax,rax
"NMS.exe"+9A59BF: 74 06                    -  je NMS.exe+9A59C7
"NMS.exe"+9A59C1: 4C 2B D8                 -  sub r11,rax
"NMS.exe"+9A59C4: 49 03 CB                 -  add rcx,r11
"NMS.exe"+9A59C7: 48 85 C9                 -  test rcx,rcx
"NMS.exe"+9A59CA: 8B C3                    -  mov eax,ebx
"NMS.exe"+9A59CC: 0F 49 C1                 -  cmovns eax,ecx
"NMS.exe"+9A59CF: 85 C0                    -  test eax,eax
"NMS.exe"+9A59D1: 7E 4C                    -  jle NMS.exe+9A5A1F
"NMS.exe"+9A59D3: 48 8B C3                 -  mov rax,rbx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>338</ID>
              <Description>"Base"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pFleetMission</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>339</ID>
                  <Description>"Timer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+C8</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>351</ID>
          <Description>"Frigate"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-09
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(frigateptr,NMS.exe,45 8B 86 D0 00 00 00 48 8D 15) // should be unique
alloc(newmem,$1000,"NMS.exe"+9A00D7)

label(code)
label(return)
label(pFrigate)

newmem:
mov [pFrigate], r14

code:
  mov r8d,[r14+000000D0]
  jmp return

pFrigate:
dq 0

frigateptr:
  jmp newmem
  nop
  nop
return:
registersymbol(frigateptr)
registersymbol(pFrigate)

[DISABLE]

frigateptr:
  db 45 8B 86 D0 00 00 00

unregistersymbol(frigateptr)
unregistersymbol(pFrigate)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9A00D7

"NMS.exe"+9A00A6: 0F 28 45 20              -  movaps xmm0,[rbp+20]
"NMS.exe"+9A00AA: 66 0F 7F 85 20 04 00 00  -  movdqa [rbp+00000420],xmm0
"NMS.exe"+9A00B2: 45 33 C0                 -  xor r8d,r8d
"NMS.exe"+9A00B5: 48 8D 95 20 04 00 00     -  lea rdx,[rbp+00000420]
"NMS.exe"+9A00BC: 48 8B CB                 -  mov rcx,rbx
"NMS.exe"+9A00BF: E8 5C FE BE FF           -  call NMS.exe+58FF20
"NMS.exe"+9A00C4: 48 8B D8                 -  mov rbx,rax
"NMS.exe"+9A00C7: 48 85 C0                 -  test rax,rax
"NMS.exe"+9A00CA: 0F 84 7F 00 00 00        -  je NMS.exe+9A014F
"NMS.exe"+9A00D0: C6 85 70 03 00 00 00     -  mov byte ptr [rbp+00000370],00
// ---------- INJECTING HERE ----------
"NMS.exe"+9A00D7: 45 8B 86 D0 00 00 00     -  mov r8d,[r14+000000D0]
// ---------- DONE INJECTING  ----------
"NMS.exe"+9A00DE: 48 8D 15 E7 6E 35 01     -  lea rdx,[NMS.exe+1CF6FCC]
"NMS.exe"+9A00E5: 48 8D 8D 70 03 00 00     -  lea rcx,[rbp+00000370]
"NMS.exe"+9A00EC: E8 EF 5A C4 FF           -  call NMS.exe+5E5BE0
"NMS.exe"+9A00F1: C6 83 90 03 00 00 00     -  mov byte ptr [rbx+00000390],00
"NMS.exe"+9A00F8: 48 8B 4B 60              -  mov rcx,[rbx+60]
"NMS.exe"+9A00FC: 48 81 C1 70 03 00 00     -  add rcx,00000370
"NMS.exe"+9A0103: 48 8D 85 70 03 00 00     -  lea rax,[rbp+00000370]
"NMS.exe"+9A010A: 4C 8B C9                 -  mov r9,rcx
"NMS.exe"+9A010D: 4C 2B C8                 -  sub r9,rax
"NMS.exe"+9A0110: 44 0F B6 00              -  movzx r8d,byte ptr [rax]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>352</ID>
              <Description>"Base"</Description>
              <LastState RealAddress="00000000"/>
              <VariableType>String</VariableType>
              <Length>0</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>pFrigate</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>353</ID>
                  <Description>"Damage"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>8</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>+108</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>354</ID>
                  <Description>"Type"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+C0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>355</ID>
                  <Description>"Class"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+C4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>356</ID>
                  <Description>"Encounters"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>357</ID>
                  <Description>"Unknown"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>358</ID>
                  <Description>"Expeditions"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>359</ID>
                  <Description>"Times Damaged"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+DC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>360</ID>
                  <Description>"Combat"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+E0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>361</ID>
                  <Description>"Exploration"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+E4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>362</ID>
                  <Description>"Industrial"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+E8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>363</ID>
                  <Description>"Trade"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+EC</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>364</ID>
                  <Description>"Fuel Req"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+F0</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>243</ID>
          <Description>"Stats Pointer"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-27
  Author : Cedric

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(statsptr,NMS.exe,48 8B 44 24 40 48 3B 47) // should be unique
alloc(newmem,$1000,"NMS.exe"+76ED8B)

label(code)
label(return)
label(pStats)

newmem:
mov [pStats], rdi

code:
  mov rax,[rsp+40]
  jmp return

pStats:
dq 0

statsptr:
  jmp newmem
return:
registersymbol(statsptr)
registersymbol(pStats)

[DISABLE]

statsptr:
  db 48 8B 44 24 40

unregistersymbol(statsptr)
unregistersymbol(pStats)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+76ED8B

"NMS.exe"+76ED69: FF C1                 -  inc ecx
"NMS.exe"+76ED6B: 48 FF C0              -  inc rax
"NMS.exe"+76ED6E: 48 83 C2 60           -  add rdx,60
"NMS.exe"+76ED72: 48 83 F8 0B           -  cmp rax,0B
"NMS.exe"+76ED76: 7C E8                 -  jl NMS.exe+76ED60
"NMS.exe"+76ED78: EB 4E                 -  jmp NMS.exe+76EDC8
"NMS.exe"+76ED7A: 4C 8B C5              -  mov r8,rbp
"NMS.exe"+76ED7D: 48 8D 54 24 40        -  lea rdx,[rsp+40]
"NMS.exe"+76ED82: 48 8D 4F 18           -  lea rcx,[rdi+18]
"NMS.exe"+76ED86: E8 25 FA 0A 00        -  call NMS.exe+81E7B0
// ---------- INJECTING HERE ----------
"NMS.exe"+76ED8B: 48 8B 44 24 40        -  mov rax,[rsp+40]
// ---------- DONE INJECTING  ----------
"NMS.exe"+76ED90: 48 3B 47 20           -  cmp rax,[rdi+20]
"NMS.exe"+76ED94: 75 0E                 -  jne NMS.exe+76EDA4
"NMS.exe"+76ED96: 48 8D 0D 63 AF 56 01  -  lea rcx,[NMS.exe+1CD9D00]
"NMS.exe"+76ED9D: FF 15 35 E7 3B 01     -  call qword ptr [NMS.exe+1B2D4D8]
"NMS.exe"+76EDA3: CC                    -  int 3 
"NMS.exe"+76EDA4: 44 8B 40 20           -  mov r8d,[rax+20]
"NMS.exe"+76EDA8: 8B CE                 -  mov ecx,esi
"NMS.exe"+76EDAA: 48 8D 85 40 01 00 00  -  lea rax,[rbp+00000140]
"NMS.exe"+76EDB1: 48 8B D6              -  mov rdx,rsi
"NMS.exe"+76EDB4: 44 39 00              -  cmp [rax],r8d
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>244</ID>
              <Description>"Global Base"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>pStats</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>252</ID>
                  <Description>"Stat"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pStats</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>AE0</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>253</ID>
                      <Description>"Amount"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pStats</Address>
                      <Offsets>
                        <Offset>20</Offset>
                        <Offset>AE0</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>254</ID>
                  <Description>"Stat"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pStats</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>14B0</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>255</ID>
                      <Description>"Amount"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pStats</Address>
                      <Offsets>
                        <Offset>20</Offset>
                        <Offset>14B0</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>256</ID>
                  <Description>"Stat"</Description>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pStats</Address>
                  <Offsets>
                    <Offset>10</Offset>
                    <Offset>1750</Offset>
                    <Offset>30</Offset>
                  </Offsets>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>257</ID>
                      <Description>"Amount"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>pStats</Address>
                      <Offsets>
                        <Offset>20</Offset>
                        <Offset>1750</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
