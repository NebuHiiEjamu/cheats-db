<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="27">
  <CheatEntries>
    <CheatEntry>
      <ID>8046</ID>
      <Description>"[NMS Next Update]"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>8354</ID>
          <Description>"Player"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8390</ID>
              <Description>"Infinity Health"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-11-04
  Author : Igromanru

  Infinity Health
}

[ENABLE]

aobscanmodule(infHealth,NMS.exe,7F 14 33 C9 48 FF 86 ? ? ? ? 89 8E)
aobscanmodule(infHealth2,NMS.exe,0F 4D C8 48 FF 86 ? ? ? ? 89 8E)

alloc(newmem,$50,infHealth)

label(infHealthBackup)
label(infHealth2Backup)

newmem:
infHealthBackup:
  readMem(infHealth, 2)
infHealth2Backup:
  readMem(infHealth2, 3)

infHealth:
  db EB

infHealth2:
  mov ecx,eax
  nop

registersymbol(infHealth)
registersymbol(infHealthBackup)
registersymbol(infHealth2)
registersymbol(infHealth2Backup)

[DISABLE]

infHealth:
  readMem(infHealthBackup, 2)

infHealth2:
  readMem(infHealth2Backup, 3)


dealloc(newmem)
unregistersymbol(infHealth)
unregistersymbol(infHealthBackup)
unregistersymbol(infHealth2)
unregistersymbol(infHealth2Backup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8024</ID>
              <Description>"Inf Life Support"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infls,NMS.exe,89 48 18 48 8B 0D ** ** ** ** 48 81 C1)
registersymbol(infls)

infls:
  db 90 90 90

[DISABLE]

infls:
  db 89 48 18

unregistersymbol(infls)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8021</ID>
              <Description>"Inf Hazard Protection"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhzp,NMS.exe,F3 0F 58 E5 41 0F 28 C0)
registersymbol(infhzp)

infhzp:
  db 90 90 90 90

[DISABLE]

infhzp:
  db F3 0F 58 E5

unregistersymbol(infhzp)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>7994</ID>
              <Description>"Inf Sprint"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-24
  Author : Cedric

  Sprint Amount / Float / 0 - 1 (dec)

  2018-08-15: v1.55 made more update persistent. by Igromanru
  2018-09-20: v1.60 fixed AOB. by Igromanru
}

[ENABLE]

aobscanmodule(infsprint, NMS.exe, F3 0F 5C C8 F3 0F 11 8F ? ? ? ? 44 0F 2F ? 72 ? 4C 89 B7)
alloc(infsprintBackup,$16,infsprint)
registersymbol(infsprint)
registersymbol(infsprintBackup)

infsprintBackup:
  readMem(infsprint, 4)

infsprint:
  db 90 90 90 90

[DISABLE]

infsprint:
  readMem(infsprintBackup, 4)

dealloc(infsprintBackup)
unregistersymbol(infsprint)
unregistersymbol(infsprintBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8248</ID>
              <Description>"Inf Jetpack"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-09-24
  Author : Squall8

  2018-10-30: v1.70 made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(infjp,NMS.exe,F3 0F 11 87 ? ? ? ? EB 08)
aobscanmodule(infjp2,NMS.exe,F3 0F 11 87 ? ? ? ? C6 87 ? ? ? ? ? 41 B6 01)
alloc(newmem,$64,infjp)

registersymbol(infjp)
registersymbol(infjpBackup)
registersymbol(infjp2)
registersymbol(infjp2Backup)

label(infjpBackup)
label(infjp2Backup)

newmem:
infjpBackup:
  readMem(infjp, 8)

infjp2Backup:
  readMem(infjp2, 8)

infjp:
  db 90 90 90 90 90 90 90 90

infjp2:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infjp:
  readMem(infjpBackup,8)

infjp2:
  readMem(infjp2Backup,8)

unregistersymbol(infjp)
unregistersymbol(infjpBackup)
unregistersymbol(infjp2)
unregistersymbol(infjp2Backup)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8048</ID>
              <Description>"Inf Scanner"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  How to find:
  Float value between 0 and 1.
  Full charged scan is 1, direct after the use 0.

  2018-10-05: v1.63 new AOB. by Squall8
  2018-10-05: v1.70 new AOB. by Igromanru
}

[ENABLE]

aobscanmodule(infscanner,NMS.exe,89 ? 0C 89 ? 38)
alloc(infscannerBackup,$16,infscanner)

registersymbol(infscanner)
registersymbol(infscannerBackup)

infscannerBackup:
  readMem(infscanner, 3)

infscanner:
  db 90 90 90

[DISABLE]

infscanner:
  readMem(infscannerBackup, 3)

dealloc(infscannerBackup)
unregistersymbol(infscanner)
unregistersymbol(infscannerBackup)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+116E842

"NMS.exe"+116E817: 75 07                    -  jne NMS.exe+116E820
"NMS.exe"+116E819: 32 C0                    -  xor al,al
"NMS.exe"+116E81B: E9 B4 0A 00 00           -  jmp NMS.exe+116F2D4
"NMS.exe"+116E820: 80 B9 B0 00 00 00 00     -  cmp byte ptr [rcx+000000B0],00
"NMS.exe"+116E827: 75 F0                    -  jne NMS.exe+116E819
"NMS.exe"+116E829: F3 0F 10 05 93 80 46 01  -  movss xmm0,[NMS.exe+25D68C4]
"NMS.exe"+116E831: F3 0F 11 41 14           -  movss [rcx+14],xmm0
"NMS.exe"+116E836: C6 81 B0 00 00 00 01     -  mov byte ptr [rcx+000000B0],01
"NMS.exe"+116E83D: 33 DB                    -  xor ebx,ebx
"NMS.exe"+116E83F: 89 59 30                 -  mov [rcx+30],ebx
// ---------- INJECTING HERE ----------
"NMS.exe"+116E842: 89 59 0C                 -  mov [rcx+0C],ebx
// ---------- DONE INJECTING  ----------
"NMS.exe"+116E845: 89 59 38                 -  mov [rcx+38],ebx
"NMS.exe"+116E848: F3 0F 10 4A 08           -  movss xmm1,[rdx+08]
"NMS.exe"+116E84D: F3 0F 10 42 04           -  movss xmm0,[rdx+04]
"NMS.exe"+116E852: 8B 02                    -  mov eax,[rdx]
"NMS.exe"+116E854: 89 41 50                 -  mov [rcx+50],eax
"NMS.exe"+116E857: F3 0F 11 41 54           -  movss [rcx+54],xmm0
"NMS.exe"+116E85C: F3 0F 11 49 58           -  movss [rcx+58],xmm1
"NMS.exe"+116E861: C7 41 5C 00 00 80 3F     -  mov [rcx+5C],3F800000
"NMS.exe"+116E868: F3 0F 10 4A 18           -  movss xmm1,[rdx+18]
"NMS.exe"+116E86D: F3 0F 10 42 14           -  movss xmm0,[rdx+14]
"NMS.exe"+116E872: 8B 42 10                 -  mov eax,[rdx+10]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8023</ID>
              <Description>"Inf Ammo"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-08-15: v1.55 made more update persistent. by Igromanru
  2018-10-05: v1.63 new AOB. by Igromanru
}

[ENABLE]

aobscanmodule(infammo,NMS.exe,43 89 84 B7 ? ? ? ? 85 C0 0F 8F)
alloc(infammoBackup,$16,infammo)

registersymbol(infammo)
registersymbol(infammoBackup)

infammoBackup:
  readMem(infammo, 8)

infammo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

infammo:
  readMem(infammoBackup, 8)

dealloc(infammoBackup)
unregistersymbol(infammo)
unregistersymbol(infammoBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8025</ID>
              <Description>"Inf Grenades"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-08-15: v1.55 added more update persistent AOB. by Igromanru
  2018-10-05: v1.63 new AOB. by Squall8
}

[ENABLE]

aobscanmodule(infpll,NMS.exe,FF 4B 18 4C 8D 4D 90)
registersymbol(infpll)

infpll:
  db 90 90 90

[DISABLE]

infpll:
  db FF 4B 18

unregistersymbol(infpll)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8068</ID>
              <Description>"Inf Blaze Javelin"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infbj,NMS.exe,89 43 18 EB 06)
registersymbol(infbj)

infbj:
  db 90 90 90

[DISABLE]

infbj:
  db 89 43 18

unregistersymbol(infbj)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8022</ID>
              <Description>"Inf Mining Beam"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-08-15: v1.55 updated AOB. by Igromanru
  2018-08-30: v1.58 updated AOB. by Igromanru
  2018-10-05: v1.63 updated AOB. by Squall8
  2018-10-05: v1.64 fixed my mistake error. by Igromanru
}

[ENABLE]

aobscanmodule(infmb,NMS.exe,41 29 47 18 01 BC 9E)
registersymbol(infmb)

infmb:
  db 90 90 90 90

[DISABLE]

infmb:
  db 41 29 47 18

unregistersymbol(infmb)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8054</ID>
              <Description>"No Mining Beam Overheat"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-24
  Author : Squall8

  2018-10-05: v1.63 new AOB and bytes backup. by Igromanru
}

[ENABLE]

aobscanmodule(nombo,NMS.exe,F3 0F 11 86 ? ? ? ? 41 0F 28 CC F3 0F 58 8E ? ? ? ? F3 0F 11 8E ? ? ? ? 48 8B CE)
alloc(nomboBackup,$16,nombo)

registersymbol(nombo)
registersymbol(nomboBackup)

nomboBackup:
  readmem(nombo, 8)

nombo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

nombo:
  readmem(nomboBackup, 8)

dealloc(nomboBackup)
unregistersymbol(nombo)
unregistersymbol(nomboBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8045</ID>
              <Description>"Inf Terrain Manipulator"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-10-05: v1.63 new AOB. by Squall8
}

[ENABLE]

aobscanmodule(inftm,NMS.exe,89 4E 18 41 B0 01)
registersymbol(inftm)

inftm:
  db 90 90 90

[DISABLE]

inftm:
  db 89 4E 18

unregistersymbol(inftm)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8205</ID>
              <Description>"Jetpack Power"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-30
  Author : Squall8

  2018-08-19: v1.57 fixed and made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(jpvertpwr,NMS.exe,F3 0F 11 89 ? ? ? ? F3 0F 10 05 ? ? ? ? F3 0F 11 81 ? ? ? ? 48 81 C4)
alloc(newmem,$100,jpvertpwr)
alloc(jpvertpwrBackup,$16,jpvertpwr)

label(code)
label(return)
label(jpvertpwrp)

registersymbol(jpvertpwr)
registersymbol(jpvertpwrBackup)
registersymbol(jpvertpwrp)

jpvertpwrBackup:
  readMem(jpvertpwr, 8)

newmem:
  movss xmm1,[jpvertpwrp]

code:
  readMem(jpvertpwr, 8)
  jmp return

jpvertpwrp:
  dq (float)30

jpvertpwr:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

jpvertpwr:
  readMem(jpvertpwrBackup, 8)

dealloc(newmem)
dealloc(jpvertpwrBackup)
unregistersymbol(jpvertpwr)
unregistersymbol(jpvertpwrp)
unregistersymbol(jpvertpwrBackup)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8206</ID>
                  <Description>"Vertical Power"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jpvertpwrp</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8209</ID>
              <Description>"Working Rocket Boots"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-30
  Author : Squall8

  2018-08-19: v1.57 fixed and made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(jumpheight,NMS.exe,F3 0F 11 81 ? ? ? ? 48 81 C4 ? ? ? ? 5D C3)
alloc(newmem,$200,jumpheight)
alloc(jumpheightBackup,$16,jumpheight)

label(code)
label(return)
label(jumpheightp)

registersymbol(jumpheight)
registersymbol(jumpheightp)
registersymbol(jumpheightBackup)

jumpheightBackup:
  readMem(jumpheight, 8)

newmem:
  movss xmm0,[jumpheightp]

code:
  readMem(jumpheight, 8)
  jmp return

jumpheightp:
  dq (float)200

jumpheight:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

jumpheight:
  readMem(jumpheightBackup, 8)

dealloc(newmem)
dealloc(jumpheightBackup)
unregistersymbol(jumpheight)
unregistersymbol(jumpheightp)
unregistersymbol(jumpheightBackup)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8210</ID>
                  <Description>"AKA. Jump Height (Default Value - 60)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jumpheightp</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8352</ID>
              <Description>"Element Gathering Multiplier"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: NEXT
  Author : Squall8

  2018-08-22: v1.57 fixed by dec1337
  2018-08-22: v1.57 made update persist by Igromanru
}

[ENABLE]

aobscanmodule(multiplier,NMS.exe,44 01 60 18 E9)
aobscanmodule(multiplierTwo,NMS.exe,48 8B 46 14 48 89 45 8F 33 C0)
alloc(newmem,$100,multiplier)
alloc(multiplierBack,$16,multiplier)

label(code)
label(return)
label(mulval)

multiplierBack:
  readMem(multiplier, 9)

newmem:
  imul r12d,[mulval]

code:
  readMem(multiplier, 4)
  jmp multiplierTwo
  jmp return

mulval:
  dq 2

multiplier:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(multiplier)
registersymbol(multiplierBack)
registersymbol(multiplierTwo)
registersymbol(mulval)

[DISABLE]

multiplier:
  readMem(multiplierBack, 9)

dealloc(newmem)
dealloc(multiplierBack)
unregistersymbol(multiplier)
unregistersymbol(multiplierBack)
unregistersymbol(multiplierTwo)
unregistersymbol(mulval)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8353</ID>
                  <Description>"Multiplier"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>mulval</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8356</ID>
          <Description>"Spaceship"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8376</ID>
              <Description>"Infinity Launch Thruster"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-09-20
  Author : Igromanru

  Infinity Launch Thruster
  [rbx+18] = current Launch Thruster energy
  [rbx+1C] = maximum Launch Thruster energy
}

[ENABLE]

aobscanmodule(infLaunchThruster,NMS.exe,41 8B C8 2B C8 48 C7 44 24)
alloc(newmem,$100,infLaunchThruster)

label(code)
label(return)
label(infLaunchThrusterBackup)

newmem:

code:
  mov ecx,[rbx+1C]
  jmp return

infLaunchThrusterBackup:
  readMem(infLaunchThruster, 5)

infLaunchThruster:
  jmp newmem
return:
registersymbol(infLaunchThruster)
registersymbol(infLaunchThrusterBackup)

[DISABLE]

infLaunchThruster:
  readMem(infLaunchThrusterBackup, 5)

unregistersymbol(infLaunchThruster)
unregistersymbol(infLaunchThrusterBackup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+13B8013

"NMS.exe"+13B7FEA: 48 0F 45 DE                 -  cmovne rbx,rsi
"NMS.exe"+13B7FEE: E8 3D 5D FF FF              -  call NMS.exe+13ADD30
"NMS.exe"+13B7FF3: 48 8B 7C 24 60              -  mov rdi,[rsp+60]
"NMS.exe"+13B7FF8: 48 8B 74 24 58              -  mov rsi,[rsp+58]
"NMS.exe"+13B7FFD: 48 85 DB                    -  test rbx,rbx
"NMS.exe"+13B8000: 74 4A                       -  je NMS.exe+13B804C
"NMS.exe"+13B8002: 44 8B 43 18                 -  mov r8d,[rbx+18]
"NMS.exe"+13B8006: 44 3B C0                    -  cmp r8d,eax
"NMS.exe"+13B8009: 7C 41                       -  jl NMS.exe+13B804C
"NMS.exe"+13B800B: F3 0F 10 1D D1 E8 9F 00     -  movss xmm3,[NMS.exe+1DB68E4]
// ---------- INJECTING HERE ----------
"NMS.exe"+13B8013: 41 8B C8                    -  mov ecx,r8d
"NMS.exe"+13B8016: 2B C8                       -  sub ecx,eax
// ---------- DONE INJECTING  ----------
"NMS.exe"+13B8018: 48 C7 44 24 30 00 00 00 00  -  mov qword ptr [rsp+30],00000000
"NMS.exe"+13B8021: 89 4B 18                    -  mov [rbx+18],ecx
"NMS.exe"+13B8024: 48 8B D3                    -  mov rdx,rbx
"NMS.exe"+13B8027: 48 8B 0D 7A 58 22 01        -  mov rcx,[NMS.exe+25DD8A8]
"NMS.exe"+13B802E: F3 0F 10 15 DA 64 CD 00     -  movss xmm2,[NMS.exe+208E510]
"NMS.exe"+13B8036: 48 81 C1 20 AC 28 00        -  add rcx,0028AC20
"NMS.exe"+13B803D: C6 44 24 28 01              -  mov byte ptr [rsp+28],01
"NMS.exe"+13B8042: 44 89 44 24 20              -  mov [rsp+20],r8d
"NMS.exe"+13B8047: E8 D4 17 53 FF              -  call NMS.exe+8E9820
"NMS.exe"+13B804C: 48 8B 5C 24 50              -  mov rbx,[rsp+50]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8040</ID>
              <Description>"Inf Pulse Engine"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(infpe,NMS.exe,41 FF 4E 18 89 B7 C4 00 00 00)
registersymbol(infpe)

infpe:
  db 90 90 90 90

[DISABLE]

infpe:
  db 41 FF 4E 18

unregistersymbol(infpe)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8067</ID>
              <Description>"Inf Hyperdrive"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-10-05
  Author : Squall8
}

[ENABLE]

aobscanmodule(infhd,NMS.exe,85 C9 0F 4E CF)
registersymbol(infhd)

infhd+05:
  db 90 90 90

[DISABLE]

infhd+05:
  db 89 4E 18

unregistersymbol(infhd)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8071</ID>
              <Description>"Inf Deflector Shield"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(infds,NMS.exe,01 43 18 45 8B C4)
registersymbol(infds)

infds:
  db 90 90 90

[DISABLE]

infds:
  db 01 43 18

unregistersymbol(infds)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8135</ID>
              <Description>"No Ship Overheat"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8

  2018-08-15: v1.55 made more update persistent. by Igromanru
  2018-10-05: v1.63 AOB fixed. by Igromanru
}

[ENABLE]

aobscanmodule(nosoh,NMS.exe,F3 41 0F 11 8C 8E ? ? ? ? EB 13)
alloc(nosohBackup,$16,nosoh)
registersymbol(nosoh)
registersymbol(nosohBackup)

nosohBackup:
  readMem(nosoh, 10)

nosoh:
  db 90 90 90 90 90 90 90 90 90 90

[DISABLE]

nosoh:
  readMem(nosohBackup, 10)

dealloc(nosohBackup)
unregistersymbol(nosoh)
unregistersymbol(nosohBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8138</ID>
              <Description>"No Rocket Launcher Overheat"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(norlo,NMS.exe,41 89 84 96 60 17 00 00)
registersymbol(norlo)

norlo:
  db 90 90 90 90 90 90 90 90

[DISABLE]

norlo:
  db 41 89 84 96 60 17 00 00

unregistersymbol(norlo)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8355</ID>
          <Description>"Exocraft"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8084</ID>
              <Description>"Inf Exocraft Boost"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-25
  Author : Squall8

  2018-10-30: v1.70 AOB update, made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(infeb,NMS.exe,F3 0F 11 83 ? ? ? ? 44 0F 2F C0)
alloc(infebBackup,$16,infeb)
registersymbol(infeb)
registersymbol(infebBackup)

infeb:
  db 90 90 90 90 90 90 90 90

infebBackup:
  readMem(infeb, 8)

[DISABLE]

infeb:
  readMem(infebBackup, 8)

dealloc(infebBackup)
unregistersymbol(infeb)
unregistersymbol(infebBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8075</ID>
              <Description>"Inf Fusion Engine"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(infee,NMS.exe,89 48 18 48 83 C4 20 5B C3 CC)
registersymbol(infee)

infee:
  db 90 90 90

[DISABLE]

infee:
  db 89 48 18

unregistersymbol(infee)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8139</ID>
              <Description>"Inf Exocraft Mining Laser"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(infeml,NMS.exe,45 89 65 18 F3 0F 10 05 ** ** ** ** F3 41 0F)
registersymbol(infeml)

infeml:
  db 90 90 90 90

[DISABLE]

infeml:
  db 45 89 65 18

unregistersymbol(infeml)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8140</ID>
              <Description>"Inf Exocraft Cannon"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8
}

[ENABLE]

aobscanmodule(infemc,NMS.exe,45 89 65 18 F3 0F 10 05 ** ** ** ** F3 41 0F)
registersymbol(infemc)

infemc:
  db 90 90 90 90

[DISABLE]

infemc:
  db 45 89 65 18

unregistersymbol(infemc)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8219</ID>
              <Description>"Exocraft Moon Jump"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-01
  Author : Squall8

  2018-10-30: v1.70 AOB update, made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(exomj,NMS.exe,F3 44 0F 11 AB ? ? ? ? EB 0E)
alloc(exomjBackup,$16,exomj)
registersymbol(exomj)
registersymbol(exomjBackup)

exomj:
  db 90 90 90 90 90 90 90 90

exomjBackup:
  readMem(exomj, 8)

[DISABLE]

exomj:
  readMem(exomjBackup, 8)

dealloc(exomjBackup)
unregistersymbol(exomj)
unregistersymbol(exomjBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8155</ID>
              <Description>"Summon Exocraft Anywhere"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : Squall8

  2018-09-12: v1.59 made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(exoSummon,NMS.exe,80 3C 08 00 0F 84 ? ? ? ? 48 8B 1D)
alloc(newmem,$100,exoSummon)

label(code)
label(return)
label(exoSummonBackup)

newmem:
  mov [rax+rcx],1

code:
  cmp byte ptr [rax+rcx],00
  je NMS.AK::WriteBytesMem::Count+2EDA30
  jmp return

exoSummonBackup:
  readMem(exoSummon, 10)

exoSummon:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:

registersymbol(exoSummon)
registersymbol(exoSummonBackup)
[DISABLE]

exoSummon:
  readMem(exoSummonBackup, 10)

unregistersymbol(exoSummon)
unregistersymbol(exoSummonBackup)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8357</ID>
          <Description>"Crafting"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>008080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8386</ID>
              <Description>"Ignore Crafting/Damaged/Convo Requirements"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-10-05
  Author : Squall8

  2018-10-30: added more items by Squall8
}

[ENABLE]

aobscanmodule(itpr,NMS.exe,75 17 48 8B 41 10 49)
registersymbol(itpr)

itpr:
  db 90 90

aobscanmodule(itpr2,NMS.exe,75 0D 41 83 F8 01)
registersymbol(itpr2)

itpr2:
  db 90 90

aobscanmodule(itpr3,NMS.exe,75 21 48 8B 41 08)
registersymbol(itpr3)

itpr3:
  db 90 90

aobscanmodule(itpr4,NMS.exe,EB 03 03 51 18)
registersymbol(itpr4)

itpr4:
  db 90 90

[DISABLE]

itpr:
  db 75 17

unregistersymbol(itpr)

itpr2:
  db 75 0D

unregistersymbol(itpr2)

itpr3:
  db 75 21

unregistersymbol(itpr3)

itpr4:
  db EB 03

unregistersymbol(itpr4)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8366</ID>
              <Description>"Build Anywhere"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   :
  Author : dec1337

  2018-08-19: v1.57 made more update persistent. by Igromanru
  2018-09-11: v1.59 it's now also green. by Igromanru
  2018-11-02: v1.71 fixed the code. by Igromanru
}

[ENABLE]

aobscanmodule(buildInRed,NMS.exe,83 BF ? ? ? ? ? 41 0F 94 C1)
alloc(newmem,$100,buildInRed)

label(return)
label(buildInRedBackup)

registersymbol(buildInRed)
registersymbol(buildInRedBackup)

newmem:
  mov dword ptr [rdi+00000100],0E
buildInRedBackup:
  readMem(buildInRed, 7)
  jmp return

buildInRed:
  jmp newmem
  nop
  nop
return:

[DISABLE]

buildInRed:
  readMem(buildInRedBackup, 7)

dealloc(newmem)
unregistersymbol(buildInRed)
unregistersymbol(buildInRedBackup)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+69850A

"NMS.exe"+6984E3: C6 85 78 01 00 00 01           -  mov byte ptr [rbp+00000178],01
"NMS.exe"+6984EA: E9 F8 FD FF FF                 -  jmp NMS.exe+6982E7
"NMS.exe"+6984EF: 83 F8 01                       -  cmp eax,01
"NMS.exe"+6984F2: 75 47                          -  jne NMS.exe+69853B
"NMS.exe"+6984F4: 8B 47 28                       -  mov eax,[rdi+28]
"NMS.exe"+6984F7: A9 00 00 FC FF                 -  test eax,FFFC0000
"NMS.exe"+6984FC: 76 3D                          -  jna NMS.exe+69853B
"NMS.exe"+6984FE: 25 FF FF 03 00                 -  and eax,0003FFFF
"NMS.exe"+698503: 3D FF FF 03 00                 -  cmp eax,0003FFFF
"NMS.exe"+698508: 74 31                          -  je NMS.exe+69853B
// ---------- INJECTING HERE ----------
"NMS.exe"+69850A: 83 BF 00 01 00 00 0E           -  cmp dword ptr [rdi+00000100],0E
// ---------- DONE INJECTING  ----------
"NMS.exe"+698511: 41 0F 94 C1                    -  sete r9l
"NMS.exe"+698515: 44 8B 87 08 01 00 00           -  mov r8d,[rdi+00000108]
"NMS.exe"+69851C: 41 FF C0                       -  inc r8d
"NMS.exe"+69851F: C6 44 24 20 00                 -  mov byte ptr [rsp+20],00
"NMS.exe"+698524: E8 B7 2A 00 00                 -  call NMS.exe+69AFE0
"NMS.exe"+698529: 4C 8B C0                       -  mov r8,rax
"NMS.exe"+69852C: 8B 57 28                       -  mov edx,[rdi+28]
"NMS.exe"+69852F: 49 8D 8A A0 A1 0A 00           -  lea rcx,[r10+000AA1A0]
"NMS.exe"+698536: E8 25 7B AD 00                 -  call NMS.exe+1170060
"NMS.exe"+69853B: 32 C0                          -  xor al,al
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8372</ID>
              <Description>"Free Blueprint Analysis"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-09-12
  Author : Igromanru

  Free Blueprint Analysis
}

[ENABLE]

aobscanmodule(blueprintAnalysis, NMS.exe, 41 3B F5 7E 36 38 05 ? ? ? ? 75 2E F7 05)
aobscanmodule(blueprintAnalysisJmp, NMS.exe, 49 8D 8A ? ? ? ? 48 8B D3 E8 ? ? ? ? 0F 28 45 E0)
alloc(newmem,$100,blueprintAnalysis)

label(blueprintAnalysisBackup)
label(code)

newmem:

code:
  mov esi, 0
  jmp blueprintAnalysisJmp

blueprintAnalysisBackup:
  readMem(blueprintAnalysis, 5)

blueprintAnalysis:
  jmp newmem

registersymbol(blueprintAnalysis)
registersymbol(blueprintAnalysisJmp)
registersymbol(blueprintAnalysisBackup)

[DISABLE]

blueprintAnalysis:
  readMem(blueprintAnalysisBackup, 5)

unregistersymbol(blueprintAnalysis)
unregistersymbol(blueprintAnalysisJmp)
unregistersymbol(blueprintAnalysisBackup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+9C369E

"NMS.exe"+9C3671: 48 8D 55 E0                    -  lea rdx,[rbp-20]
"NMS.exe"+9C3675: E8 96 12 50 00                 -  call NMS.exe+EC4910
"NMS.exe"+9C367A: 48 8B D8                       -  mov rbx,rax
"NMS.exe"+9C367D: 4C 8B 15 D4 83 BD 01           -  mov r10,[NMS.exe+259BA58]
"NMS.exe"+9C3684: 49 8D 8A 40 0C 00 00           -  lea rcx,[r10+00000C40]
"NMS.exe"+9C368B: 48 8B D0                       -  mov rdx,rax
"NMS.exe"+9C368E: E8 DD 10 DA FF                 -  call NMS.exe+764770
"NMS.exe"+9C3693: 84 C0                          -  test al,al
"NMS.exe"+9C3695: 0F 85 42 01 00 00              -  jne NMS.exe+9C37DD
"NMS.exe"+9C369B: 41 3B F5                       -  cmp esi,r13d
// ---------- INJECTING HERE ----------
"NMS.exe"+9C369E: 7E 36                          -  jle NMS.exe+9C36D6
"NMS.exe"+9C36A0: 38 05 A4 33 68 01              -  cmp [NMS.exe+2046A4A],al
// ---------- DONE INJECTING  ----------
"NMS.exe"+9C36A6: 75 2E                          -  jne NMS.exe+9C36D6
"NMS.exe"+9C36A8: F7 05 B2 83 BD 01 FD FF FF FF  -  test [NMS.exe+259BA64],FFFFFFFD
"NMS.exe"+9C36B2: 74 22                          -  je NMS.exe+9C36D6
"NMS.exe"+9C36B4: 38 05 5A 07 B3 01              -  cmp [NMS.exe+24F3E14],al
"NMS.exe"+9C36BA: 0F 84 A9 00 00 00              -  je NMS.exe+9C3769
"NMS.exe"+9C36C0: E8 DB 1A BC FF                 -  call NMS.exe+5851A0
"NMS.exe"+9C36C5: 80 78 08 00                    -  cmp byte ptr [rax+08],00
"NMS.exe"+9C36C9: 0F 84 9A 00 00 00              -  je NMS.exe+9C3769
"NMS.exe"+9C36CF: 4C 8B 15 82 83 BD 01           -  mov r10,[NMS.exe+259BA58]
"NMS.exe"+9C36D6: 49 8D 8A 40 0C 00 00           -  lea rcx,[r10+00000C40]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8358</ID>
          <Description>"Pointers"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8086</ID>
              <Description>"Wanted Level"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>000080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(wlp,NMS.exe,41 3B 9E A8 00 00 00 7C)
alloc(newmem,$100,wlp)

label(code)
label(return)
label(wlpp)

registersymbol(wlp)
registersymbol(wlpp)

newmem:
  mov [wlpp],r14

code:
  cmp ebx,[r14+000000A8]
  jmp return

wlpp:
  dq 0

wlp:
  jmp newmem
  nop
  nop
return:

[DISABLE]

wlp:
  db 41 3B 9E A8 00 00 00

unregistersymbol(wlp)
unregistersymbol(wlpp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8123</ID>
                  <Description>"Wanted Level Wont Increase"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(wlwi,NMS.exe,89 5F 48 89 B7 ? ? ? ? 89 77 4C F3 0F 10 05)
registersymbol(wlwi)

wlwi:
  db 90 90 90

[DISABLE]

wlwi:
  db 89 5F 48

unregistersymbol(wlwi)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>8087</ID>
                  <Description>"Wanted Level Pointer"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>wlpp</Address>
                  <Offsets>
                    <Offset>A8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8160</ID>
              <Description>"Highlighted Item Pointers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>800000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-26
  Author : Cedric (Elements/Products) / Squall8 (Tech)

  2018-10-29: v1.70 new AOB and code by Squall8, added bytes Backup by Igromanru
}

[ENABLE]

aobscanmodule(hoverPtrScan,NMS.exe,40 0F B6 C6 4C 8D 5C 24 ? 49 8B 5B 38 49 8B 6B 40)
define(hoverptr, hoverPtrScan+9)
alloc(newmem,$200,hoverptr)

label(code)
label(return)
label(pHover)
label(hoverptrBackup)

registersymbol(hoverptr)
registersymbol(hoverptrBackup)
registersymbol(pHover)

aobscanmodule(hitem2,NMS.exe,4C 8B F1 83 3A 01)
alloc(newmem2,$200,hitem2)

label(code2)
label(return2)
label(hitem2Backup)

registersymbol(hitem2)
registersymbol(hitem2Backup)

newmem:
cmp rax, 1
jne code
mov [pHover], rdi

code:
  mov rbx,[r11+38]
  mov rbp,[r11+40]
  jmp return

hoverptrBackup:
  readMem(hoverptr,8)

pHover:
dq 0

newmem2:

code2:
  mov r14,rcx
  cmp dword ptr [rdx],01
  mov [pHover],rdx
  jmp return2

hitem2Backup:
  readMem(hitem2,6)

hoverptr:
  jmp newmem
  nop
  nop
  nop
return:

hitem2:
  jmp newmem2
  nop
return2:

[DISABLE]

hoverptr:
  readMem(hoverptrBackup,8)

unregistersymbol(hoverptr)
unregistersymbol(hoverptrBackup)
unregistersymbol(pHover)
dealloc(newmem)

hitem2:
  readMem(hitem2Backup,6)

unregistersymbol(hitem2)
unregistersymbol(hitem2Backup)
dealloc(newmem2)

</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8243</ID>
                  <Description>"Set Item To Max (Numpad 1)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-08-06
  Author : Igromanru

  Set item Quantity to Total.
  Works with Highlighted Item Pointers from Cedric and Squall8.
}

[ENABLE]

[pHover]+18:
  readMem([pHover]+1C,4)

[DISABLE]

[pHover]+18:
  readMem([pHover]+1C,4)
</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Toggle Activation</Action>
                      <Keys>
                        <Key>97</Key>
                      </Keys>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>8161</ID>
                  <Description>"Item Name"</Description>
                  <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">[Elements (New)]-----------------------------------------------------------

45 58 5F 52 45 44 00 00 00 00 00 00 00 00 00 00:Activated Cadmium
45 58 5F 47 52 45 45 4E 00 00 00 00 00 00 00 00:Activated Emeril
45 58 5F 42 4C 55 45 00 00 00 00 00 00 00 00 00:Activated Indium
54 4F 58 49 43 31 00 00 00 00 00 00 00 00 00 00:Ammonia
50 4C 41 4E 54 5F 44 55 53 54 00 00 00 00 00 00:Cactus Flesh
52 45 44 32 00 00 00 00 00 00 00 00 00 00 00 00:Cadmium
46 55 45 4C 31 00 00 00 00 00 00 00 00 00 00 00:Carbon
57 41 54 45 52 32 00 00 00 00 00 00 00 00 00 00:Chlorine
53 54 45 4C 4C 41 52 32 00 00 00 00 00 00 00 00:Chromatic Metal
43 41 56 45 31 00 00 00 00 00 00 00 00 00 00 00:Cobalt
46 55 45 4C 32 00 00 00 00 00 00 00 00 00 00 00:Condensed Carbon
59 45 4C 4C 4F 57 32 00 00 00 00 00 00 00 00 00:Copper
50 4C 41 4E 54 5F 50 4F 4F 50 00 00 00 00 00 00:Coprite
4C 41 55 4E 43 48 53 55 42 32 00 00 00 00 00 00:Deuterium
4C 41 55 4E 43 48 53 55 42 00 00 00 00 00 00 00:Di-Hydrogen
43 4F 4C 44 31 00 00 00 00 00 00 00 00 00 00 00:Dioxite
47 52 45 45 4E 32 00 00 00 00 00 00 00 00 00 00:Emeril
4C 41 4E 44 31 00 00 00 00 00 00 00 00 00 00 00:Ferrite Dust
50 4C 41 4E 54 5F 53 4E 4F 57 00 00 00 00 00 00:Frost Crystal
50 4C 41 4E 54 5F 52 41 44 49 4F 00 00 00 00 00:Gamma Root
41 53 54 45 52 4F 49 44 32 00 00 00 00 00 00 00:Gold
42 4C 55 45 32 00 00 00 00 00 00 00 00 00 00 00:Indium
43 41 56 45 32 00 00 00 00 00 00 00 00 00 00 00:Ionised Cobalt
50 4C 41 4E 54 5F 57 41 54 45 52 00 00 00 00 00:Kelp Sac
4C 41 4E 44 33 00 00 00 00 00 00 00 00 00 00 00:Magnetised Ferrite
50 4C 41 4E 54 5F 43 41 56 45 00 00 00 00 00 00:Marrow Bulb
43 52 45 41 54 55 52 45 31 00 00 00 00 00 00 00:Mordite
54 45 43 48 46 52 41 47 00 00 00 00 00 00 00 00:Nanite Cluster
4F 58 59 47 45 4E 00 00 00 00 00 00 00 00 00 00:Oxygen
4C 55 53 48 31 00 00 00 00 00 00 00 00 00 00 00:Paraffinium
48 4F 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Phosphorus
41 53 54 45 52 4F 49 44 33 00 00 00 00 00 00 00:Platinum
52 4F 42 4F 54 31 00 00 00 00 00 00 00 00 00 00:Pugneum
4C 41 4E 44 32 00 00 00 00 00 00 00 00 00 00 00:Pure Ferrite
44 55 53 54 59 31 00 00 00 00 00 00 00 00 00 00:Pyrite
47 41 53 32 00 00 00 00 00 00 00 00 00 00 00 00:Radon
53 50 41 43 45 47 55 4E 4B 31 00 00 00 00 00 00:Residual Goop
53 50 41 43 45 47 55 4E 4B 32 00 00 00 00 00 00:Runaway Mould
53 50 41 43 45 47 55 4E 4B 33 00 00 00 00 00 00:Rusted Metal
57 41 54 45 52 31 00 00 00 00 00 00 00 00 00 00:Salt
41 53 54 45 52 4F 49 44 31 00 00 00 00 00 00 00:Silver
43 41 54 41 4C 59 53 54 31 00 00 00 00 00 00 00:Sodium
43 41 54 41 4C 59 53 54 32 00 00 00 00 00 00 00:Sodium Nitrate
50 4C 41 4E 54 5F 48 4F 54 00 00 00 00 00 00 00:Solanium
50 4C 41 4E 54 5F 4C 55 53 48 00 00 00 00 00 00:Star Bulb
47 41 53 31 00 00 00 00 00 00 00 00 00 00 00 00:Sulphurine
52 4F 43 4B 45 54 53 55 42 00 00 00 00 00 00 00:Tritium
52 41 44 49 4F 31 00 00 00 00 00 00 00 00 00 00:Uranium

[Products (New)]---------------------------------------------------------------

46 41 52 4D 50 52 4F 44 31 00 00 00 00 00 00 00:Acid
50 4F 57 45 52 43 45 4C 4C 32 00 00 00 00 00 00:Advanced Ion Battery
41 4C 42 55 4D 45 4E 50 45 41 52 4C 00 00 00 00:Albumen Pearl
41 52 54 49 46 41 43 54 5F 4B 45 59 00 00 00 00:Ancient Key
43 4F 4D 4D 4F 44 49 54 59 36 00 00 00 00 00 00:Antimatter
41 4E 54 49 4D 41 54 54 45 52 00 00 00 00 00 00:Antimatter 2
41 4D 5F 48 4F 55 53 49 4E 47 00 00 00 00 00 00:Antimatter Housing
41 4C 4C 4F 59 31 00 00 00 00 00 00 00 00 00 00:Aronium
41 43 43 45 53 53 31 00 00 00 00 00 00 00 00 00:Atlas Pass V1
41 43 43 45 53 53 32 00 00 00 00 00 00 00 00 00:Atlas Pass V2
41 43 43 45 53 53 33 00 00 00 00 00 00 00 00 00:Atlas Pass V3
43 55 52 49 4F 34 00 00 00 00 00 00 00 00 00 00:Atlas Stone
54 52 41 5F 54 45 43 48 34 00 00 00 00 00 00 00:Autonomus Positioning Unit
54 52 41 5F 4D 49 4E 45 52 41 4C 53 33 00 00 00:Bromide Salt
41 54 4C 41 53 5F 53 45 45 44 5F 31 00 00 00 00:Captured Nanode
46 55 45 4C 50 52 4F 44 33 00 00 00 00 00 00 00:Carbon Crystal
4E 41 4E 4F 54 55 42 45 53 00 00 00 00 00 00 00:Carbon Nanotubes
57 41 54 45 52 50 52 4F 44 33 00 00 00 00 00 00:Chloride Lattice
46 41 52 4D 50 52 4F 44 39 00 00 00 00 00 00 00:Circuit Board
43 41 56 45 5F 43 52 41 46 54 00 00 00 00 00 00:Cobalt Mirror
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 33 00 00:Comet Droplets
43 4F 4D 50 4F 55 4E 44 36 00 00 00 00 00 00 00:Cryo Pump
41 54 4C 41 53 5F 53 45 45 44 5F 34 00 00 00 00:Dark Matter
41 54 4C 41 53 5F 53 45 45 44 5F 35 00 00 00 00:Dawn's End
54 52 41 5F 54 45 43 48 31 00 00 00 00 00 00 00:Decommissioned Circuit Board
50 4F 4C 49 43 45 5F 54 4F 4B 45 4E 00 00 00 00:Defence Chit
43 41 54 41 50 52 4F 44 33 00 00 00 00 00 00 00:Destablised Sodium
4A 45 4C 4C 59 00 00 00 00 00 00 00 00 00 00 00:Di-Hydrogen Jelly
41 4C 4C 4F 59 32 00 00 00 00 00 00 00 00 00 00:Dirty Bronze
4E 41 56 5F 44 41 54 41 5F 44 52 4F 50 00 00 00:Drop-Pod Coordinate Data
41 54 4C 41 53 5F 53 45 45 44 5F 32 00 00 00 00:Englobed Shade
52 45 41 43 54 49 4F 4E 32 00 00 00 00 00 00 00:Enriched Carbon
46 52 49 47 5F 42 4F 4F 53 54 5F 43 4F 4D 00 00:Explosive Drones
46 52 49 47 41 54 45 5F 46 55 45 4C 5F 31 00 00:Frigate Fuel (50 Tonnes)
46 52 49 47 41 54 45 5F 46 55 45 4C 5F 32 00 00:Frigate Fuel (100 Tonnes)
46 52 49 47 41 54 45 5F 46 55 45 4C 5F 33 00 00:Frigate Fuel (200 Tonnes)
46 52 49 47 5F 42 4F 4F 53 54 5F 53 50 44 00 00:Fuel Oxidiser
50 52 4F 43 5F 50 4C 4E 54 23 36 30 37 39 38 00:Fumebrush Samples
43 4F 4D 50 4F 55 4E 44 34 00 00 00 00 00 00 00:Fusion Accelerant
54 52 41 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Gek Relic
41 4C 4C 4F 59 37 00 00 00 00 00 00 00 00 00 00:Geodesite
46 41 52 4D 50 52 4F 44 33 00 00 00 00 00 00 00:Glass
41 4C 4C 4F 59 36 00 00 00 00 00 00 00 00 00 00:Grantine
47 52 41 56 42 41 4C 4C 00 00 00 00 00 00 00 00:Gravitino Ball
41 54 4C 41 53 5F 53 45 45 44 5F 31 30 00 00 00:Heart Of The Sun
46 41 52 4D 50 52 4F 44 34 00 00 00 00 00 00 00:Heat Capacitor
43 41 52 42 4F 4E 5F 53 45 41 4C 00 00 00 00 00:Hermetic Seal
41 4C 4C 4F 59 33 00 00 00 00 00 00 00 00 00 00:Herox
48 45 58 43 4F 52 45 00 00 00 00 00 00 00 00 00:Hex Core
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 35 00 00:High Capacity Vector Compressor
46 52 49 47 5F 42 4F 4F 53 54 5F 45 58 50 00 00:Holographic Analyser
43 4F 4D 50 4F 55 4E 44 33 00 00 00 00 00 00 00:Hot Ice
50 4F 57 45 52 43 45 4C 4C 00 00 00 00 00 00 00:Ion Battery
54 52 41 5F 54 45 43 48 33 00 00 00 00 00 00 00:Ion Capacitor
41 4C 4C 4F 59 38 00 00 00 00 00 00 00 00 00 00:Iridesite
45 58 50 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Korvax Casing
45 58 50 5F 43 55 52 49 4F 32 00 00 00 00 00 00:Korvax Convergence Cube
46 49 45 4E 44 43 4F 52 45 00 00 00 00 00 00 00:Larval Core
41 4C 4C 4F 59 34 00 00 00 00 00 00 00 00 00 00:Lemmium
50 52 4F 44 46 55 45 4C 32 00 00 00 00 00 00 00:Life Support Gel
46 41 52 4D 50 52 4F 44 37 00 00 00 00 00 00 00:Liquid Explosive
46 41 52 4D 50 52 4F 44 38 00 00 00 00 00 00 00:Living Glass
46 41 52 4D 50 52 4F 44 32 00 00 00 00 00 00 00:Lubricant
41 4C 4C 4F 59 35 00 00 00 00 00 00 00 00 00 00:Magno-Gold
43 41 53 49 4E 47 00 00 00 00 00 00 00 00 00 00:Metal Plating
4D 49 43 52 4F 43 48 49 50 00 00 00 00 00 00 00:Microprocessor
4D 49 4E 44 5F 41 52 43 00 00 00 00 00 00 00 00:Mind Arc
46 52 49 47 5F 42 4F 4F 53 54 5F 54 52 41 00 00:Mind Control Device
46 52 49 47 5F 42 4F 4F 53 54 5F 4D 49 4E 00 00:Mineral Compressor
4E 41 56 5F 44 41 54 41 00 00 00 00 00 00 00 00:Navigation Data
54 52 41 5F 45 58 4F 54 49 43 53 35 00 00 00 00:Neural Duct
4E 49 50 4E 49 50 42 55 44 53 00 00 00 00 00 00:Nip Nip Buds
52 45 41 43 54 49 4F 4E 33 00 00 00 00 00 00 00:Nitrogen Salt
41 54 4C 41 53 5F 53 45 45 44 5F 33 00 00 00 00:Noospheric Orb
41 54 4C 41 53 5F 53 45 45 44 5F 38 00 00 00 00:Novae Reclaiment
54 52 41 5F 41 4C 4C 4F 59 33 00 00 00 00 00 00:Optical Solvent
43 4F 4D 50 4F 55 4E 44 31 00 00 00 00 00 00 00:Organic Catalyst
50 52 4F 44 46 55 45 4C 31 00 00 00 00 00 00 00:Oxygen Capsule
4F 58 59 5F 43 52 41 46 54 00 00 00 00 00 00 00:Oxygen Filter
41 54 4C 41 53 5F 53 45 45 44 5F 36 00 00 00 00:Photic Jade
46 41 52 4D 50 52 4F 44 35 00 00 00 00 00 00 00:Poly-Fibre
41 4D 4D 4F 00 00 00 00 00 00 00 00 00 00 00 00:Projectile Ammunition
51 55 41 44 5F 50 52 4F 44 00 00 00 00 00 00 00:Quad Servo
54 52 41 5F 54 45 43 48 35 00 00 00 00 00 00 00:Quantum Accelerator
4C 41 4E 44 50 52 4F 44 33 00 00 00 00 00 00 00:Rare Metal Element
53 41 43 56 45 4E 4F 4D 00 00 00 00 00 00 00 00:Sac Venom
57 41 54 45 52 5F 43 52 41 46 54 00 00 00 00 00:Salt Refractor
42 50 5F 53 41 4C 56 41 47 45 00 00 00 00 00 00:Salvaged Technology
43 4F 4D 50 4F 55 4E 44 32 00 00 00 00 00 00 00:Semiconductor
43 41 54 41 5F 43 52 41 46 54 00 00 00 00 00 00:Sodium Diode
4C 41 55 4E 43 48 46 55 45 4C 00 00 00 00 00 00:Starship Launch Fuel
41 54 4C 41 53 5F 53 45 45 44 5F 37 00 00 00 00:State Phasure
43 4F 4D 50 4F 55 4E 44 35 00 00 00 00 00 00 00:Superconductor
4F 58 59 50 52 4F 44 33 00 00 00 00 00 00 00 00:Superoxide Crystal
54 45 43 48 5F 43 4F 4D 50 00 00 00 00 00 00 00:Technology Module
43 41 56 45 50 52 4F 44 33 00 00 00 00 00 00 00:Tetra Cobalt
52 45 41 43 54 49 4F 4E 31 00 00 00 00 00 00 00:Thermic Condensate
54 52 41 5F 4D 49 4E 45 52 41 4C 53 32 00 00 00:Unrefined Pyrite Grease
46 41 52 4D 50 52 4F 44 36 00 00 00 00 00 00 00:Unstable Gel
47 52 45 4E 46 55 45 4C 31 00 00 00 00 00 00 00:Unstable Plasma
43 41 56 45 43 55 42 45 00 00 00 00 00 00 00 00:Vortex Cubes
57 41 52 5F 43 55 52 49 4F 32 00 00 00 00 00 00:Vykeen Dagger
57 41 52 5F 43 55 52 49 4F 31 00 00 00 00 00 00:Vykeen Effigy
57 41 4C 4B 45 52 5F 50 52 4F 44 00 00 00 00 00:Walker Brain
48 59 50 45 52 46 55 45 4C 31 00 00 00 00 00 00:Warp Cell
54 52 41 5F 54 45 43 48 32 00 00 00 00 00 00 00:Welding Soap

[Upgrades (Classified As Products)]--------------------------------------------

55 5F 45 4E 45 52 47 59 33 00 00 00 00 00 00 00:Life Support Module (S)
55 5F 45 4E 45 52 47 59 32 00 00 00 00 00 00 00:Life Support Module (A)
55 5F 45 4E 45 52 47 59 31 00 00 00 00 00 00 00:Life Support Module (B)
55 5F 4A 45 54 42 4F 4F 53 54 34 00 00 00 00 00:Movement Module (S)
55 5F 4A 45 54 42 4F 4F 53 54 33 00 00 00 00 00:Movement Module (A)
55 5F 4A 45 54 42 4F 4F 53 54 32 00 00 00 00 00:Movement Module (B)
55 5F 4A 45 54 42 4F 4F 53 54 31 00 00 00 00 00:Movement Module (C)
55 5F 52 41 44 33 00 00 00 00 00 00 00 00 00 00:Radiation Protection Module (S)
55 5F 52 41 44 32 00 00 00 00 00 00 00 00 00 00:Radiation Protection Module (A)
55 5F 52 41 44 31 00 00 00 00 00 00 00 00 00 00:Radiation Protection Module (B)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 34 00 00:Shield Module (S)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 33 00 00:Shield Module (A)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 32 00 00:Shield Module (B)
55 5F 53 48 49 45 4C 44 42 4F 4F 53 54 31 00 00:Shield Module (C)
55 5F 43 4F 4C 44 50 52 4F 54 33 00 00 00 00 00:Thermal Protection Module (S) (Fire)
55 5F 43 4F 4C 44 50 52 4F 54 32 00 00 00 00 00:Thermal Protection Module (A) (Fire)
55 5F 43 4F 4C 44 50 52 4F 54 31 00 00 00 00 00:Thermal Protection Module (B) (Fire)
55 5F 48 4F 54 50 52 4F 54 33 00 00 00 00 00 00:Thermal Protection Module (S) (Ice)
55 5F 48 4F 54 50 52 4F 54 32 00 00 00 00 00 00:Thermal Protection Module (A) (Ice)
55 5F 48 4F 54 50 52 4F 54 31 00 00 00 00 00 00:Thermal Protection Module (B) (Ice)
55 5F 54 4F 58 33 00 00 00 00 00 00 00 00 00 00:Toxic Protection Module (S)
55 5F 54 4F 58 32 00 00 00 00 00 00 00 00 00 00:Toxic Protection Module (A)
55 5F 54 4F 58 31 00 00 00 00 00 00 00 00 00 00:Toxic Protection Module (B)
55 5F 55 4E 57 33 00 00 00 00 00 00 00 00 00 00:Underwater Protection Module (S)
55 5F 55 4E 57 32 00 00 00 00 00 00 00 00 00 00:Underwater Protection Module (A)
55 5F 55 4E 57 31 00 00 00 00 00 00 00 00 00 00:Underwater Protection Module (B)

55 5F 52 41 49 4C 34 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (S)
55 5F 52 41 49 4C 33 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (A)
55 5F 52 41 49 4C 32 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (B)
55 5F 52 41 49 4C 31 00 00 00 00 00 00 00 00 00:Blaze Javelin Module (C)
55 5F 42 4F 4C 54 34 00 00 00 00 00 00 00 00 00:Boltcaster Module (S)
55 5F 42 4F 4C 54 33 00 00 00 00 00 00 00 00 00:Boltcaster Module (A)
55 5F 42 4F 4C 54 32 00 00 00 00 00 00 00 00 00:Boltcaster Module (B)
55 5F 42 4F 4C 54 31 00 00 00 00 00 00 00 00 00:Boltcaster Module (C)
55 5F 54 47 52 45 4E 41 44 45 34 00 00 00 00 00:Geology Cannon Module (S)
55 5F 54 47 52 45 4E 41 44 45 33 00 00 00 00 00:Geology Cannon Module (A)
55 5F 54 47 52 45 4E 41 44 45 32 00 00 00 00 00:Geology Cannon Module (B)
55 5F 54 47 52 45 4E 41 44 45 31 00 00 00 00 00:Geology Cannon Module (C)
55 5F 4C 41 53 45 52 34 00 00 00 00 00 00 00 00:Mining Beam Module (S)
55 5F 4C 41 53 45 52 33 00 00 00 00 00 00 00 00:Mining Beam Module (A)
55 5F 4C 41 53 45 52 32 00 00 00 00 00 00 00 00:Mining Beam Module (B)
55 5F 4C 41 53 45 52 31 00 00 00 00 00 00 00 00:Mining Beam Module (C)
55 5F 47 52 45 4E 41 44 45 34 00 00 00 00 00 00:Plasma Launcher Module (S)
55 5F 47 52 45 4E 41 44 45 33 00 00 00 00 00 00:Plasma Launcher Module (A)
55 5F 47 52 45 4E 41 44 45 32 00 00 00 00 00 00:Plasma Launcher Module (B)
55 5F 47 52 45 4E 41 44 45 31 00 00 00 00 00 00:Plasma Launcher Module (C)
55 5F 53 4D 47 34 00 00 00 00 00 00 00 00 00 00:Pulse Spitter Module (S)
55 5F 53 4D 47 33 00 00 00 00 00 00 00 00 00 00:Pulse Spitter Module (A)
55 5F 53 4D 47 32 00 00 00 00 00 00 00 00 00 00:Pulse Spitter Module (B)
55 5F 53 4D 47 31 00 00 00 00 00 00 00 00 00 00:Pulse Spitter Module (C)
55 5F 53 43 41 4E 4E 45 52 34 00 00 00 00 00 00:Scanner Module (S)
55 5F 53 43 41 4E 4E 45 52 33 00 00 00 00 00 00:Scanner Module (A)
55 5F 53 43 41 4E 4E 45 52 32 00 00 00 00 00 00:Scanner Module (B)
55 5F 53 43 41 4E 4E 45 52 31 00 00 00 00 00 00:Scanner Module (C)
55 5F 53 48 4F 54 47 55 4E 34 00 00 00 00 00 00:Scatter Blaster Module (S)
55 5F 53 48 4F 54 47 55 4E 33 00 00 00 00 00 00:Scatter Blaster Module (A)
55 5F 53 48 4F 54 47 55 4E 32 00 00 00 00 00 00:Scatter Blaster Module (B)
55 5F 53 48 4F 54 47 55 4E 31 00 00 00 00 00 00:Scatter Blaster Module (C)

55 5F 53 48 49 50 42 4C 4F 42 34 00 00 00 00 00:Cyclotron Module (S)
55 5F 53 48 49 50 42 4C 4F 42 33 00 00 00 00 00:Cyclotron Module (A)
55 5F 53 48 49 50 42 4C 4F 42 32 00 00 00 00 00:Cyclotron Module (B)
55 5F 53 48 49 50 42 4C 4F 42 31 00 00 00 00 00:Cyclotron Module (C)
55 5F 48 59 50 45 52 34 00 00 00 00 00 00 00 00:Hyperdrive Module (S)
55 5F 48 59 50 45 52 33 00 00 00 00 00 00 00 00:Hyperdrive Module (A)
55 5F 48 59 50 45 52 32 00 00 00 00 00 00 00 00:Hyperdrive Module (B)
55 5F 48 59 50 45 52 31 00 00 00 00 00 00 00 00:Hyperdrive Module (C)
55 5F 53 48 49 50 4D 49 4E 49 34 00 00 00 00 00:Infra-Knife Module (S)
55 5F 53 48 49 50 4D 49 4E 49 33 00 00 00 00 00:Infra-Knife Module (A)
55 5F 53 48 49 50 4D 49 4E 49 32 00 00 00 00 00:Infra-Knife Module (B)
55 5F 53 48 49 50 4D 49 4E 49 31 00 00 00 00 00:Infra-Knife Module (C)
55 5F 53 48 49 50 4C 41 53 34 00 00 00 00 00 00:Phase Beam Module (S)
55 5F 53 48 49 50 4C 41 53 33 00 00 00 00 00 00:Phase Beam Module (A)
55 5F 53 48 49 50 4C 41 53 32 00 00 00 00 00 00:Phase Beam Module (B)
55 5F 53 48 49 50 4C 41 53 31 00 00 00 00 00 00:Phase Beam Module (C)
55 5F 53 48 49 50 47 55 4E 34 00 00 00 00 00 00:Photon Cannon Module (S)
55 5F 53 48 49 50 47 55 4E 33 00 00 00 00 00 00:Photon Cannon Module (A)
55 5F 53 48 49 50 47 55 4E 32 00 00 00 00 00 00:Photon Cannon Module (B)
55 5F 53 48 49 50 47 55 4E 31 00 00 00 00 00 00:Photon Cannon Module (C)
55 5F 53 48 49 50 53 48 4F 54 34 00 00 00 00 00:Positron Module (S)
55 5F 53 48 49 50 53 48 4F 54 33 00 00 00 00 00:Positron Module (A)
55 5F 53 48 49 50 53 48 4F 54 32 00 00 00 00 00:Positron Module (B)
55 5F 53 48 49 50 53 48 4F 54 31 00 00 00 00 00:Positron Module (C)
55 5F 50 55 4C 53 45 34 00 00 00 00 00 00 00 00:Pulse Engine Module (S)
55 5F 50 55 4C 53 45 33 00 00 00 00 00 00 00 00:Pulse Engine Module (A)
55 5F 50 55 4C 53 45 32 00 00 00 00 00 00 00 00:Pulse Engine Module (B)
55 5F 50 55 4C 53 45 31 00 00 00 00 00 00 00 00:Pulse Engine Module (C)
55 5F 53 48 49 50 53 48 49 45 4C 44 34 00 00 00:Starship Shield Module (S)
55 5F 53 48 49 50 53 48 49 45 4C 44 33 00 00 00:Starship Shield Module (A)
55 5F 53 48 49 50 53 48 49 45 4C 44 32 00 00 00:Starship Shield Module (B)
55 5F 53 48 49 50 53 48 49 45 4C 44 31 00 00 00:Starship Shield Module (C)

[Uncategorized]------------------------------------------------------

41 54 4C 41 53 53 55 49 54 00 00 00 00 00 00 00:Remembrance
53 54 41 52 53 55 49 54 00 00 00 00 00 00 00 00:Star Seed

--------------------------[Technology]---------------------------------

[Ship]-----------------------------------------------------------------

53 48 49 50 53 43 41 4E 5F 43 4F 4D 42 41 54 00:Conflict Scanner
53 48 49 50 50 4C 41 53 4D 41 00 00 00 00 00 00:Cylotron Ballista
53 48 49 50 53 48 49 45 4C 44 00 00 00 00 00 00:Deflector Shield
53 48 49 50 53 43 41 4E 5F 45 43 4F 4E 00 00 00:Economy Scanner
48 59 50 45 52 44 52 49 56 45 00 00 00 00 00 00:Hyperdrive
53 48 49 50 4D 49 4E 49 47 55 4E 00 00 00 00 00:Intra-Knife Accelerator
4C 41 55 4E 43 48 45 52 00 00 00 00 00 00 00 00:Launch Thrusters
53 48 49 50 4C 41 53 31 00 00 00 00 00 00 00 00:Phase Beam
53 48 49 50 47 55 4E 31 00 00 00 00 00 00 00 00:Photon Cannon
53 48 49 50 53 48 4F 54 47 55 4E 00 00 00 00 00:Positron Ejector
53 48 49 50 4A 55 4D 50 31 00 00 00 00 00 00 00:Pulse Engine
53 48 49 50 52 4F 43 4B 45 54 53 00 00 00 00 00:Rocket Launcher
53 48 49 50 5F 54 45 4C 45 50 4F 52 54 00 00 00:Teleport Receiver

55 54 5F 53 48 49 50 53 48 49 45 4C 44 00 00 00:Ablative Armour
48 44 52 49 56 45 42 4F 4F 53 54 31 00 00 00 00:Cadmium Drive
55 54 5F 53 48 49 50 42 4C 4F 42 00 00 00 00 00:Dyson Pump
48 44 52 49 56 45 42 4F 4F 53 54 32 00 00 00 00:Emeril Drive
55 54 5F 53 48 49 50 4C 41 53 00 00 00 00 00 00:Fourier De-Limiter
55 54 5F 53 48 49 50 53 48 4F 54 00 00 00 00 00:Fragment Supercharger
48 44 52 49 56 45 42 4F 4F 53 54 33 00 00 00 00:Indium Drive
55 54 5F 52 4F 43 4B 45 54 53 00 00 00 00 00 00:Large Rocket Tubes
55 54 5F 53 48 49 50 47 55 4E 00 00 00 00 00 00:Non-Linear Optics
55 54 5F 53 48 49 50 4D 49 4E 49 00 00 00 00 00:Non-Linear Optics 2
50 48 4F 54 4F 4E 49 58 5F 43 4F 52 45 00 00 00:Photonix Core

[Multitool]-----------------------------------------------------------

53 43 41 4E 42 49 4E 4F 43 31 00 00 00 00 00 00:Analysis Visor
52 41 49 4C 47 55 4E 00 00 00 00 00 00 00 00 00:Blaze Javelin
42 4F 4C 54 00 00 00 00 00 00 00 00 00 00 00 00:Boltcaster
53 43 4F 50 45 00 00 00 00 00 00 00 00 00 00 00:Combat Scope
54 45 52 52 41 49 4E 5F 47 52 45 4E 00 00 00 00:Geology Cannon
4C 41 53 45 52 00 00 00 00 00 00 00 00 00 00 00:Mining Beam
47 52 4F 55 4E 44 5F 53 48 49 45 4C 44 00 00 00:Personal Forcefield
47 52 45 4E 41 44 45 00 00 00 00 00 00 00 00 00:Plasma Launcher
53 4D 47 00 00 00 00 00 00 00 00 00 00 00 00 00:Pulse Spitter
53 43 41 4E 31 00 00 00 00 00 00 00 00 00 00 00:Scanner
53 48 4F 54 47 55 4E 00 00 00 00 00 00 00 00 00:Scatter Blaster
54 45 52 52 41 49 4E 45 44 49 54 4F 52 00 00 00:Terrain Manipulator

53 54 52 4F 4E 47 4C 41 53 45 52 00 00 00 00 00:Advanced Mining Laser
55 54 5F 53 4D 47 00 00 00 00 00 00 00 00 00 00:Amplified Cartriges
55 54 5F 42 4F 4C 54 00 00 00 00 00 00 00 00 00:Barrel Ioniser
42 4F 4C 54 5F 53 4D 00 00 00 00 00 00 00 00 00:Boltcaster SM
55 54 5F 52 41 49 4C 00 00 00 00 00 00 00 00 00:Mass Accelerator
4C 41 53 45 52 5F 58 4F 00 00 00 00 00 00 00 00:Plasma Resonator
55 54 5F 53 48 4F 54 00 00 00 00 00 00 00 00 00:Shell Greaser
55 54 5F 53 43 41 4E 00 00 00 00 00 00 00 00 00:Waveform Recycler

[Exosuit]----------------------------------------------------------------

50 52 4F 54 45 43 54 00 00 00 00 00 00 00 00 00:Hazard Protection
50 4F 57 45 52 47 4C 4F 56 45 00 00 00 00 00 00:Hasmat Gauntlet
4A 45 54 31 00 00 00 00 00 00 00 00 00 00 00 00:Jetpack
45 4E 45 52 47 59 00 00 00 00 00 00 00 00 00 00:Life Support
55 54 5F 4A 55 4D 50 00 00 00 00 00 00 00 00 00:Rocket Boots

55 50 5F 4A 45 54 34 23 35 37 31 32 31 00 00 00:Anitmatter Tanks
55 50 5F 43 4F 4C 44 33 23 30 36 35 32 38 00 00:Energy Field Thermal Harvester
55 50 5F 55 4E 57 33 23 31 35 30 32 34 00 00 00:Hyperpressure Lung Replacement
55 50 5F 54 4F 58 33 23 39 33 31 33 38 00 00 00:Ionising Poison Remover
55 50 5F 45 4E 47 59 33 23 36 34 31 33 32 00 00:Liquid Gas Sieve
55 50 5F 53 48 4C 44 34 23 36 38 32 32 35 00 00:Nanite Battery
55 54 5F 4A 45 54 00 00 00 00 00 00 00 00 00 00:Neural Stimulator
55 50 5F 52 41 44 33 23 37 34 31 32 31 00 00 00:Non-Linear Sievert Barrier
55 54 5F 45 4E 45 52 47 59 00 00 00 00 00 00 00:Oxygen Recycler
55 54 5F 50 52 4F 54 45 43 54 00 00 00 00 00 00:Shield Lattice

[Exocraft]--------------------------------------------------------------

56 45 48 49 43 4C 45 5F 45 4E 47 49 4E 45 00 00:Fusion Engine
56 45 48 49 43 4C 45 5F 53 43 41 4E 00 00 00 00:Exocraft Signal Booster
56 45 48 49 43 4C 45 5F 53 43 41 4E 31 00 00 00:Exocraft Signal Booster Upgrade Sigma
56 45 48 49 43 4C 45 5F 53 43 41 4E 32 00 00 00:Exocraft Signal Booster Upgrade Tau
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 00 00 00:Exocraft Mining Laser
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 31 00 00:Exocraft Mining Laser Upgrade Sigma
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 32 00 00:ATV Photon Cannon Beta
56 45 48 49 43 4C 45 5F 4C 41 53 45 52 33 00 00:ATV Photon Cannon Gamma
56 45 48 49 43 4C 45 5F 47 55 4E 00 00 00 00 00:Exocraft Mounted Cannon
56 45 48 49 43 4C 45 5F 47 55 4E 31 00 00 00 00:Exocraft Mounted Cannon Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 00 00 00:Exocraft Acceleration Module
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 31 00 00:Exocraft Acceleration Module Upgrade Sigma
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 32 00 00:Exocraft Acceleration Module Upgrade Tau
56 45 48 49 43 4C 45 5F 42 4F 4F 53 54 33 00 00:ATV Tune Up Gamma

[Freighter]------------------------------------------------------------

46 5F 48 59 50 45 52 44 52 49 56 45 00 00 00 00:Freighter Hyperdrive

46 5F 48 44 52 49 56 45 42 4F 4F 53 54 31 00 00:Freighter Warp Reactor Sigma
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 32 00 00:Freighter Warp Reactor Tau
46 5F 48 44 52 49 56 45 42 4F 4F 53 54 33 00 00:Freighter Warp Reactor Theta

[Elements (Old)]------------------------------------------------------------

54 52 41 44 45 41 42 4C 45 34 00 00 00 00 00 00:Aluminum
56 45 48 49 43 4C 45 53 55 42 32 00 00 00 00 00:Armadium
53 55 42 42 41 52 52 45 4E 00 00 00 00 00 00 00:Cactus Flesh
54 52 41 44 45 41 42 4C 45 38 00 00 00 00 00 00:Calium
54 45 43 48 52 41 52 45 31 00 00 00 00 00 00 00:Chrysonite
54 52 41 44 45 41 42 4C 45 32 00 00 00 00 00 00:Copper
53 55 42 50 4F 4F 50 00 00 00 00 00 00 00 00 00:Coprite
53 55 42 42 4C 55 45 53 59 53 00 00 00 00 00 00:Cymatygen
56 45 48 49 43 4C 45 53 55 42 31 00 00 00 00 00:Detritum
54 52 41 44 45 41 42 4C 45 36 00 00 00 00 00 00:Emeril
53 55 42 53 4E 4F 57 00 00 00 00 00 00 00 00 00:Frost Crystal
53 55 42 54 4F 58 49 43 00 00 00 00 00 00 00 00:Fungal Mould
53 55 42 52 41 44 49 4F 41 43 54 49 56 45 00 00:Gamma Root
54 52 41 44 45 41 42 4C 45 35 00 00 00 00 00 00:Gold
54 45 43 48 31 00 00 00 00 00 00 00 00 00 00 00:Heridium
54 52 41 44 45 41 42 4C 45 31 00 00 00 00 00 00:Iridium
43 4F 4D 31 00 00 00 00 00 00 00 00 00 00 00 00:Iron
53 55 42 57 41 54 45 52 00 00 00 00 00 00 00 00:Kelp Sac
53 50 41 43 45 47 55 4E 4B 34 00 00 00 00 00 00:Living Slime
53 55 42 43 52 45 41 54 55 52 45 00 00 00 00 00:Mordite
54 52 41 44 45 41 42 4C 45 39 00 00 00 00 00 00:Murrine
54 52 41 44 45 41 42 4C 45 33 00 00 00 00 00 00:Nickel
47 41 53 33 00 00 00 00 00 00 00 00 00 00 00 00:Nitrogen
54 52 41 44 45 41 42 4C 45 31 30 00 00 00 00 00:Omegon
54 45 43 48 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Platinum
46 55 45 4C 52 41 52 45 31 00 00 00 00 00 00 00:Plutonium
53 55 42 44 52 4F 4E 45 00 00 00 00 00 00 00 00:Pugneum
54 52 41 44 45 41 42 4C 45 37 00 00 00 00 00 00:Radnox
53 55 42 52 45 44 53 59 53 00 00 00 00 00 00 00:Rubeum
53 55 42 53 43 4F 52 43 48 45 44 00 00 00 00 00:Solanium
53 55 42 4C 55 53 48 00 00 00 00 00 00 00 00 00:Star Bulb
46 55 45 4C 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00:Thamium9
43 4F 4D 52 41 52 45 31 00 00 00 00 00 00 00 00:Titanium
53 55 42 53 48 49 50 00 00 00 00 00 00 00 00 00:Tropheum
53 55 42 47 52 45 45 4E 53 59 53 00 00 00 00 00:Viridium
53 50 41 43 45 47 55 4E 4B 35 00 00 00 00 00 00:Viscous Fluids
43 4F 4D 55 4E 43 4F 4D 4D 4F 4E 31 00 00 00 00:Zinc

[Misc (Old)]-----------------------------------------------------------------

41 51 55 41 53 50 48 45 52 45 00 00 00 00 00 00:Aqua Sphere
48 41 43 4B 31 00 00 00 00 00 00 00 00 00 00 00:Bypass Chip
43 4F 4D 4D 4F 44 49 54 59 31 00 00 00 00 00 00:Carite Sheet
43 57 49 52 45 00 00 00 00 00 00 00 00 00 00 00:Copper Wire
4D 45 47 41 50 52 4F 44 33 00 00 00 00 00 00 00:Cryogenic Chamber
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 31 00 00:Decrypted User Data
54 52 41 5F 45 58 4F 54 49 43 53 31 00 00 00 00:De-Scented Pheromone Bottle
53 45 4E 54 49 4E 45 4C 32 00 00 00 00 00 00 00:Dimensional Matrix
54 52 41 5F 4D 49 4E 45 52 41 4C 53 31 00 00 00:Dirt
43 4F 4D 4D 4F 44 49 54 59 37 00 00 00 00 00 00:Dynamic Resonator
43 4F 4D 4D 4F 44 49 54 59 35 00 00 00 00 00 00:Electron Vapour
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 31 00 00:Enormous Metal Cog
54 52 41 5F 45 4E 45 52 47 59 34 00 00 00 00 00:Experimental Power Fluid
43 55 52 49 4F 36 00 00 00 00 00 00 00 00 00 00:Fascination Bead
54 52 41 5F 41 4C 4C 4F 59 34 00 00 00 00 00 00:Five Dimensional Torus
4D 45 47 41 50 52 4F 44 31 00 00 00 00 00 00 00:Freighter Fuel
54 52 41 5F 45 4E 45 52 47 59 35 00 00 00 00 00:Fusion Core
55 4C 54 52 41 50 52 4F 44 31 00 00 00 00 00 00:Fusion Ignitor
43 55 52 49 4F 37 00 00 00 00 00 00 00 00 00 00:Gek Charm
43 55 52 49 4F 31 00 00 00 00 00 00 00 00 00 00:Gek Relic
44 52 55 47 53 31 00 00 00 00 00 00 00 00 00 00:Geknip
43 55 52 49 4F 35 00 00 00 00 00 00 00 00 00 00:Grahgrah
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 34 00 00:Holographic Crankshaft
54 52 41 5F 45 4E 45 52 47 59 32 00 00 00 00 00:Industrial Grade Battery
47 45 4C 00 00 00 00 00 00 00 00 00 00 00 00 00:Insulating Gel
54 52 41 5F 45 58 4F 54 49 43 53 33 00 00 00 00:Instability Injector
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 34 00 00:Ion Sphere
43 55 52 49 4F 33 00 00 00 00 00 00 00 00 00 00:Korvax Casing
43 55 52 49 4F 39 00 00 00 00 00 00 00 00 00 00:Korvax Convergence Cube
43 4F 4D 4D 4F 44 49 54 59 34 00 00 00 00 00 00:Microdensity Fabric
41 54 4C 41 53 5F 53 45 45 44 5F 39 00 00 00 00:Modified Quanta
43 4F 4D 4D 4F 44 49 54 59 32 00 00 00 00 00 00:Night Crystals
4D 50 4C 41 54 45 00 00 00 00 00 00 00 00 00 00:Non-Ferrous Plate
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 32 00 00:Non-Stick Piston
54 52 41 5F 45 4E 45 52 47 59 33 00 00 00 00 00:Ohmic Gel
54 52 41 5F 45 58 4F 54 49 43 53 34 00 00 00 00:Organic Piping
54 52 41 5F 4D 49 4E 45 52 41 4C 53 34 00 00 00:Polychromatic Zirconium
50 52 4F 44 46 55 45 4C 33 00 00 00 00 00 00 00:Power Reservoir
4D 45 47 41 50 52 4F 44 32 00 00 00 00 00 00 00:Quantum Processor
54 52 41 5F 4D 49 4E 45 52 41 4C 53 35 00 00 00:Re-Latticed Arc Crystals
41 54 4C 41 53 53 55 49 54 00 00 00 00 00 00 00:Remembrance
53 48 49 45 4C 44 46 55 45 4C 32 00 00 00 00 00:Shielding Plate
53 48 49 45 4C 44 46 55 45 4C 31 00 00 00 00 00:Shielding Shard
53 48 49 45 4C 44 46 55 45 4C 33 00 00 00 00 00:Shielding Sheet
54 52 41 5F 43 4F 4D 50 4F 4E 45 4E 54 33 00 00:Six Pronged Mesh Decoupler
54 52 41 5F 45 4E 45 52 47 59 31 00 00 00 00 00:Spark Canister
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 32 00 00:Star Silk
55 4C 54 52 41 50 52 4F 44 32 00 00 00 00 00 00:Stasis Device
54 52 41 5F 41 4C 4C 4F 59 35 00 00 00 00 00 00:Superconducting Fibre
43 4F 4D 4D 4F 44 49 54 59 33 00 00 00 00 00 00:Suspension Fluid
54 52 41 5F 43 4F 4D 4D 4F 44 49 54 59 35 00 00:Teleport Coordinators
46 41 52 4D 50 52 4F 44 42 41 53 49 43 32 00 00:Voltaic Cell
43 55 52 49 4F 38 00 00 00 00 00 00 00 00 00 00:Vy'keen Dagger
43 55 52 49 4F 32 00 00 00 00 00 00 00 00 00 00:Vy'keen Effigy
46 41 52 4D 50 52 4F 44 42 41 53 49 43 31 00 00:Weatherproof Rubber
</DropDownList>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>Array of byte</VariableType>
                  <ByteLength>16</ByteLength>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8167</ID>
                  <Description>"Item Name"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>String</VariableType>
                  <Length>16</Length>
                  <Unicode>0</Unicode>
                  <CodePage>0</CodePage>
                  <ZeroTerminate>1</ZeroTerminate>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8162</ID>
                  <Description>"Quantity"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8163</ID>
                  <Description>"Total"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>1C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8164</ID>
                  <Description>"Damaged (Numpad 2)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>20</Offset>
                  </Offsets>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>98</Key>
                      </Keys>
                      <Value>0</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>8165</ID>
                  <Description>"Inv. Column"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>24</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8166</ID>
                  <Description>"Inv. Row"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pHover</Address>
                  <Offsets>
                    <Offset>28</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8014</ID>
              <Description>"Money Pointer (View Inv)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-08-30: v1.58 fixed and made more update persistent. by Igromanru
  2018-09-11: v1.59 made more update persistent by reading out the offset (unitsOffset). by Igromanru
}

[ENABLE]
{$lua}
if syntaxcheck then return end
autoAssemble([[
aobscanmodule(units,NMS.exe,44 8B A1 ? ? ? ? B8 ? ? ? ? 65 48 8B 0C 25)
registersymbol(units)
]])
local value = readInteger("units+3")
unregisterSymbol("unitsOffset")
registerSymbol("unitsOffset", value, true)

-- ignore the Warning, just press "YES"
{$asm}

alloc(newmem,$100,units)
alloc(unitsBackup,$16,units)

label(code)
label(return)
label(unitsp)

registersymbol(unitsBackup)
registersymbol(unitsp)

newmem:
  mov [unitsp],rcx

code:
  readMem(units, 7)
  jmp return

unitsp:
  dq 0

units:
  jmp newmem
  nop
  nop
return:

unitsBackup:
  readMem(units, 7)

[DISABLE]
{$lua}
if syntaxcheck then return end

{$asm}
units:
  readMem(unitsBackup, 7)

dealloc(newmem)
dealloc(unitsBackup)
unregistersymbol(units)
unregistersymbol(unitsOffset)
unregistersymbol(unitsBackup)
unregistersymbol(unitsp)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8015</ID>
                  <Description>"Units"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>unitsp</Address>
                  <Offsets>
                    <Offset>unitsOffset</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8055</ID>
                  <Description>"Nanites"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>unitsp</Address>
                  <Offsets>
                    <Offset>unitsOffset + 4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8056</ID>
                  <Description>"Quicksilver"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>unitsp</Address>
                  <Offsets>
                    <Offset>unitsOffset + 8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8088</ID>
              <Description>"Inventory Slot Pointers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-10-05
  Author : Squall8
}

[ENABLE]

aobscanmodule(invslotptr,NMS.exe,44 0F B7 5B 40 45)
alloc(newmem,$100,invslotptr)

label(code)
label(return)
label(invslotsp)

registersymbol(invslotptr)
registersymbol(invslotsp)

newmem:
  mov [invslotsp],rbx

code:
  movzx r11d,word ptr [rbx+40]
  jmp return

invslotsp:
  dq 0

invslotptr:
  jmp newmem
return:

[DISABLE]

invslotptr:
  db 44 0F B7 5B 40

unregistersymbol(invslotptr)
unregistersymbol(invslotsp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8089</ID>
                  <Description>"Row 1 (set to -1 for all slots)"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8090</ID>
                  <Description>"Row 2"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8091</ID>
                  <Description>"Row 3"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8092</ID>
                  <Description>"Row 4"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8093</ID>
                  <Description>"Row 5"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8094</ID>
                  <Description>"Row 6"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8095</ID>
                  <Description>"Width (Default Max: 8)"</Description>
                  <VariableType>2 Bytes</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>40</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8096</ID>
                  <Description>"Height (Default Max: 6)"</Description>
                  <VariableType>2 Bytes</VariableType>
                  <Address>invslotsp</Address>
                  <Offsets>
                    <Offset>42</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8121</ID>
              <Description>"Galactic Map Speed"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(gms,NMS.exe,F3 0F 11 44 24 2C 84 C0 74 0A F3 0F 10 05)
alloc(newmem,$1000,gms)

label(code)
label(return)
label(gmsp)

registersymbol(gms)
registersymbol(gmsp)

newmem:
  movss xmm0,[gmsp]

code:
  movss [rsp+2C],xmm0
  jmp return

gmsp:
  dq (float)2.75

gms:
  jmp newmem
  nop
return:

[DISABLE]

gms:
  db F3 0F 11 44 24 2C

unregistersymbol(gms)
unregistersymbol(gmsp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8122</ID>
                  <Description>"Galactic Map Speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>gmsp</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8212</ID>
              <Description>"Frigate Stats (View Firgate Status)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-31
  Author : Squall8
}

[ENABLE]

aobscanmodule(frigates,NMS.exe,8B 84 81 E0 00 00 00)
alloc(newmem,$1000,frigates)

label(code)
label(return)
label(frigatesp)

registersymbol(frigates)
registersymbol(frigatesp)

newmem:
  push rbx
  lea rbx,[rcx+rax*4+000000E0]
  mov [frigatesp],rbx
  pop rbx

code:
  mov eax,[rcx+rax*4+000000E0]
  jmp return

frigatesp:
  dq 0

frigates:
  jmp newmem
  nop
  nop
return:

[DISABLE]

frigates:
  db 8B 84 81 E0 00 00 00

unregistersymbol(frigates)
unregistersymbol(frigatesp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8213</ID>
                  <Description>"Combat"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>-C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8214</ID>
                  <Description>"Exploration"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>-8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8215</ID>
                  <Description>"Industrial"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>-4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8216</ID>
                  <Description>"Trade"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8217</ID>
                  <Description>"Fuel Requirements"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8218</ID>
                  <Description>"Trip Time % (Max 50)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>frigatesp</Address>
                  <Offsets>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8041</ID>
              <Description>"Current Inventory Stats Pointers"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(cincst,NMS.exe,F3 45 0F 2C 46 10)
alloc(newmem,$1000,cincst)

label(code)
label(return)
label(cisp)

registersymbol(cincst)
registersymbol(cisp)

newmem:
  mov [cisp],r14

code:
  cvttss2si r8d,[r14+10]
  jmp return

cisp:
  dq 0

cincst:
  jmp newmem
  nop
return:

[DISABLE]

cincst:
  db F3 45 0F 2C 46 10

unregistersymbol(cincst)
unregistersymbol(cisp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8042</ID>
                  <Description>"Damage"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cisp</Address>
                  <Offsets>
                    <Offset>-20</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8043</ID>
                  <Description>"Shield/Mining"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cisp</Address>
                  <Offsets>
                    <Offset>-8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8044</ID>
                  <Description>"Hyperdrive/Scanner"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cisp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7981</ID>
              <Description>"Journey Pointers (View Corresponding Menu)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2017-11-17
  Author : Squall8

  2018-10-16: v1.64 made more update persistent. by Igromanru
}

[ENABLE]
{$lua}
if syntaxcheck then return end
autoAssemble([[
aobscanmodule(journeyPtr,NMS.exe,48 39 0C 02 75 2F)
registersymbol(journeyPtr)
]])
local value = readBytes("journeyPtr+5", 1, false)
local journeyPtrJump = getAddress("journeyPtr+6") + value
registerSymbol("journeyPtrJump", journeyPtrJump, true)

-- ignore the Warning, just press "YES"
{$asm}

alloc(newmem,$100,journeyPtr)

label(code)
label(return)
label(cmpval)
label(journeyp)
label(journeyPtrBackup)

newmem:
  cmp qword ptr [cmpval],rcx
  jne code
  mov [journeyp],rdx

code:
  cmp [rdx+rax],rcx
  jne journeyPtrJump
  jmp return

cmpval:
  dq 1

journeyp:
  dq 0

journeyPtrBackup:
 readMem(journeyPtr, 6)

journeyPtr:
  jmp newmem
  nop
return:
registersymbol(cmpval)
registersymbol(journeyp)
registersymbol(journeyPtrBackup)

[DISABLE]
{$asm}
journeyPtr:
  readMem(journeyPtrBackup, 6)

unregistersymbol(cmpval)
unregistersymbol(journeyp)
unregistersymbol(journeyPtr)
unregistersymbol(journeyPtrBackup)
unregistersymbol(journeyPtrJump)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>7982</ID>
                  <Description>"Value To Find"</Description>
                  <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Choose One

----------[Milestones]----------

5494769087316969796:Distance Walked (Max:100000)
5575266459342949441:Aliens Met (Max:40)
4993470898080206679:Words Learned (Max:150)
383414849357:Units Earned (Max:2000000)
6868910037801455173:Starships Destroyed (Max:80)
5495884997129553235:Sentinels Destroyed (Max:80)
6869206888661012300:Survived In Extreme Conditions (Max:28900)
5927114651544537412:Times Warped (Max:60)
5497841122519763268:Discovered All Creatures (Max:10)

----------[Lifeforms]----------

5638880925501706836:Gek Standing (Max:100)
5281982689246659668:Gek Missions Completed (Max:60)
5503208822573848404:Gek Words Learned (Max:650)
6436593082216829780:Gek Systems Visited (Max:60)

5638880925502816599:Vykeen Standing (Max:100)
5281982689246659671:Vykeen Missions Completed (Max:60)
5503208822573848407:Vykeen Words Learned (Max:650)
6436593082216829783:Vykeen Systems Visited (Max:60)

5638880925502691397:Korvax Standing (Max:100)
5281982689246659653:Korvax Missions Completed (Max:60)
5503208822573848389:Korvax Words Learned (Max:650)
6436593082216829765:Korvax Systems Visited (Max:60)

----------[Guilds]----------

6007595522374059860:Merchants Guild Standing (Max:100)
5575251066347603796:Merchants Guild Missions Completed (Max:60)
5791439267377007696:Plants Farmed (Max:80)

6007595522374059863:Mercenaries Guild Standing (Max:100)
5575251066347603799:Mercenaries Guild Missions Completed (Max:60)

6007595522374059845:Explorers Guild Standing (Max:100)
5575251066347603781:Explorers Guild Missions Completed (Max:60)
4702694104554946898:Rare Creatures Scanned (Max:50)
</DropDownList>
                  <VariableType>8 Bytes</VariableType>
                  <Address>cmpval</Address>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7983</ID>
                      <Description>"Integer Value"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>journeyp</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>7984</ID>
                      <Description>"Float Value"</Description>
                      <VariableType>Float</VariableType>
                      <Address>journeyp</Address>
                      <Offsets>
                        <Offset>10</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>7985</ID>
                  <Description>"Journey String Reference"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscan(reflist,41 54 4C 41 53 5F 53 54 4F 52 59 00 00 00 00 00 41 54 4C 41 53 5F 50 41 54 48 00 00 00 00 00 00)
label(reflistp)
registersymbol(reflistp)

reflist:
reflistp:
 
 
[DISABLE]
unregistersymbol(reflistp)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>7986</ID>
                      <Description>"Reference Start"</Description>
                      <VariableType>String</VariableType>
                      <Length>16</Length>
                      <Unicode>0</Unicode>
                      <CodePage>0</CodePage>
                      <ZeroTerminate>1</ZeroTerminate>
                      <Address>reflistp</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8359</ID>
          <Description>"etc"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2054</ID>
              <Description>"No Pause On Loss Focus"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   :
  Author : RaYRoD
}

[ENABLE]
aobscanmodule(polofAOB,NMS.exe,C3 48 3B 05 ** ** ** ** 0F 94 C0 48 83 C4 20 5B)
registersymbol(polofAOB)

polofAOB+8:
db 90 90 90

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
polofAOB+8:
sete al
//Alt: db 0F 94 C0 48 83 C4 20
unregistersymbol(polofAOB)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8242</ID>
              <Description>"One Hit Kill"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-08-06
  Author : Squall8

  2018-08-15: v1.55, added more resistent pattern by Igromanru
}

[ENABLE]

aobscanmodule(ohk,NMS.exe,89 8E ? ? ? ? B3 01 88 9D ? ? ? ? 8B 8E)
alloc(newmem,$100,ohk)

label(code)
label(return)

registersymbol(ohk)

newmem:
  mov ecx,[rsi+000001C0]

code:
  mov [rsi+000001C4],ecx
  jmp return

ohk:
  jmp newmem
  nop
return:

[DISABLE]

ohk:
  mov [rsi+000001C4],ecx

unregistersymbol(ohk)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8157</ID>
              <Description>"Stack Mods"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>8156</ID>
                  <Description>"Element Stack"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-26
  Author : MojoW (Findings) / Squall8 (Clean Up)
}

[ENABLE]

aobscanmodule(moreINV,NMS.exe,69 C0 FA 00 00 00 89)
registersymbol(moreINV)

moreINV:
  db 69 C0 50 C3 00 00

aobscanmodule(maxSlotReset,NMS.exe,69 C0 FA 00 00 00 E9)
registersymbol(maxSlotReset)

maxSlotReset:
  db 69 C0 50 C3 00 00

aobscanmodule(TransferSize,NMS.exe,69 D8 FA 00 00 00)
registersymbol(TransferSize)

TransferSize:
  db 69 D8 50 C3 00 00

aobscanmodule(refFix,NMS.exe,69 C0 FA 00 00 00 EB)
registersymbol(refFix)

refFix:

  db 69 C0 50 C3 00 00

[DISABLE]

moreINV:
  db 69 C0 FA 00 00 00

unregistersymbol(moreINV)

maxSlotReset:
  db 69 C0 FA 00 00 00

unregistersymbol(maxSlotReset)

TransferSize:
  db 69 D8 FA 00 00 00

unregistersymbol(TransferSize)

refFix:
 db 69 C0 FA 00 00 00

unregistersymbol(refFix)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>8159</ID>
                  <Description>"Product Stack"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-26
  Author : MojoW (Findings) / Squall8 (Clean Up)
}

[ENABLE]

aobscanmodule(products,NMS.exe,0F AF 87 ? ? ? ? EB 0D)
alloc(newmem,$200,products)

label(code)
label(return)
label(productsBackup)

newmem:
  cmp [rdx],'AMMO'
  jne code
  imul eax,eax
  jmp return

code:
  imul eax,[rdi+000000CC],73
  jmp return

productsBackup:
  readMem(products, 7)

products:
  jmp newmem
  nop
  nop
return:
registersymbol(products)
registersymbol(productsBackup)

[DISABLE]

products:
  readMem(productsBackup, 7)

unregistersymbol(products)
unregistersymbol(productsBackup)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8062</ID>
              <Description>"Bypass Locks"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(bypasslock,NMS.exe,83 79 28 00 7E 12)
registersymbol(bypasslock)

bypasslock:
  db 90 90 90 90

[DISABLE]

bypasslock:
  db 83 79 28 00

unregistersymbol(bypasslock)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8211</ID>
              <Description>"Universal Translator"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-27
  Author : Cedric

  2018-10-05: v1.63 changed AOB to decoede all words. by Squall8
}

[ENABLE]

aobscanmodule(translator,NMS.exe,75 E8 3? C0 84 C0 0F 84 AE 00 00 00)

translator:
  db 90 90 B0 01
registersymbol(translator)

[DISABLE]

translator:
  db 75 E8 32 C0

unregistersymbol(translator)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+EB3200

"NMS.exe"+EB31DC: 74 22                 -  je NMS.exe+EB3200
"NMS.exe"+EB31DE: 48 8B 44 24 38        -  mov rax,[rsp+38]
"NMS.exe"+EB31E3: 4C 8B 44 24 30        -  mov r8,[rsp+30]
"NMS.exe"+EB31E8: 4C 39 01              -  cmp [rcx],r8
"NMS.exe"+EB31EB: 75 0A                 -  jne NMS.exe+EB31F7
"NMS.exe"+EB31ED: 48 39 41 08           -  cmp [rcx+08],rax
"NMS.exe"+EB31F1: 0F 84 B6 00 00 00     -  je NMS.exe+EB32AD
"NMS.exe"+EB31F7: 48 83 C1 18           -  add rcx,18
"NMS.exe"+EB31FB: 48 3B CA              -  cmp rcx,rdx
"NMS.exe"+EB31FE: 75 E8                 -  jne NMS.exe+EB31E8
// ---------- INJECTING HERE ----------
"NMS.exe"+EB3200: 32 C0                 -  xor al,al
"NMS.exe"+EB3202: 84 C0                 -  test al,al
"NMS.exe"+EB3204: 0F 84 AE 00 00 00     -  je NMS.exe+EB32B8
// ---------- DONE INJECTING  ----------
"NMS.exe"+EB320A: 48 8D 05 6F 73 E4 00  -  lea rax,[NMS.exe+1CFA580]
"NMS.exe"+EB3211: C6 45 50 00           -  mov byte ptr [rbp+50],00
"NMS.exe"+EB3215: 48 89 44 24 40        -  mov [rsp+40],rax
"NMS.exe"+EB321A: 4C 8D 4D 80           -  lea r9,[rbp-80]
"NMS.exe"+EB321E: 48 8D 05 57 73 E4 00  -  lea rax,[NMS.exe+1CFA57C]
"NMS.exe"+EB3225: 48 89 44 24 48        -  mov [rsp+48],rax
"NMS.exe"+EB322A: 48 8D 15 2F 14 E8 00  -  lea rdx,[NMS.exe+1D34660]
"NMS.exe"+EB3231: 48 8D 05 40 73 E4 00  -  lea rax,[NMS.exe+1CFA578]
"NMS.exe"+EB3238: 48 89 44 24 50        -  mov [rsp+50],rax
"NMS.exe"+EB323D: 48 8D 4D 50           -  lea rcx,[rbp+50]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8244</ID>
              <Description>"Always Summon Freighter Battle"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-08-05
  Author : Cedric

  Always summons freighter battle after teleport

  2018-08-15: v1.55 added AOB from Cedric. by Igromanru
  2018-08-24: v1.57 fixed AOB. by Igromanru
}

[ENABLE]

aobscanmodule(alwaysbattle,NMS.exe,75 27 48 8B 0D ? ? ? ? 48 81 C1 ? ? ? ? E8)

alwaysbattle:
  db 90 90
registersymbol(alwaysbattle)

[DISABLE]

alwaysbattle:
  db 75 27

unregistersymbol(alwaysbattle)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+7D9E58

"NMS.exe"+7D9E26: 0F B7 05 DF 64 52 01           -  movzx eax,word ptr [NMS.exe+1D0030C]
"NMS.exe"+7D9E2D: 66 89 45 F4                    -  mov [rbp-0C],ax
"NMS.exe"+7D9E31: FF 15 31 C5 35 01              -  call qword ptr [NMS.exe+1B36368]
"NMS.exe"+7D9E37: 48 8B 0D 0A 50 DB 01           -  mov rcx,[NMS.exe+258EE48]
"NMS.exe"+7D9E3E: 4C 8D 4D 28                    -  lea r9,[rbp+28]
"NMS.exe"+7D9E42: 48 81 C1 C8 37 03 00           -  add rcx,000337C8
"NMS.exe"+7D9E49: 4C 8D 45 D8                    -  lea r8,[rbp-28]
"NMS.exe"+7D9E4D: 48 8D 55 E8                    -  lea rdx,[rbp-18]
"NMS.exe"+7D9E51: E8 3A B1 E1 FF                 -  call NMS.exe+5F4F90
"NMS.exe"+7D9E56: 85 C0                          -  test eax,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+7D9E58: 75 27                          -  jne NMS.exe+7D9E81
"NMS.exe"+7D9E5A: 48 8B 0D E7 4F DB 01           -  mov rcx,[NMS.exe+258EE48]
// ---------- DONE INJECTING  ----------
"NMS.exe"+7D9E61: 48 81 C1 00 73 37 00           -  add rcx,00377300
"NMS.exe"+7D9E68: E8 53 8F FA FF                 -  call NMS.exe+782DC0
"NMS.exe"+7D9E6D: 84 C0                          -  test al,al
"NMS.exe"+7D9E6F: 75 10                          -  jne NMS.exe+7D9E81
"NMS.exe"+7D9E71: F7 05 D9 4F DB 01 FD FF FF FF  -  test [NMS.exe+258EE54],FFFFFFFD
"NMS.exe"+7D9E7B: 74 04                          -  je NMS.exe+7D9E81
"NMS.exe"+7D9E7D: B2 01                          -  mov dl,01
"NMS.exe"+7D9E7F: EB 02                          -  jmp NMS.exe+7D9E83
"NMS.exe"+7D9E81: 32 D2                          -  xor dl,dl
"NMS.exe"+7D9E83: 48 8B 0D BE 4F DB 01           -  mov rcx,[NMS.exe+258EE48]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8373</ID>
              <Description>"Summon Freighter Anywhere (ignore red and portal interference)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-09-14
  Author : Igromanru

  Summon Freighter Anywhere, ignores red restriction and portal interference
}

[ENABLE]

aobscanmodule(sumFreighterInRed, NMS.exe, 84 C0 74 42 44 89 6C 24)

sumFreighterInRed:
  db 90 90 90 90

registersymbol(sumFreighterInRed)

[DISABLE]

sumFreighterInRed:
  db 84 C0 74 42

unregistersymbol(sumFreighterInRed)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+1254292

"NMS.exe"+125425F: 75 1C                    -  jne NMS.exe+125427D
"NMS.exe"+1254261: 48 8D 8E F4 00 00 00     -  lea rcx,[rsi+000000F4]
"NMS.exe"+1254268: 48 8D 15 A1 52 B0 00     -  lea rdx,[NMS.exe+1D59510]
"NMS.exe"+125426F: 48 3B D1                 -  cmp rdx,rcx
"NMS.exe"+1254272: 0F 84 BF 00 00 00        -  je NMS.exe+1254337
"NMS.exe"+1254278: E9 AF 00 00 00           -  jmp NMS.exe+125432C
"NMS.exe"+125427D: 48 81 C1 90 08 02 00     -  add rcx,00020890
"NMS.exe"+1254284: 48 8D 95 E0 06 00 00     -  lea rdx,[rbp+000006E0]
"NMS.exe"+125428B: E8 30 C3 62 FF           -  call NMS.exe+8805C0
// ---------- INJECTING HERE ----------
"NMS.exe"+1254290: 84 C0                    -  test al,al
"NMS.exe"+1254292: 74 42                    -  je NMS.exe+12542D6
// ---------- DONE INJECTING  ----------
"NMS.exe"+1254294: 44 89 6C 24 38           -  mov [rsp+38],r13d
"NMS.exe"+1254299: 4C 89 6C 24 30           -  mov [rsp+30],r13
"NMS.exe"+125429E: 44 89 6C 24 28           -  mov [rsp+28],r13d
"NMS.exe"+12542A3: 4C 89 6C 24 20           -  mov [rsp+20],r13
"NMS.exe"+12542A8: 45 33 C9                 -  xor r9d,r9d
"NMS.exe"+12542AB: 45 33 C0                 -  xor r8d,r8d
"NMS.exe"+12542AE: 48 8B D3                 -  mov rdx,rbx
"NMS.exe"+12542B1: B9 9C BC F4 AE           -  mov ecx,AEF4BC9C
"NMS.exe"+12542B6: E8 95 E7 4C 00           -  call NMS.exe+1722A50
"NMS.exe"+12542BB: 48 8B 0D 96 77 34 01     -  mov rcx,[NMS.exe+259BA58]
"NMS.exe"+12542C2: 48 81 C1 90 08 02 00     -  add rcx,00020890
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8245</ID>
              <Description>"Kill All Pirates"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-08-05
  Author : Cedric

  Instantly kills pirate ships
}

[ENABLE]

aobscanmodule(killpirates,NMS.exe,41 2B 96 C4 01 00 00) // should be unique
alloc(newmem,$1000,"NMS.exe"+A69896)

label(code)
label(return)

newmem:
  mov [r14+000001C4], edx

code:
  sub edx,[r14+000001C4]
  jmp return

killpirates:
  jmp newmem
  nop
  nop
return:
registersymbol(killpirates)

[DISABLE]

killpirates:
  db 41 2B 96 C4 01 00 00

unregistersymbol(killpirates)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+A69896

"NMS.exe"+A6986D: 4A 8B 0C E9                 -  mov rcx,[rcx+r13*8]
"NMS.exe"+A69871: E8 EA 80 FC FF              -  call NMS.exe+A31960
"NMS.exe"+A69876: 4C 8B F0                    -  mov r14,rax
"NMS.exe"+A69879: 48 85 C0                    -  test rax,rax
"NMS.exe"+A6987C: 0F 84 FB 02 00 00           -  je NMS.exe+A69B7D
"NMS.exe"+A69882: 8B 80 C0 01 00 00           -  mov eax,[rax+000001C0]
"NMS.exe"+A69888: F3 0F 10 25 3C 78 30 01     -  movss xmm4,[NMS.exe+1D710CC]
"NMS.exe"+A69890: 85 C0                       -  test eax,eax
"NMS.exe"+A69892: 7E 43                       -  jle NMS.exe+A698D7
"NMS.exe"+A69894: 8B D0                       -  mov edx,eax
// ---------- INJECTING HERE ----------
"NMS.exe"+A69896: 41 2B 96 C4 01 00 00        -  sub edx,[r14+000001C4]
// ---------- DONE INJECTING  ----------
"NMS.exe"+A6989D: B9 00 00 00 00              -  mov ecx,00000000
"NMS.exe"+A698A2: 0F 49 CA                    -  cmovns ecx,edx
"NMS.exe"+A698A5: 66 0F 6E C9                 -  movd xmm1,ecx
"NMS.exe"+A698A9: 0F 5B C9                    -  cvtdq2ps xmm1,xmm1
"NMS.exe"+A698AC: 66 0F 6E C0                 -  movd xmm0,eax
"NMS.exe"+A698B0: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
"NMS.exe"+A698B3: F3 0F 5E C8                 -  divss xmm1,xmm0
"NMS.exe"+A698B7: 41 0F 2F CB                 -  comiss xmm1,xmm11
"NMS.exe"+A698BB: 77 0B                       -  ja NMS.exe+A698C8
"NMS.exe"+A698BD: 41 0F 28 CB                 -  movaps xmm1,xmm11
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8190</ID>
              <Description>"Teleport To Custom Marker"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-29
  Author : Squall8
}

[ENABLE]

aobscanmodule(getcmdata,NMS.exe,F3 44 0F 10 99 C4 13 00 00)
alloc(newmem,$1000,getcmdata)

label(code)
label(return)
label(cmX)
label(cmY)
label(cmZ)

registersymbol(getcmdata)
registersymbol(cmX)
registersymbol(cmY)
registersymbol(cmZ)

aobscanmodule(pcoords,NMS.exe,41 0F 10 00 0F 11 42 20)
alloc(newmem2,$1000,pcoords)

label(code2)
label(return2)
label(pcoordsp)
label(ttcmf)

registersymbol(pcoords)
registersymbol(pcoordsp)
registersymbol(ttcmf)

newmem:
  cmp [rcx+00001394],1
  jne code
  {cmp [rcx+1053],'Cust'
  jne code
  cmp qword ptr [rcx+1053],'Custom M'
  jne code}
  movss xmm11,[rcx+000013C4]
  fld [rcx+000013C0]
  fstp [cmX]
  fld [rcx+000013C4]
  fstp [cmY]
  fld [rcx+000013C8]
  fstp [cmZ]
  jmp return

code:
  movss xmm11,[rcx+000013C4]
  jmp return

cmX:
  dq 0

cmY:
  dq 0

cmZ:
  dq 0

newmem2:
  cmp [r8+0C],(float)0.1
  jne code2
  {cmp [r8+2C],2
  jne code2
  cmp [r8+(70-78)],0
  jne code2
  cmp [r8+(A0-A4)],0
  jne code2}
  mov [pcoordsp],r8
  cmp [ttcmf],1
  jne code2
  movups xmm0,[r8]
  movups [rdx+20],xmm0
  fld [cmX]
  fstp [r8]
  fld [cmY]
  fstp [r8+04]
  fld [cmZ]
  fstp [r8+08]
  mov [ttcmf],0
  jmp return2

code2:
  movups xmm0,[r8]
  movups [rdx+20],xmm0
  jmp return2

pcoordsp:
  dq 0

ttcmf:
  dq 0

getcmdata:
  jmp newmem
  nop
  nop
  nop
  nop
return:

pcoords:
  jmp newmem2
  nop
  nop
  nop
return2:

[DISABLE]

getcmdata:
  db F3 44 0F 10 99 C4 13 00 00

unregistersymbol(getcmdata)
unregistersymbol(cmX)
unregistersymbol(cmY)
unregistersymbol(cmZ)
dealloc(newmem)

pcoords:
  db 41 0F 10 00 0F 11 42 20

unregistersymbol(pcoords)
unregistersymbol(pcoordsp)
unregistersymbol(ttcmf)
dealloc(newmem2)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8202</ID>
                  <Description>"Teleport To Custom Marker (Hotkey - Tilde Key)"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>ttcmf</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys>
                        <Key>192</Key>
                      </Keys>
                      <Value>1</Value>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
                <CheatEntry>
                  <ID>8201</ID>
                  <Description>"Debug"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>8191</ID>
                      <Description>"Pos X"</Description>
                      <VariableType>Float</VariableType>
                      <Address>pcoordsp</Address>
                      <Offsets>
                        <Offset>0</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8192</ID>
                      <Description>"Pos Y"</Description>
                      <VariableType>Float</VariableType>
                      <Address>pcoordsp</Address>
                      <Offsets>
                        <Offset>4</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8193</ID>
                      <Description>"Pos Z"</Description>
                      <VariableType>Float</VariableType>
                      <Address>pcoordsp</Address>
                      <Offsets>
                        <Offset>8</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8198</ID>
                      <Description>"Stored CM X"</Description>
                      <VariableType>Float</VariableType>
                      <Address>cmX</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8199</ID>
                      <Description>"Stored CM Y"</Description>
                      <VariableType>Float</VariableType>
                      <Address>cmY</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>8200</ID>
                      <Description>"Stored CM Z"</Description>
                      <VariableType>Float</VariableType>
                      <Address>cmZ</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>8203</ID>
          <Description>"Ignore"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FFFFFF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>8175</ID>
              <Description>"Get Player Coords"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-29
  Author : Squall8
}

[ENABLE]

aobscanmodule(pcoords,NMS.exe,41 0F 10 00 0F 11 42 20)
alloc(newmem,$1000,pcoords)

label(code)
label(return)
label(pcoordsp)

registersymbol(pcoords)
registersymbol(pcoordsp)

newmem:
  cmp [r8+0C],(float)0.1
  jne code
  {cmp [r8+2C],2
  jne code
  cmp [r8+(70-78)],0
  jne code
  cmp [r8+(A0-A4)],0
  jne code}
  mov [pcoordsp],r8

code:
  movups xmm0,[r8]
  movups [rdx+20],xmm0
  jmp return

pcoordsp:
  dq 0

pcoords:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

pcoords:
  db 41 0F 10 00 0F 11 42 20

unregistersymbol(pcoords)
unregistersymbol(pcoordsp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8176</ID>
                  <Description>"X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pcoordsp</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8178</ID>
                  <Description>"Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pcoordsp</Address>
                  <Offsets>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8177</ID>
                  <Description>"Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>pcoordsp</Address>
                  <Offsets>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8179</ID>
              <Description>"Get Ret Data (Object Collisions Only)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-29
  Author : Squall8
}

[ENABLE]

aobscanmodule(getretdata,NMS.exe,48 F3 0F 11 46 18)
alloc(newmem,$1000,getretdata)

label(code)
label(return)
label(retp)

registersymbol(getretdata)
registersymbol(retp)

newmem:
  mov [retp],rsi

code:
  movss [rsi+18],xmm0
  jmp return

retp:
  dq 0

getretdata+01:
  jmp newmem
return:

[DISABLE]

getretdata+01:
  db F3 0F 11 46 18

unregistersymbol(getretdata)
unregistersymbol(retp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8180</ID>
                  <Description>"X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retp</Address>
                  <Offsets>
                    <Offset>10</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8181</ID>
                  <Description>"Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retp</Address>
                  <Offsets>
                    <Offset>14</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8182</ID>
                  <Description>"Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>retp</Address>
                  <Offsets>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8186</ID>
              <Description>"Get Custom Marker Data (Backup)"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-29
  Author : Squall8
}

[ENABLE]

aobscanmodule(getcmdata,NMS.exe,F3 44 0F 10 99 C4 13 00 00)
alloc(newmem,$1000,getcmdata)

label(code)
label(return)
label(cmarkp)

registersymbol(getcmdata)
registersymbol(cmarkp)

newmem:
  cmp [rcx+00001394],1
  jne code
  {cmp [rcx+1053],'Cust'
  jne code
  cmp qword ptr [rcx+1053],'Custom M'
  jne code}
  mov [cmarkp],rcx

code:
  movss xmm11,[rcx+000013C4]
  jmp return

cmarkp:
  dq 0

getcmdata:
  jmp newmem
  nop
  nop
  nop
  nop
return:

[DISABLE]

getcmdata:
  db F3 44 0F 10 99 C4 13 00 00

unregistersymbol(getcmdata)
unregistersymbol(cmarkp)
dealloc(newmem)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>8187</ID>
                  <Description>"X"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cmarkp</Address>
                  <Offsets>
                    <Offset>13C0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8188</ID>
                  <Description>"Y"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cmarkp</Address>
                  <Offsets>
                    <Offset>13C4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>8189</ID>
                  <Description>"Z"</Description>
                  <VariableType>Float</VariableType>
                  <Address>cmarkp</Address>
                  <Offsets>
                    <Offset>13C8</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>8074</ID>
              <Description>"Ignore Crafting Requirements (Base Building)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8
}

[ENABLE]

aobscanmodule(icrbb1,NMS.exe,00 8B 01 41 3B C3 75 18 4C 3B 49 08 75 12 4C 3B 51 10 75 0C 83 F8 01)
registersymbol(icrbb1)

icrbb1+06:
  db 90 90

icrbb1+0C:
  db 90 90

icrbb1+12:
  db 90 90

aobscanmodule(icrbb4,NMS.exe,75 1A 48 3B 59 08)
registersymbol(icrbb4)

icrbb4:
  db 90 90

aobscanmodule(icrbb5,NMS.exe,75 14 48 3B 79 10)
registersymbol(icrbb5)

icrbb5:
  db 90 90

aobscanmodule(icrbb6,NMS.exe,75 0E 83 F8 01)
registersymbol(icrbb6)

icrbb6:
  db 90 90

aobscanmodule(icrbb7,NMS.exe,EB 04 44 03 51 18)
registersymbol(icrbb7)

icrbb7:
  db 90 90

[DISABLE]

icrbb1+06:
  db 75 18

icrbb1+0C:
  db 75 12

icrbb1+12:
  db 75 0C

unregistersymbol(icrbb1)

icrbb4:
  db 75 1A

unregistersymbol(icrbb4)

icrbb5:
  db 75 14

unregistersymbol(icrbb5)

icrbb6:
  db 75 0E

unregistersymbol(icrbb6)

icrbb7:
  db EB 04

unregistersymbol(icrbb7)

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8016</ID>
              <Description>"Inf Launch Thrusters"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8
}

[ENABLE]

aobscanmodule(inflt,NMS.exe,89 4B 18 48 8B D3)
registersymbol(inflt)

inflt:
  db 90 90 90

aobscanmodule(inflt2,NMS.exe,89 47 18 44 89 6C 24 38)
registersymbol(inflt2)

inflt2:
  db 90 90 90

[DISABLE]

inflt:
  db 89 4B 18

unregistersymbol(inflt)

inflt2:
  db 89 47 18

unregistersymbol(inflt2)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8384</ID>
              <Description>"Access Galaxy Map Anywhere (M Hotkey)"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-09-22
  Author : Igromanru

  Access Galaxy Map Anywhere with Game Hotkey (default M)
  ignores portal interference, battles etc.
}

[ENABLE]


aobscanmodule(galaxyMapAnywhere,NMS.exe,0F B6 44 24 ? 88 44 24 3D 48 8D 0D )
alloc(galaxyMapAnywhereBackup,$16,galaxyMapAnywhere)

galaxyMapAnywhereBackup:
  ReadMem(galaxyMapAnywhere+2C, 2)

galaxyMapAnywhere+2C:
  nop
  nop


registersymbol(galaxyMapAnywhere)
registersymbol(galaxyMapAnywhereBackup)

[DISABLE]

galaxyMapAnywhere+2C:
  ReadMem(galaxyMapAnywhereBackup, 2)

dealloc(galaxyMapAnywhereBackup)
unregistersymbol(galaxyMapAnywhere)
unregistersymbol(galaxyMapAnywhereBackup)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+5C4E20

"NMS.exe"+5C4DED: 75 07                    -  jne NMS.exe+5C4DF6
"NMS.exe"+5C4DEF: C6 44 24 3B 01           -  mov byte ptr [rsp+3B],01
"NMS.exe"+5C4DF4: EB 05                    -  jmp NMS.exe+5C4DFB
"NMS.exe"+5C4DF6: C6 44 24 3B 00           -  mov byte ptr [rsp+3B],00
"NMS.exe"+5C4DFB: 0F B6 44 24 3B           -  movzx eax,byte ptr [rsp+3B]
"NMS.exe"+5C4E00: 88 44 24 3D              -  mov [rsp+3D],al
"NMS.exe"+5C4E04: 48 8D 0D 65 8A 01 02     -  lea rcx,[NMS.exe+25DD870]
"NMS.exe"+5C4E0B: E8 60 8E EE FF           -  call NMS.exe+4ADC70
"NMS.exe"+5C4E10: 48 89 84 24 30 07 00 00  -  mov [rsp+00000730],rax
"NMS.exe"+5C4E18: 48 8B 84 24 30 07 00 00  -  mov rax,[rsp+00000730]
"NMS.exe"+5C4E20: 83 B8 90 A1 1F 00 05     -  cmp dword ptr [rax+001FA190],05
// ---------- INJECTING HERE ----------
"NMS.exe"+5C4E27: 74 07                    -  je NMS.exe+5C4E30
// ---------- DONE INJECTING  ----------
"NMS.exe"+5C4E29: C6 44 24 3C 01           -  mov byte ptr [rsp+3C],01
"NMS.exe"+5C4E2E: EB 05                    -  jmp NMS.exe+5C4E35
"NMS.exe"+5C4E30: C6 44 24 3C 00           -  mov byte ptr [rsp+3C],00
"NMS.exe"+5C4E35: 0F B6 44 24 3C           -  movzx eax,byte ptr [rsp+3C]
"NMS.exe"+5C4E3A: 85 C0                    -  test eax,eax
"NMS.exe"+5C4E3C: 74 05                    -  je NMS.exe+5C4E43
"NMS.exe"+5C4E3E: C6 44 24 3D 01           -  mov byte ptr [rsp+3D],01
"NMS.exe"+5C4E43: 0F B6 44 24 3D           -  movzx eax,byte ptr [rsp+3D]
"NMS.exe"+5C4E48: 85 C0                    -  test eax,eax
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8385</ID>
              <Description>"Igromanru's"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>8059</ID>
                  <Description>"Ignore Crafting Requirements (Non Base Building)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-24
  Author : Squall8

  2018-08-30: v1.58 fixed and made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(itr,NMS.exe,0F B6 C3 48 8B 5C 24 ? 48 8B 6C 24 ? 48 8B B4 24 ? ? ? ? 48 83 C4 40)
alloc(newmem,$100,itr)
alloc(itrBackup,$16,itr)

label(code)
label(return)

registersymbol(itr)
registersymbol(itrBackup)

aobscanmodule(ipr,NMS.exe,F3 0F 7F 44 24 ? 48 89 75 87)
alloc(newmem2,$100,ipr)
alloc(iprBackup,$26,ipr)

label(code2)
label(return2)

registersymbol(ipr)
registersymbol(iprBackup)

itrBackup:
  readMem(itr, 8)

iprBackup:
  readMem(ipr, 10)

newmem:

code:
  mov bl,01
  readMem(itr, 8)
  jmp return

newmem2:

code2:
  readMem(ipr, 10)
  mov bl,01
  jmp return2

itr:
  jmp newmem
  nop
  nop
  nop
return:

ipr:
  jmp newmem2
  nop
  nop
  nop
  nop
  nop
return2:

[DISABLE]

itr:
  readMem(itrBackup, 8)

dealloc(newmem)
dealloc(itrBackup)
unregistersymbol(itr)
unregistersymbol(itrBackup)

ipr:
  readMem(iprBackup, 10)

dealloc(newmem2)
dealloc(iprBackup)
unregistersymbol(ipr)
unregistersymbol(iprBackup)

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>8070</ID>
                  <Description>"Ignore Materials For Damaged Components"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-07-25
  Author : Squall8

  2018-08-30: v1.58 fixed and made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(imdc1,NMS.exe,F3 0F 2C C0 3B E8 0F 8C ? ? ? ? B8)
alloc(imdc1Backup,$16,imdc1)

registersymbol(imdc1)
registersymbol(imdc1Backup)

imdc1Backup:
  readMem(imdc1+6, 6)

imdc1+6:
  db 90 90 90 90 90 90

aobscanmodule(imdc2,NMS.exe,0F 8C ? ? ? ? 48 C7 44 24 ? ? ? ? ? 48 C7 44 24)
alloc(imdc2Backup,$16,imdc2)

registersymbol(imdc2)
registersymbol(imdc2Backup)

imdc2Backup:
  readMem(imdc2, 6)

imdc2:
  db 90 90 90 90 90 90

[DISABLE]

imdc1+6:
  readMem(imdc1Backup,6)

dealloc(imdc1Backup)
unregistersymbol(imdc1Backup)
unregistersymbol(imdc1)

imdc2:
  readMem(imdc2Backup,6)

dealloc(imdc2Backup)
unregistersymbol(imdc2Backup)
unregistersymbol(imdc2)

</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>8369</ID>
                  <Description>"Ignore Crafting Requirements for Base Building"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-09-12
  Author : Igromanru

  Ignore Crafting Requirements for Base Building
}

[ENABLE]

aobscanmodule(icrBase, NMS.exe, 8B 01 41 3B C1 75 1A)
aobscanmodule(icrBaseNext, NMS.exe, 44 03 51 18)
alloc(icrBaseBackup, $16, icrBase)

icrBaseBackup:
  readMem(icrBase, 5)

icrBase:
  jmp icrBaseNext

registersymbol(icrBase)
registersymbol(icrBaseNext)
registersymbol(icrBaseBackup)

[DISABLE]

icrBase:
  readMem(icrBaseBackup, 5)

unregistersymbol(icrBase)
unregistersymbol(icrBaseNext)
unregistersymbol(icrBaseBackup)

{
// ORIGINAL CODE - INJECTION POINT: "NMS.exe"+7CB4F0

"NMS.exe"+7CB4CF: 74 55                          -  je NMS.exe+7CB526
"NMS.exe"+7CB4D1: 41 8B 13                       -  mov edx,[r11]
"NMS.exe"+7CB4D4: 49 8B CD                       -  mov rcx,r13
"NMS.exe"+7CB4D7: 45 33 D2                       -  xor r10d,r10d
"NMS.exe"+7CB4DA: E8 41 5E 00 00                 -  call NMS.exe+7D1320
"NMS.exe"+7CB4DF: 48 8B 50 50                    -  mov rdx,[rax+50]
"NMS.exe"+7CB4E3: 48 8B 48 48                    -  mov rcx,[rax+48]
"NMS.exe"+7CB4E7: 48 3B CA                       -  cmp rcx,rdx
"NMS.exe"+7CB4EA: 74 2E                          -  je NMS.exe+7CB51A
"NMS.exe"+7CB4EC: 0F 1F 40 00                    -  nop [rax+00]
// ---------- INJECTING HERE ----------
"NMS.exe"+7CB4F0: 8B 01                          -  mov eax,[rcx]
"NMS.exe"+7CB4F2: 41 3B C1                       -  cmp eax,r9d
// ---------- DONE INJECTING  ----------
"NMS.exe"+7CB4F5: 75 1A                          -  jne NMS.exe+7CB511
"NMS.exe"+7CB4F7: 48 3B 59 08                    -  cmp rbx,[rcx+08]
"NMS.exe"+7CB4FB: 75 14                          -  jne NMS.exe+7CB511
"NMS.exe"+7CB4FD: 48 3B 79 10                    -  cmp rdi,[rcx+10]
"NMS.exe"+7CB501: 75 0E                          -  jne NMS.exe+7CB511
"NMS.exe"+7CB503: 83 F8 01                       -  cmp eax,01
"NMS.exe"+7CB506: 75 05                          -  jne NMS.exe+7CB50D
"NMS.exe"+7CB508: 41 FF C2                       -  inc r10d
"NMS.exe"+7CB50B: EB 04                          -  jmp NMS.exe+7CB511
"NMS.exe"+7CB50D: 44 03 51 18                    -  add r10d,[rcx+18]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>7992</ID>
              <Description>"Inf Jetpack Old"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version:
  Date   : 2018-07-24
  Author : Cedric

  Jetpack Amount / Float / 0 - 2.75 (dec) (can be bigger than 2,75 with upgrades)

  2018-08-19: v1.57 made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(infjetpack,NMS.exe,F3 0F 5C C1 F3 0F 11 87 ? ? ? ? EB 08)
alloc(infjetpackBackup,$16,infjetpack)

registersymbol(infjetpack)
registersymbol(infjetpackBackup)

infjetpackBackup:
  readMem(infjetpack, 4)

infjetpack:
  db 90 90 90 90

[DISABLE]

infjetpack:
  readMem(infjetpackBackup, 4)

dealloc(infjetpackBackup)
unregistersymbol(infjetpack)
unregistersymbol(infjetpackBackup)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8039</ID>
              <Description>"Inf Health"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : NMS.exe
  Version: 
  Date   : 2018-10-05
  Author : Squall8

  2018-10-31: v1.70 made more update persistent. by Igromanru
}

[ENABLE]

aobscanmodule(infhealthScan,NMS.exe,0F 4D C8 48 FF 86 ? ? ? ? 89 8E ? ? ? ? E9)
define(infhealth,infhealthScan+A)
alloc(infhealthBackup,$16,infhealth)
registersymbol(infhealth)
registersymbol(infhealthBackup)

infhealth:
  db 90 90 90 90 90 90

infhealthBackup:
  readMem(infhealth, 6)

[DISABLE]

infhealth:
  readMem(infhealthBackup, 6)

dealloc(infhealthBackup)
unregistersymbol(infhealth)
unregistersymbol(infhealthBackup)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :jg NMS.exe+121C750</Description>
      <Address>7FF6FDA0C73A</Address>
      <ModuleName>NMS.exe</ModuleName>
      <ModuleNameOffset>121C73A</ModuleNameOffset>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>7F</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C9</Byte>
        <Byte>48</Byte>
        <Byte>FF</Byte>
        <Byte>86</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmovge ecx,eax</Description>
      <Address>7FF6FDA0C757</Address>
      <ModuleName>NMS.exe</ModuleName>
      <ModuleNameOffset>121C757</ModuleNameOffset>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>3B</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>4D</Byte>
        <Byte>C8</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>FF</Byte>
        <Byte>86</Byte>
        <Byte>80</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>mmoney</Name>
      <Address>53157FBF10</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stackamt</Name>
      <Address>7FF787F8001B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>stackamt2</Name>
      <Address>7FF787F80013</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation</Name>
      <Address>7FF7EF159B87</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>health</Name>
      <Address>7FF726AA1297</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sprint</Name>
      <Address>7FF726AA4230</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>jetpack</Name>
      <Address>7FF726AA3A54</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>grenades</Name>
      <Address>7FF726AD350D</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>mb</Name>
      <Address>7FF726AD1A88</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>no</Name>
      <Address>7FF726ACF2A1</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ihd</Name>
      <Address>7FF726A6D2BF</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>pb</Name>
      <Address>7FF726BBEBF3</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ids</Name>
      <Address>7FF726AA12E9</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ieb</Name>
      <Address>7FF726BE7D5C</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>cGcProductTable_end</Name>
      <Address>7FF725DA1490</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>conversation2</Name>
      <Address>7FF7265CA042</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>maxboost</Name>
      <Address>7FF725D40C5B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minspeed</Name>
      <Address>7FF725D40C57</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>takeoff</Name>
      <Address>7FF725D40C53</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>overthruster</Name>
      <Address>7FF725D40C4F</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>oscillationAOB</Name>
      <Address>7FF726BB9939</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>takeoffAOB</Name>
      <Address>7FF726B8ACF0</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boostwaitAOB</Name>
      <Address>7FF726B7FC9B</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>boostaccelAOB</Name>
      <Address>7FF726B7FFB8</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>minspeedAOB</Name>
      <Address>7FF72606AC51</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>fov</Name>
      <Address>7FF7264C6E80</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>ammo</Name>
      <Address>7FF726AD3384</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>Credits:
Squall8 - Table creator
cedricvdg - For finding a way to implement mouse-over on elements and products
MojoW - For finding the location of stack instructions
cedricvdg - For Kill All Pirates and Always Summon Freighter Battle scripts
RaYRoD - No Pause On Loss Focus
igromanru - For several scripts and table maintenance
</Comments>
  <Signature>
    <SignedHash HashSize="132">0gEft+eDnpea60V]T8-pJx#e96*cL31dnfQu*PJkb{NA3Qix[*e;BQ/^JUUS+O=XIIS?2UR[rq,o6hW]@7.W-RfEqL)5RkcI()Qa^bOwb%J9)zIQ*a;n=/+DE{miDmj^G=wtkkB6YMav=%%R_:NziS9c)b)a:c#QIf)wN</SignedHash>
    <PublicKey Size="4763">6aWAKP.Yl-a%E(7VtF7+XL4[CVQzADi}s?vMMG0HLI3}(0Sb4F=bEq]p62pP4Hn9nEiy:B!;ItR%xr[wyK8!wor?#+IWu/6@YB%*bO3_$?kV,9;Yo@^pDDt0m(*])iwFT7O;F4,6O(4*v,2wtPr/E(ATvKGT.N=z!.^S4ah)ZT3XO/MPXVEI+)_-FU3wj=FKMcczRoFc]8kySc4hHy1ZEKc0EtjeM-2*Z3IG5A4M_8uQUCw_7ytkO7zhFY003[ls.;Y53QuW6Lr[p=Z++@SXm4.JNkc.+aB@;EX;4Tx0C=J,Q*g6D:?vcr-t/CCh:7z!Z(DQqAW{k$fE1A=Dj@9FN^At$+%eX25k+A:8[1xD1CEY;j1@HV42lZa2jn55j*S9!ipu-pd!uXCy!YnK^/YUW:dAOcv)E;;2n=1.Gf[2w45;mM5#WQz#Kz(_E/k_[Bya![2)x4%bNwR$0Qi19JS!r:2fhFSc,)3A0KiR}z%U$#^{1XynOp(YgaN;GkvK}TfD]}gdX7S-06/0ofSs5oQvjd?0AR}wV(ec%EdXFAf9BHwfSvf6djSAjlpz%XppgI_6J;{+0BAb@tj_]8MF3bZ02F3R#5n-iEdVe^S7t}6u)trf(JYW-00.}KFj0twDF6g{0AR:=BX_IWnE)[/?;e_ZE3OddDgXd?nX*^(BsoQaTL;,22Uk{v9w@R97b[GtVFF;AKrX[0nHe(HG!NkO%m4tOkrff)gY+4)(JM25(Nhy:4qq,mzXtyzVq*X_//F}dKmY+YbbitPEHASffI9_(ZT[Mq=gVIF3!ruPi*OM9K)zp%;DpKGaQJ;aJVl_9x!Kv{/mA^(#6nwP%2$2/XTo2:SN({Hemwm5[29nZB!Mzrfky:R.KI!GOr.#pk[m*j,}$u+^I=7L^2kLG#7SbgSSl3bQ4);EM4F8AGNmGkLXs*PCDQ,7.?;R$13uq10I,I40eg]xs9j=N[Dd%aSaiVR[W%I$yKlkNC/p[9XoKO.cmMA^^YRiB0Dxvml5qe4UPL4:RLZkI#_QubM4+8xut6L2!5A#S1^{c!,]$X^U@aw8B+el)5JC!MfE.pQDXfA+D2C0j9V%ci*Ic3Hz*?)1lW-0$!d18qJ#Y^DVF.eVD7:9Q1VP9M6Ja6Rhyh{XSR.-I7nz0lA.Cxl5^o1t$%qtDB1?4qNHJ21R3KGI9r8VL0y(3VM!JzZ$N)}e^D!/oF[eL[Q9aZQwL]h6HyVUSq6@SubTOKb7NDEZa/m#fj5eX=)5q,/,K*a%$1uR=7zZ:NY%ngy!$Pq+ED4ii%dsM=46DW)uvV-CyNUH/(#]v_5]jg*2^r[GLLgxtK{c9kSWehTs3069G!fbfHwgoTQNkx8lc-CyCb_+%#28^SF@5:4EF.zuj{tEtdx%5CHzX2=Loz41kOE1uq+T%p)niv5QX{asshc!N8Y7d+,GK082RW21AS:j*/elWh/TK/O/RS7}3Y{s:aisWD.wVzeYDyX95al%G24$EsK}/xgQr*PbR1r0gT0+U%wo/QAho{:Yb)%TNgBD3krLCfs).8=OX!mKa:ybXf-IX3rm)W,z%jrkxm+?lZcMJ]N6?$l!XDAt*7zY=/8Fv]3m]tV[)}B9$R4[L(;zL:651DUOSSq$Ed:-))3YAKgCY2j1FI1[jrmEhm3sv)}%T$l4UQ;OpMpZLY/EaVMmaA2(olxsj8(hYgJE)]MXQ+#fKcs$H^fP!y!%V_ZL!=olv0vl7#vlu08MAmSA!]k+hIN58#3r%L+=e^=yO^kQyNf-lsi8STGfFd8vr[YvW/Lkxm}r?:bWRE9D5sb6eu}{^=/wLb8;Tc(xiMv2YpRx*mRPGut5K@+;%BIv=Wdily,ylO],+KY$4Vz$Cr4,G(IO)4Q]uA9rwXSQO,7mGt{d!.r5mBUM0dY#r_y]ZzFvTyOmC.(dA.ZQ9DOhSRQ,xGr{ak,SO(8UBnI0I(KNw!HF0k_9WTe+?liuv!$3o(VU:N+.e=U7)LAHoMvX:fjA[PP/0Rv4#%.!/CI%*UCQD7}P41dfO{VBiraMeKOvla4(7#fLnKhd_G1oHZo9CO=o8Px!T6kJ4wy3taWl6H,TBcd/w!ChIS}+#zSXEkGvqr6+ttHmGt-GfYr?2m)POF}QXTz{Zw#l{sw.8bI+aq9Kwr#e3VP_3(XSc/!!_s#4lYP2/jr}0b4Tsqds}uV$esi;P6gpNq-kQ#w=mvCS@p?![XIRe:(*75LwiC-K#A%(Vo6_;U7iYP1gY$?siA#dZE_*$on.XX6$i3uBboFsv.d.^botv_p!tJQrukJSPY3[(IpUgC$DV_v}bI]-cL+P.6)LW2Hl]w1HtbR^JPl0E):OZs.FOgTR+RZ#xcdGYc=-xGyK60PqKI1$$-ZI]/U)7eax5(54Ps4AXUxnX8e/S}7_9bz=0H:T?0cQh:fkA.:0^i%Sd=CM%KRVlG[OjXSL5!feK?}xdf}_t)!L1:@$n21/A?{E*(XLY)4uw#D:,?8(Vdi0r!,s1Wg?:V#hChyQh+%oYF[$%W)cD9G-$eREmPFp0XE9GXuPsV7Dn6/%YCPIEx-[}!#x7:A%,+,)SV=S4962s3t}PFLzTf:q@M}S^.tS)?7nm:_U2u7!(cgJCrxvL$5-d8FKum}EIF#?}5Gtq@j3x3DcO^MrdBPpSXCg1rHqnUKLtH8zPVz]9O=r}-k-Rl_B+inOEaka]C#jIUObtxkn;wBrnsy+/GCexIF?utkka0q*Ax*FEXX/C;W[HW0Wrec-#cqqYFCLW#$!oKatOZ#u3bsO}:u{!L+D43HXJuDrzs-rtIhL!QE6wf9v(!3$H:OUE_LqdO65+1zrG]saEge_qy^u_EvOIBl,X}_q1uKSD2CO]_inc0k*laMKSC[7Sy)W51Yk@,D%7VeQ0c-0ERSM.Wee2xU=Ojh.FInHUVfu!h8$K0?imnvf7nc:)+eKk1/r^{?%D/W1l)ea/#JOb8X3{Qq:H4xyTMm{0m+$raZVlPmv/:??wC)lwMcXfz%[!TugSJDtqrW]3yk*1!(dobNRHRh(RQgml=$X]0Vb{O;)e4_2y!JHg*!SRV[x)P{zS}s,RZZ1q*n*rh]=L2yu8FGY[=G*@U9C:SaqY)g)gXbmBM!FLxzyDi)mhmCkJc.eM-ImyzW$x;cP$Mz4ONYt#@NJzM0w:t[X+$k9t{F$c8q)h.Rn,nb^%IOFKR-X?_s4QQ:0o+Vq3aT%s$c9;fU/%N829^oHRUHc{nwC$!Xf?g42@^@3RN(m7RTlF8SPG,oHC6:VQ+[Y7cMkx*5}X)nbG@:R3SR(Rp]ibn;#;/r7!9SDLRnUv27i;OB6F)?*2^oV%K=xm.[x=s}noduI3P8:g1L-SoYA?fQEq*t*($-M#aAZ{-Lb[1[lVesU-M(da.mcPH,xyidGe@g!*F+,boj*jwPQ,{Q8je];(Yp!3n)NB0JWgU_kv@@Xrj1(@7J%Z3ex;z,71IXU7#a^cN2r$f)V(nBK1^-XZNt]]/Be*!ev+Ur)H)V;@{my@G3e5L+B!0Q;W,s4Ai9:@$VGcjKDR^QP2cieX!?1x%jPvm=ce/:TG]LXp:)5L(88IzO$1Ou4!^9]jM,W-InAY)^UO#lFTB;)[]g8%@e^^R4h:;PzAFaQARU.qF+m.eA5Z/1fdMgRZ=rb$FWRCwA1!Fx}=[W:Ol-_lZ.w_jdp=!f@E$XgBsR1{RGTCK*RHMZ4hO/SY3YOH3eHMYhvF_8ew^+k0iOzLFPbZX2/ZH%!9VXCI25hxD?/o(ukULMCixx0Pb=%r.^4[/zu[Tt[OhQSFEpSiy8!fU7e31r=k][HS#PVXpcZ5#UIPwKW6S}OL(.@6Do*+X4Nws$(pXm5SfhllHPb=?yivYJhEGJ}$NDU3/iG!R%^X5m(J?Bnwq!:b}!+tPTEiQ@6J/r{KjY[5]ceqWXIr-#0CsY6)]@G6SE^:WYyc/aVsw]h0+@z$*pe0(mK]]ymgY3^,$^MloB-{s;0;zRLHYvs8(FYJHuY,{yy$?yKEuQqRSq82C1I]ig(0w:Q8%I}J*af:b^;h)ydTDH1$q/aL7CM4F)*UVCocIZ@i%93EfU%hTk!gIf@:}j8Z/LZ?]gX@rB4ud7rJ}1-=bRpT=bT]*lH=Oa;vusg]]{Mca:TPcoGzCf4kcQNs8};MzEGClN^my}(hjuhxcrz3fR?kVza.m1xC6H]mXVAzhxT:i{c^jSutgHC:Z=F99#XS/F(tAMT:Z]}[Buy0NHWPy$q4C!3f)*s5Fq*WO;YffiTg22A6Cr=QW1/.JXp#6#Ao_rnfDpJF-wbC%f5ZD9x8Co@mZPdB!O^YIS+_^N$y;Djz@e6Yoy?#H.eR.6SJKKec2sAxV:O(C.xVFl9wj#oClf$FwXl=F4%Jn#X:CaB-9Ow1#xN5F+OfXcEWNeb+5CXfN...3s(}peIpZ(3i3%GNND9eV90Hw486:MPEeQ8!.}{1x5Xu]dTC%Ic_GB-V6wcxdeEaZo=_nHKR-]gBHP!bxmnKYcA.$m;1kIx9A^QQuN_KCXW[o-v1ykuVJ:z-/DIRraS]EQRj2s#h([8]OiQGB0BWAXDc[UkjRR@Qzr^_UBaBM-}HE1ibI/shQi4*}CmdVP_sK;)%d(RN;):,b.315K6Q=xPTvyP_RHkM/8Ox9OtlMb6CqP;1@7GzjDjZktZuv{m-gRDl(q7D#NBkEU8tpmQ7;I-,Rb:}RqleA7]%%jW5(2v8pCq/}Y,ArQ1G_{lJFK/8d#%H-KtY4X{swoVWMP5?7(0%EFbczoJ$9:LD#Y{o6z$5l-^g1D-Kfim@bDN4@_KOf*at0cl]TL*+yVTIEMn:!QyrsK*=AZc,+XWXh.%R_n7,PhlTrw3^jB9DlZX]yg!a3FXqtk*nlB{F8=Ay@}dDZH;z0;g3?7LAlW:MK]U@G-!kYTr2dfFdjv_i;V6P9*s+f?Y/79(m4IM60TlCiYHY#}1S.[.ai-{{RdZ5?NlhqqU)AVlb+i9^m$W#]D_O_@af/HvT[aDec^fX.whO$.duEGE/GctYS%1#f-ip)?w9b8O]]u7,zJh:w^cO!Kn:F(c$KGvPgTD;,#i[AKgYdTe3g/hy[MMdYuWT35OXKOdOw9bbGjofKs:ACv#y/vaSy$:VY8#rJPGO@m}7Z+CuBaNIzku*M4Wh3fho;qsbByMEn5NE#a%^pIoBT;Dph(o?2A+?eM4l{#}v0N=p^-;zdPe_7Zdmo7IDKyp^Qyo)45NIRuD@bE_.U;1YHvAIBklW0rf:?UoV9zKdL#!kF=]jxld.TIQvy{]{P?_k-+sH;p4?zW.+j{%4Pw4pA=lr:Ck*z(kpNunnZgA3sZf/gp@0;__Y4?VN^frCeBt0m8s/u0%M%bmNoo:miOp4weGcW)THC0H?R6DaoI2fZIPwzRbO.26HqmFo:$VX-}S7mCDr5kM]$CHtTBj!$=s0g3p-#d#_TRp{b(0_?%:xie0N;Felh^@It^(zrBewk!mLEJd%$%$kmc:VCDoN8;p)9apd+mmn_[s!C[*eTExOjyb.-$R$D4k%XSWKmOaND.-og7/X6a?!BE*K!,1}2FGkP.ad(?0I*2_qzcP1M5YK5QPQ%k0sxB23rJl1/a!5AV-P_N*p^l-$EJaj1}psVHme0e^Cbj[jw{fZ$LR2U,Kkj;yTV+t0ctXpP70z5R1]vnCiOJ+2ND1v0B8UJ0B][g007JA/,P%zil!lQTEz(w+kY+2FeAAc86:J)s/xa:q_zFOkrGf-qJpZ;p6MXj44Z,q8!Unbc$r%Y[?[KRf/zFYDVl[1FjJ=uVweWC^_@8RBRs:,E][ZC0000/MNUMnLSTY}00001=(=^]%NbEqj3SiMcvx*m!$A]py+^^pN1?_P]9D4bGhVyH)uX/+N*+J$PNQo6QV(59Bg#H^67;By3zOdrr}s8uv?9IGpB9%gBkj4m2jTiWEZ8U^$4uj7.}I3mw*wQpLR#cR:974x%Xx97?G)kb;kEI;fA6:2w7a/ZwHYD</PublicKey>
  </Signature>
</CheatTable>
