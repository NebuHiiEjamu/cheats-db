<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>3</ID>
      <Description>"enable"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
//vng21092's aobscan lua script
{$lua}

function lua_aobscan(name,module,bytes,index)
  index = index - 1
  if(module == "") then
    local resultSet = AOBScan(bytes)
      if(resultSet == nil) then
        unregisterSymbol(name)
        print(name.." not found")
      else
        unregisterSymbol(name)
        registerSymbol(name,resultSet[index])
        resultSet.destroy()
      end
  else
    if(getModuleSize(module) == nil) then
      print("Module "..module.." not found")
    else
      local memScanner = createMemScan()
      local memFoundList = createFoundList(memScanner)
      memScanner.firstScan(
        soExactValue,vtByteArray,rtRounded,bytes,nil,
        getAddress(module),(getAddress(module)+getModuleSize(module)),"",
        fsmNotAligned,"",true,false,false,false)
      memScanner.waitTillDone()
      memFoundList.initialize()
        if(memFoundList.Count == 0) then
          unregisterSymbol(name)
          print(name.." in module "..module.." not found")
        else
          unregisterSymbol(name)
          registerSymbol(name,memFoundList.Address[index])
        end
      memScanner.destroy()
      memFoundList.destroy()
    end
  end
end
{$asm}

///
aobscanmodule(controllingFlagReadAOB,Secret_of_Mana.exe,89 ** ** ** ** ** 8B ** ** ** ** ** 85 C0 74 ** 33 FF)
registersymbol(controllingFlagReadAOB)

///*************************************///
aobscanmodule(staminaChkFullAOB,Secret_of_Mana.exe,81 ** ** ** ** ** ** E8 03 00 00)
registersymbol(staminaChkFullAOB)

label(bInfStamina)
registersymbol(bInfStamina)

alloc(newmem,2048)
label(returnhere)
label(originalcode_maxstamina)
registersymbol(originalcode_maxstamina)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bInfStamina],1
jne @f
db 81
readmem(staminaChkFullAOB+1,10)
//cmp [ecx+eax+124],#1000
jge @f
db C7 84
readmem(staminaChkFullAOB+2,9)
//mov [ecx+eax+124],#1000

@@:

originalcode_maxstamina:
readmem(staminaChkFullAOB,11)
//cmp [ecx+eax+00000124],000003E8

exit:
jmp returnhere

///
bInfStamina:
///

staminaChkFullAOB: //"Secret_of_Mana.exe"+10FE23:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:

///*************************************///
aobscanmodule(controllingPlayerReadAOB,Secret_of_Mana.exe,8B ** ** ** ** ** 83 ** ** ** ** ** ** ** 75 ** 33 C0 8D)
registersymbol(controllingPlayerReadAOB)

label(pControllingPlayer)
registersymbol(pControllingPlayer)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_enable)
registersymbol(originalcode2_enable)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[esi+8e0]
mov [pControllingPlayer],eax

originalcode2_enable:
readmem(controllingPlayerReadAOB,6)
//mov eax,[esi+000008E0]

exit2:
jmp returnhere2

///
pControllingPlayer:
///

controllingPlayerReadAOB: //"Secret_of_Mana.exe"+18221A:
jmp newmem2
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaChkFullAOB: //"Secret_of_Mana.exe"+10FE23:
readmem(originalcode_maxstamina,11)
//db 81 BC 01 24 01 00 00 E8 03 00 00
//Alt: cmp [ecx+eax+00000124],000003E8

unregistersymbol(originalcode_maxstamina)
unregistersymbol(bInfStamina)

///*************************************///
dealloc(newmem2)
controllingPlayerReadAOB: //"Secret_of_Mana.exe"+18221A:
readmem(originalcode2_enable,6)
//db 8B 86 E0 08 00 00
//Alt: mov eax,[esi+000008E0]

unregistersymbol(pControllingPlayer)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>13</ID>
          <Description>"undead"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(dminhealthdefault,#1)

aobscanmodule(healthCalOnHitAOB,Secret_of_Mana.exe,E8 ** ** ** ** 8D ** ** 8B ** ** 99 83)
registersymbol(healthCalOnHitAOB)

label(dMinHealth)
registersymbol(dMinHealth)

alloc(newmem,2048)
label(returnhere)
label(originalcode_undead)
registersymbol(originalcode_undead)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov ecx,[edi+11c]
sub ecx,[edi+54]
cmp ecx,[dMinHealth]
jge @f
mov ecx,[dMinHealth]
add ecx,[edi+54]
mov [edi+11c],ecx

originalcode_undead:
readmem(healthCalOnHitAOB+5,6)
//lea ecx,[ebp-60]
//mov eax,[eax+04]

exit:
jmp returnhere

///
dMinHealth:
dd dminhealthdefault
///

healthCalOnHitAOB+5: //"Secret_of_Mana.exe"+11B845:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
healthCalOnHitAOB+5: //"Secret_of_Mana.exe"+11B845:
readmem(originalcode_undead,6)
//db 8D 4D A0 8B 40 04
//Alt: lea ecx,[ebp-60]
//Alt: mov eax,[eax+04]

unregistersymbol(dMinHealth)
unregistersymbol(originalcode_undead)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>14</ID>
              <Description>"min health"</Description>
              <LastState Value="1" RealAddress="0435002F"/>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dMinHealth</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"max stamina"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
luaCall(lua_aobscan("staminaSetZero1AOB","Secret_of_Mana.exe","C7 ** ** ** ** ** 00 00 00 00 8B ** ** ** ** ** 85 C9 0F 84",1))

alloc(originalcode2_maxstamina,16)
registersymbol(originalcode2_maxstamina)

originalcode2_maxstamina:
readmem(staminaSetZero1AOB,10)

///

staminaSetZero1AOB: //"Secret_of_Mana.exe"+10D91E:
db 90 90 90 90 90 90 90 90 90 90

///*************************************///
luaCall(lua_aobscan("staminaSetZero2AOB","Secret_of_Mana.exe","C7 ** ** ** ** ** 00 00 00 00 8B ** ** ** ** ** 85 C9 0F 84",2))

alloc(originalcode4_maxstamina,16)
registersymbol(originalcode4_maxstamina)

originalcode4_maxstamina:
readmem(staminaSetZero1AOB,10)

///

staminaSetZero2AOB: //"Secret_of_Mana.exe"+110B4A:
db 90 90 90 90 90 90 90 90 90 90

///*************************************///
aobscanmodule(staminaWritesOnSprintAOB,Secret_of_Mana.exe,01 ** ** ** ** ** ** 79 ** C7)
registersymbol(staminaWritesOnSprintAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6_maxstamina)
registersymbol(originalcode6_maxstamina)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jge @f
xor eax,eax

originalcode6_maxstamina:
readmem(staminaWritesOnSprintAOB,7)
//add [edi+ebx+00000124],eax

exit6:
jmp returnhere6

///

staminaWritesOnSprintAOB: //"Secret_of_Mana.exe"+10FC2D:
jmp newmem6
nop
nop
returnhere6:

///*************************************///
bInfStamina:
db 1




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
staminaSetZero1AOB: //"Secret_of_Mana.exe"+10D91E:
readmem(originalcode2_maxstamina,10)
//db C7 80 24 01 00 00 00 00 00 00
//Alt: mov [eax+00000124],00000000

dealloc(originalcode2_maxstamina)
unregistersymbol(originalcode2_maxstamina)

///*************************************///
staminaSetZero2AOB: //"Secret_of_Mana.exe"+110B4A:
readmem(originalcode4_maxstamina,10)
//db C7 80 24 01 00 00 00 00 00 00
//Alt: mov [eax+00000124],00000000

dealloc(originalcode4_maxstamina)
unregistersymbol(originalcode4_maxstamina)

///*************************************///
dealloc(newmem6)
staminaWritesOnSprintAOB: //"Secret_of_Mana.exe"+10FC2D:
readmem(originalcode6_maxstamina,7)
//add [edi+ebx+00000124],eax
//Alt: db 01 84 1F 24 01 00 00

unregistersymbol(originalcode6_maxstamina)

///*************************************///
bInfStamina:
db 0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"ignore mp"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMPForMenuDisplayAOB,Secret_of_Mana.exe,3B ** ** ** ** ** 7F ** 8B ** ** 8B C1)
registersymbol(cJmpIfNotEnoughMPForMenuDisplayAOB)

alloc(originalcode_ingoremp,4)
registersymbol(originalcode_ingoremp)

originalcode_ingoremp:
readmem(cJmpIfNotEnoughMPForMenuDisplayAOB+6,2)

///

cJmpIfNotEnoughMPForMenuDisplayAOB+6: //"Secret_of_Mana.exe"+223F34:
db 90 90

///********************************************///
aobscanmodule(cJmpIfNotEnoughMPOnCast1AOB,Secret_of_Mana.exe,3B ** ** ** ** ** 0F 8F ** ** ** ** 53)
registersymbol(cJmpIfNotEnoughMPOnCast1AOB)

alloc(originalcode2_ingoremp,4)
registersymbol(originalcode2_ingoremp)

originalcode2_ingoremp:
readmem(cJmpIfNotEnoughMPOnCast1AOB+6,6)

///

cJmpIfNotEnoughMPOnCast1AOB+6: //"Secret_of_Mana.exe"+22C39F:
db 90 90 90 90 90 90

///********************************************///
aobscanmodule(cJmpIfEnoughMpOnCast2AOB,Secret_of_Mana.exe,8B ** ** ** ** ** ** 2B C6 79)
registersymbol(cJmpIfEnoughMpOnCast2AOB)

cJmpIfEnoughMpOnCast2AOB+9: //"Secret_of_Mana.exe"+1849A2:
db EB

///********************************************///
aobscanmodule(cJmpIfNotEnoughMPOnShortcutCastAOB,Secret_of_Mana.exe,39 ** ** ** ** ** 0F 8C ** ** ** ** 8B ** ** B8)
registersymbol(cJmpIfNotEnoughMPOnShortcutCastAOB)

alloc(originalcode4_ingoremp,4)
registersymbol(originalcode4_ingoremp)

originalcode4_ingoremp:
readmem(cJmpIfNotEnoughMPOnShortcutCastAOB+6,6)

///

cJmpIfNotEnoughMPOnShortcutCastAOB+6: //"Secret_of_Mana.exe"+22F1C0:
db 90 90 90 90 90 90





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMPForMenuDisplayAOB+6: //"Secret_of_Mana.exe"+223F34:
readmem(originalcode_ingoremp,2)
//db 7F 1D
//Alt: jg Secret_of_Mana.exe+223F53

unregistersymbol(originalcode_ingoremp)

///********************************************///
cJmpIfNotEnoughMPOnCast1AOB+6: //"Secret_of_Mana.exe"+22C39F:
readmem(originalcode2_ingoremp,6)
//db 0F 8F E5 00 00 00
//Alt: jg Secret_of_Mana.exe+22C48A

unregistersymbol(originalcode2_ingoremp)

///********************************************///
cJmpIfEnoughMpOnCast2AOB+9: //"Secret_of_Mana.exe"+1849A2:
db 79
//Alt: jns

///********************************************///
cJmpIfNotEnoughMPOnShortcutCastAOB+6: //"Secret_of_Mana.exe"+22F1C0:
readmem(originalcode4_ingoremp,6)
//db 0F 8C 62 02 00 00
//Alt: jl Secret_of_Mana.exe+22F428

unregistersymbol(originalcode4_ingoremp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"ignore item quantity"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemQReadOnItemMenuAccessAOB,Secret_of_Mana.exe,83 ** 00 7E ** 8B ** ** 40)
registersymbol(itemQReadOnItemMenuAccessAOB)

alloc(originalcode_ignoreitemq,4)
registersymbol(originalcode_ignoreitemq)

originalcode_ignoreitemq:
readmem(itemQReadOnItemMenuAccessAOB+3,2)

///

itemQReadOnItemMenuAccessAOB+3: //"Secret_of_Mana.exe"+2258F3:
db 90 90

///*********************************///
aobscanmodule(itemQChkZeroOnUseAOB,Secret_of_Mana.exe,8B F0 0F 8E ** ** ** ** 8D)
registersymbol(itemQChkZeroOnUseAOB)

alloc(originalcode2_ignoreitemq,4)
registersymbol(originalcode2_ignoreitemq)

originalcode2_ignoreitemq:
readmem(itemQChkZeroOnUseAOB+2,6)

///

itemQChkZeroOnUseAOB+2: //"Secret_of_Mana.exe"+22A372:
db 90 90 90 90 90 90

///*********************************///
aobscanmodule(itemQReadAfterUsageAOB,Secret_of_Mana.exe,8B ** ** 83 ** ** ** ** ** ** 00 0F 8F)
registersymbol(itemQReadAfterUsageAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6a_ignoreitemq)
registersymbol(originalcode6a_ignoreitemq)
label(originalcode6b_ignoreitemq)
registersymbol(originalcode6b_ignoreitemq)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(itemQReadAfterUsageAOB+3,8)
//cmp dword ptr [esi*4+011DDFF4],00
jge @f
xor ecx,ecx
db 89 0C
readmem(itemQReadAfterUsageAOB+5,5)
//mov [esi*4+011DDFF4],ecx

originalcode6a_ignoreitemq:
readmem(itemQReadAfterUsageAOB+3,8)
//cmp dword ptr [esi*4+Secret_of_Mana.exe+DDDFF4],00

exit6:
jmp returnhere6

///
originalcode6b_ignoreitemq:
readmem(itemQReadAfterUsageAOB+b,2)
///

itemQReadAfterUsageAOB+3: //"Secret_of_Mana.exe"+230084:
jmp newmem6
nop
nop
nop
returnhere6:
db 90 E9

///*********************************///
aobscanmodule(itemQChkZeroAfterShortcutUsageAOB,Secret_of_Mana.exe,8B ** ** 83 ** ** ** ** ** ** 00 7F)
registersymbol(itemQChkZeroAfterShortcutUsageAOB)

itemQChkZeroAfterShortcutUsageAOB+b: //"Secret_of_Mana.exe"+22A6BF:
db EB




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
itemQReadOnItemMenuAccessAOB+3: //"Secret_of_Mana.exe"+2258F3:
readmem(originalcode_ignoreitemq,2)
//db 7E 2D
//Alt: jle Secret_of_Mana.exe+225922

dealloc(originalcode_ignoreitemq)
unregistersymbol(originalcode_ignoreitemq)

///*********************************///
itemQChkZeroOnUseAOB+2: //"Secret_of_Mana.exe"+22A372:
readmem(originalcode2_ignoreitemq,6)
//db 0F 8E 01 02 00 00
//Alt: jng Secret_of_Mana.exe+22A579

dealloc(originalcode2_ignoreitemq)
unregistersymbol(originalcode2_ignoreitemq)

///*********************************///
dealloc(newmem6)
itemQReadAfterUsageAOB+3: //"Secret_of_Mana.exe"+230084:
readmem(originalcode6a_ignoreitemq,8)
readmem(originalcode6b_ignoreitemq,2)
//db 83 3C B5 F4 DF 1D 01 00 0F 8F
//Alt: cmp dword ptr [esi*4+Secret_of_Mana.exe+DDDFF4],00

unregistersymbol(originalcode6a_ignoreitemq)
unregistersymbol(originalcode6b_ignoreitemq)

///*********************************///
itemQChkZeroAfterShortcutUsageAOB+b: //"Secret_of_Mana.exe"+22A6BF:
db 7F
//Alt: jg
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"weapon charge mod .4"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(weaponchargeleveldefault,#8000)

aobscanmodule(staminaAndWeaponChargeWriteAOB,Secret_of_Mana.exe,8B 80 ** ** ** ** 89 ** ** ** ** ** ** 8B ** ** 8B ** ** FF)
registersymbol(staminaAndWeaponChargeWriteAOB)

label(dWeaponChargeLevel)
registersymbol(dWeaponChargeLevel)

alloc(newmem,2048)
label(returnhere)
label(originalcode_weaponchargemod)
registersymbol(originalcode_weaponchargemod)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
//cmp edi,#1000
//jle @f

pushad
push 02 //Right mouse button
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
cmp edi,[dWeaponChargeLevel]
jge @f
mov edi,[dWeaponChargeLevel]

originalcode_weaponchargemod:
readmem(staminaAndWeaponChargeWriteAOB+6,7)
//mov [eax+esi+00000124],edi

exit:
jmp returnhere

///
dWeaponChargeLevel:
dd weaponchargeleveldefault
///

staminaAndWeaponChargeWriteAOB+6: //"Secret_of_Mana.exe"+179892:
jmp newmem
nop
nop
returnhere:

///*****************************************///
aobscanmodule(playerActionWritesAOB,Secret_of_Mana.exe,8B ** ** ** ** ** 89 ** ** ** ** ** ** 8B ** ** ** ** ** ** ** ** ** 59 5E)
registersymbol(playerActionWritesAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_weaponchargemod)
registersymbol(originalcode2_weaponchargemod)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
/*
cmp ecx,3
jl @f
cmp ecx,4
jge @f
*/
push ebx
mov ebx,[controllingFlagReadAOB+2]
cmp dword ptr [esi+ebx],0
pop ebx
jne @f

cmp ecx,3
jne @f

pushad
push 02 //Right mouse button
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f

xor ecx,ecx

originalcode2_weaponchargemod:
readmem(playerActionWritesAOB+6,7)
//mov [edx+eax+00000188],ecx

exit2:
jmp returnhere2

///

playerActionWritesAOB+6: //"Secret_of_Mana.exe"+10A10C:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaAndWeaponChargeWriteAOB+6: //"Secret_of_Mana.exe"+179892:
readmem(originalcode_weaponchargemod,7)
//db 89 BC 30 24 01 00 00
//Alt: mov [eax+esi+00000124],edi

unregistersymbol(originalcode_weaponchargemod)
unregistersymbol(dWeaponChargeLevel)

///*****************************************///
dealloc(newmem2)
playerActionWritesAOB+6: //"Secret_of_Mana.exe"+10A10C:
readmem(originalcode2_weaponchargemod,7)
//db 89 8C 02 88 01 00 00
//Alt: mov [edx+eax+00000188],ecx

unregistersymbol(originalcode2_weaponchargemod)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>21</ID>
              <Description>"need at least Lv.1"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>22</ID>
              <Description>"CapsLock+numpad? to set charge level"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>23</ID>
              <Description>"hold RMB to charge"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>18</ID>
              <Description>"charge level"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">2000:Lv.1
3000:Lv.2
4000:Lv.3
5000:Lv.4
6000:Lv.5
7000:Lv.6
8000:Lv.7
9000:Lv.8
</DropDownList>
              <LastState Value="8000" RealAddress="045E0035"/>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dWeaponChargeLevel</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>2000</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>3000</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>4000</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>5000</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>6000</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>7000</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>8000</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>20</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>9000</Value>
                  <ID>7</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"auto evade/block"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(missFlagFlipOnBeingAttackAOB,Secret_of_Mana.exe,8B ** ** 03 ** ** ** ** ** 09 41 ** 8B)
registersymbol(missFlagFlipOnBeingAttackAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_autoevadekey)
registersymbol(originalcode_autoevadekey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 14 //CAPS LOCK key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
mov eax,1

originalcode_autoevadekey:
readmem(missFlagFlipOnBeingAttackAOB+9,6)
//or [ecx+10],eax
//mov ecx,[ebp-0C]

exit:
jmp returnhere

///

missFlagFlipOnBeingAttackAOB+9: //"Secret_of_Mana.exe"+119937:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
missFlagFlipOnBeingAttackAOB+9: //"Secret_of_Mana.exe"+119937:
readmem(originalcode_autoevadekey,6)
//db 09 41 10 8B 4D F4
//Alt: or [ecx+10],eax
//Alt: mov ecx,[ebp-0C]

unregistersymbol(originalcode_autoevadekey)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>45</ID>
              <Description>"hold CapsLock"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>47</ID>
          <Description>"manual evade key .2"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(playerActionReadForExecuteAOB,Secret_of_Mana.exe,8B ** ** ** ** ** 3B ** ** ** ** ** 74 ** 50 8B CF)
registersymbol(playerActionReadForExecuteAOB)

label(dCustumPlayerAction)
registersymbol(dCustumPlayerAction)
label(pControllingPlayerAction)
registersymbol(pControllingPlayerAction)

alloc(newmem,2048)
label(returnhere)
label(originalcode_evadekey)
registersymbol(originalcode_evadekey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,[controllingFlagReadAOB+2]
cmp dword ptr [edi+eax],0
jne @f

mov [pControllingPlayerAction],esi

pushad
push 20 //SPACEBAR
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
mov eax,[dCustumPlayerAction]
jmp exit

originalcode_evadekey:
readmem(playerActionReadForExecuteAOB,6)
//mov eax,[esi+00000188]

exit:
jmp returnhere

///
dCustumPlayerAction:
dd #17
//7:fall //8:stand still //#13:hurt //#14:cheers
//#15-#18:some evade anims //#19:open chest(crash afterwards)
pControllingPlayerAction:
dd 0
///

playerActionReadForExecuteAOB: //"Secret_of_Mana.exe"+109B02:
jmp newmem
nop
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
playerActionReadForExecuteAOB: //"Secret_of_Mana.exe"+109B02:
readmem(originalcode_evadekey,6)
//db 8B 86 88 01 00 00
//Alt: mov eax,[esi+00000188]

unregistersymbol(originalcode_evadekey)
unregistersymbol(dCustumPlayerAction)
unregistersymbol(pControllingPlayerAction)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>48</ID>
              <Description>"Spacebar"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>167</ID>
                  <Description>""</Description>
                  <LastState Value="0" RealAddress="070F8424"/>
                  <Color>0000FF</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>pControllingPlayerAction</Address>
                  <Offsets>
                    <Offset>188</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>168</ID>
                  <Description>"dCustumPlayerAction"</Description>
                  <LastState Value="17" RealAddress="04600041"/>
                  <Color>008000</Color>
                  <VariableType>4 Bytes</VariableType>
                  <Address>dCustumPlayerAction</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>186</ID>
          <Description>"fast sprint key"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(movementspeedmultiplierdefault,(float)3)

aobscanmodule(movementSpeedWritesAOB,Secret_of_Mana.exe,F3 0F 10 ** ** F3 0F 58 ** ** ** ** ** F3 0F 11 ** ** ** ** ** 8B)
registersymbol(movementSpeedWritesAOB)

label(dMovementSpeedMultiplier)
registersymbol(dMovementSpeedMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode_fastsprintkey)
registersymbol(originalcode_fastsprintkey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
pushad
push 14 //CAPS LOCK key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
mulss xmm0,[dMovementSpeedMultiplier]

originalcode_fastsprintkey:
readmem(movementSpeedWritesAOB+d,8)
//movss [esi+00000258],xmm0

exit:
jmp returnhere

///
dMovementSpeedMultiplier:
dd movementspeedmultiplierdefault
///

movementSpeedWritesAOB+d: //"Secret_of_Mana.exe"+1099E5:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
movementSpeedWritesAOB+d: //"Secret_of_Mana.exe"+1099E5:
readmem(originalcode_fastsprintkey,8)
//db F3 0F 11 86 58 02 00 00
//Alt: movss [esi+00000258],xmm0

unregistersymbol(originalcode_fastsprintkey)
unregistersymbol(dMovementSpeedMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>187</ID>
              <Description>"hold CapsLock"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>188</ID>
              <Description>"speed"</Description>
              <LastState Value="0" RealAddress="0461006F"/>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dMovementSpeedMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"exp multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(expmultiplierdefault,(float)4)

aobscanmodule(expDistributeOnGainAOB,Secret_of_Mana.exe,F6 ** ** 01 74 ** 83 ** ** ** ** ** 00 74 ** 0F B7)
registersymbol(expDistributeOnGainAOB)

label(dEXPMultiplier)
registersymbol(dEXPMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode_expmultiplier)
registersymbol(originalcode_expmultiplier)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(expDistributeOnGainAOB+f,7)
//movzx eax,word ptr [edi+1f0]
push eax
fild dword ptr [esp]
fmul dword ptr [dEXPMultiplier]
fistp dword ptr [esp]
pop eax
db 66 89
readmem(expDistributeOnGainAOB+11,5)
//mov [edi+1f0],ax
readmem(expDistributeOnGainAOB,4)
reassemble(expDistributeOnGainAOB+4,2)
jmp exit

originalcode_expmultiplier:
readmem(expDistributeOnGainAOB,6)
//test byte ptr [ecx+0C],01
//je Secret_of_Mana.exe+264F40

exit:
jmp returnhere

///
dEXPMultiplier:
dd expmultiplierdefault
///

expDistributeOnGainAOB: //"Secret_of_Mana.exe"+264F02:
jmp newmem
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
expDistributeOnGainAOB: //"Secret_of_Mana.exe"+264F02:
readmem(originalcode_expmultiplier,6)
//db F6 41 0C 01 74 38
//Alt: test byte ptr [ecx+0C],01
//Alt: je Secret_of_Mana.exe+264F40

unregistersymbol(originalcode_expmultiplier)
unregistersymbol(dEXPMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>82</ID>
              <Description>"x?"</Description>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dEXPMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>84</ID>
          <Description>"weapon exp multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(weaponexpmultiplierdefault,(float)4)

aobscanmodule(weaponExpWritesOnGainAOB,Secret_of_Mana.exe,3B D6 75 ** 01)
registersymbol(weaponExpWritesOnGainAOB)

label(dWeaponEXPMultiplier)
registersymbol(dWeaponEXPMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode_weaponexpmultiplier)
registersymbol(originalcode_weaponexpmultiplier)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
reassemble(weaponExpWritesOnGainAOB+2)
push ecx
fild dword ptr [esp]
fmul dword ptr [dWeaponEXPMultiplier]
fistp dword ptr [esp]
pop ecx
readmem(weaponExpWritesOnGainAOB+4,3)
jmp exit

originalcode_weaponexpmultiplier:
readmem(weaponExpWritesOnGainAOB+2,5)
//jne Secret_of_Mana.exe+2650D6
//add [eax+edi],ecx

exit:
jmp returnhere

///
dWeaponEXPMultiplier:
dd weaponexpmultiplierdefault
///

weaponExpWritesOnGainAOB+2: //"Secret_of_Mana.exe"+2650AA:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponExpWritesOnGainAOB+2: //"Secret_of_Mana.exe"+2650AA:
readmem(originalcode_weaponexpmultiplier,5)
//db 75 2A 01 0C 38
//Alt: jne Secret_of_Mana.exe+2650D6
//Alt: add [eax+edi],ecx

unregistersymbol(originalcode_weaponexpmultiplier)
unregistersymbol(dWeaponEXPMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>85</ID>
              <Description>"x?"</Description>
              <LastState Value="4" RealAddress="04620026"/>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dWeaponEXPMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>110</ID>
          <Description>"weapon auto level up .2"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(weaponChkMaxLevelAOB,Secret_of_Mana.exe,0F 4F ** ** 39 ** 7E)
registersymbol(weaponChkMaxLevelAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_maxweaponlevel)
registersymbol(originalcode_maxweaponlevel)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(weaponChkMaxLevelAOB,4)
//cmovg eax,[ebp-5c]
db 89
readmem(weaponChkMaxLevelAOB+5,1)
//mov [esi],eax
readmem(weaponChkMaxLevelAOB+4,2)
jmp exit

originalcode_maxweaponlevel:
readmem(weaponChkMaxLevelAOB,6)
//cmovg eax,[ebp-5C]
//cmp [esi],eax

exit:
jmp returnhere

///

weaponChkMaxLevelAOB: //"Secret_of_Mana.exe"+16F337:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponChkMaxLevelAOB: //"Secret_of_Mana.exe"+16F337:
readmem(originalcode_maxweaponlevel,6)
//db 0F 4F 45 A4 39 06
//Alt: cmovg eax,[ebp-5C]
//Alt: cmp [esi],eax

unregistersymbol(originalcode_maxweaponlevel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>122</ID>
          <Description>"magic exp multiplier"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(magicmultiplierdefault,(float)4)

aobscanmodule(magicExpWritesOnGainAOB,Secret_of_Mana.exe,8B ** ** ** 01 ** ** ** ** ** ** 6B)
registersymbol(magicExpWritesOnGainAOB)

label(dMagicEXPMultiplier)
registersymbol(dMagicEXPMultiplier)

alloc(newmem,2048)
label(returnhere)
label(originalcode_magicexpmultiplier)
registersymbol(originalcode_magicexpmultiplier)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push eax
fild dword ptr [esp]
fmul dword ptr [dMagicEXPMultiplier]
fistp dword ptr [esp]
pop eax

originalcode_magicexpmultiplier:
readmem(magicExpWritesOnGainAOB+4,7)
//add [edx+ecx*4+00000150],eax

exit:
jmp returnhere

///
dMagicEXPMultiplier:
dd magicmultiplierdefault
///

magicExpWritesOnGainAOB+4: //"Secret_of_Mana.exe"+18795B:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
magicExpWritesOnGainAOB+4: //"Secret_of_Mana.exe"+18795B:
readmem(originalcode_magicexpmultiplier,7)
//db 01 84 8A 50 01 00 00
//Alt: add [edx+ecx*4+00000150],eax

unregistersymbol(originalcode_magicexpmultiplier)
unregistersymbol(dMagicEXPMultiplier)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>123</ID>
              <Description>"x?"</Description>
              <LastState Value="4" RealAddress="0464001A"/>
              <Color>008000</Color>
              <VariableType>Float</VariableType>
              <Address>dMagicEXPMultiplier</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"free shopping"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMoneyOnBuyAOB,Secret_of_Mana.exe,3B ** ** 7E ** 5F 5E 32 C0)
registersymbol(cJmpIfNotEnoughMoneyOnBuyAOB)

cJmpIfNotEnoughMoneyOnBuyAOB+3: //"Secret_of_Mana.exe"+13879E:
db EB

///***********************************///
aobscanmodule(moneyWriteAfterBuyAAOB,Secret_of_Mana.exe,89 ** ** ** B0 01 29 ** ** 5F)
registersymbol(moneyWriteAfterBuyAAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_freeshopping)
registersymbol(originalcode_freeshopping)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(moneyWriteAfterBuyAAOB+4,5)
jns @f
xor ebx,ebx
db 89
readmem(moneyWriteAfterBuyAAOB+7,2)
//mov [esi+1c],ebx
@@:
jmp exit

originalcode_freeshopping:
readmem(moneyWriteAfterBuyAAOB+4,5)
//mov al,01
//sub [esi+1C],ebx

exit:
jmp returnhere

///

moneyWriteAfterBuyAAOB+4: //"Secret_of_Mana.exe"+1387E1:
jmp newmem
returnhere:

///***********************************///
aobscanmodule(moneyWriteAfterBuyBAOB,Secret_of_Mana.exe,84 C0 74 ** 29 ** ** 5F)
registersymbol(moneyWriteAfterBuyBAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_freeshopping)
registersymbol(originalcode2_freeshopping)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor ebx,ebx
db 89
readmem(moneyWriteAfterBuyBAOB+5,2)
//mov [esi+1c],ebx

originalcode2_freeshopping:
readmem(moneyWriteAfterBuyBAOB+7,7)
//pop edi
//pop esi
//pop ebx
//pop ebp
//ret 0008

exit2:
jmp returnhere2

///

moneyWriteAfterBuyBAOB+7: //"Secret_of_Mana.exe"+1387C9:
jmp newmem2
nop
nop
returnhere2:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMoneyOnBuyAOB+3: //"Secret_of_Mana.exe"+13879E:
db 7E
//Alt: jle

///***********************************///
dealloc(newmem)
moneyWriteAfterBuyAAOB+4: //"Secret_of_Mana.exe"+1387E1:
readmem(originalcode_freeshopping,5)
//db B0 01 29 5E 1C
//Alt: mov al,01
//Alt: sub [esi+1C],ebx

unregistersymbol(originalcode_freeshopping)

///***********************************///
dealloc(newmem2)
moneyWriteAfterBuyBAOB+7: //"Secret_of_Mana.exe"+1387C9:
readmem(originalcode2_freeshopping,7)
//db 5F 5E 5B 5D C2 08 00
//Alt: pop edi
//Alt: pop esi
//Alt: pop ebx
//Alt: pop ebp
//Alt: ret 0008

unregistersymbol(originalcode2_freeshopping)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>208</ID>
          <Description>"character change key"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(actualControllingPlayerReadAOB,Secret_of_Mana.exe,88 ** ** 8B ** ** ** ** ** 83 ** FF 74 ** 83 ** 03)
registersymbol(actualControllingPlayerReadAOB)

label(pActualControllingPlayer)
registersymbol(pActualControllingPlayer)

alloc(newmem,2048)
label(returnhere)
label(originalcode_playerchangekey)
registersymbol(originalcode_playerchangekey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
db 8D
readmem(actualControllingPlayerReadAOB+4,5)
//lea eax,[ebx+8c4]
mov [pActualControllingPlayer],eax

originalcode_playerchangekey:
readmem(actualControllingPlayerReadAOB+3,6)
//mov eax,[ebx+000008C4]

exit:
jmp returnhere

///
pActualControllingPlayer:
///

actualControllingPlayerReadAOB+3: //"Secret_of_Mana.exe"+181C26:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
actualControllingPlayerReadAOB+3: //"Secret_of_Mana.exe"+181C26:
readmem(originalcode_playerchangekey,6)
//db 8B 83 C4 08 00 00
//Alt: mov eax,[ebx+000008C4]

unregistersymbol(originalcode_playerchangekey)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>210</ID>
              <Description>"F1-F3 to change character"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>209</ID>
              <Description>"controlling character"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000:Randi (Char1)
00000001:Primm (Char2)
00000002:Popoi (Char3)
</DropDownList>
              <LastState Value="00000000" RealAddress="011DDFC4"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pActualControllingPlayer</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>112</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>113</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>114</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"weapon change key"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(partyEquippedWeaponsReadAOB,Secret_of_Mana.exe,69 ** ** ** ** ** ** ** ** ** ** ** ** ** ** 8B ** ** ** ** ** ** 8B ** ** 85 C9)
registersymbol(partyEquippedWeaponsReadAOB)

label(dEquipWeaponLevel)
registersymbol(dEquipWeaponLevel)
label(pControllingPlayerEquippedWeapon)
registersymbol(pControllingPlayerEquippedWeapon)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_weaponchangekey)
registersymbol(originalcode2_weaponchangekey)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
pushad

mov esi,[pControllingPlayer]
readmem(partyEquippedWeaponsReadAOB,2)
db 00 00 00 00
readmem(partyEquippedWeaponsReadAOB+6,4)
//imul ecx,[esi],000001e4
reassemble(partyEquippedWeaponsReadAOB+a)
//mov eax,[Secret_of_Mana.exe+DDE038]
readmem(partyEquippedWeaponsReadAOB+f,7)
//mov eax,[ecx+eax+1b4]
db 8D
readmem(partyEquippedWeaponsReadAOB+17,2)
//lea ecx,[eax+c]
mov [pControllingPlayerEquippedWeapon],ecx

mov ebx,31 //1 Key
xor ecx,ecx

@@:
pushad
push ebx
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je @f
inc ebx
add ecx,9
cmp ebx,38 //8 Key
jle @b
jmp end2

@@:
add ecx,[dEquipWeaponLevel]
db 89
readmem(partyEquippedWeaponsReadAOB+17,2)
//mov [eax+c],ecx

end2:
popad

originalcode2_weaponchangekey:
readmem(partyEquippedWeaponsReadAOB+f,7)
//mov eax,[ecx+eax+000001B4]

exit2:
jmp returnhere2

///
dEquipWeaponLevel:
dd 8 //8=lvl9
pControllingPlayerEquippedWeapon:
dd 0
///

partyEquippedWeaponsReadAOB+f: //"Secret_of_Mana.exe"+11651E:
jmp newmem2
nop
nop
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
partyEquippedWeaponsReadAOB+f: //"Secret_of_Mana.exe"+11651E:
readmem(originalcode2_weaponchangekey,7)
//db 8B 84 01 B4 01 00 00
//Alt: mov eax,[ecx+eax+000001B4]

unregistersymbol(originalcode2_weaponchangekey)
unregistersymbol(dEquipWeaponLevel)
unregistersymbol(pControllingPlayerEquippedWeapon)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>205</ID>
              <Description>"1-8 to change weapon"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>206</ID>
              <Description>"1-8 + numpad1-9 to change wepon Lv."</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>204</ID>
              <Description>"wepon Lv."</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0::Lv.1
1::Lv.2
2::Lv.3
3::Lv.4
4::Lv.5
5::Lv.6
6::Lv.7
7::Lv.8
8::Lv.9
</DropDownList>
              <LastState Value="2" RealAddress="04340067"/>
              <Color>008000</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>dEquipWeaponLevel</Address>
              <Hotkeys>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>49</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>50</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>51</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>52</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>53</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>54</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>55</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>97</Key>
                  </Keys>
                  <Value>0</Value>
                  <ID>0</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>98</Key>
                  </Keys>
                  <Value>1</Value>
                  <ID>1</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>99</Key>
                  </Keys>
                  <Value>2</Value>
                  <ID>2</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>100</Key>
                  </Keys>
                  <Value>3</Value>
                  <ID>3</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>101</Key>
                  </Keys>
                  <Value>4</Value>
                  <ID>4</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>102</Key>
                  </Keys>
                  <Value>5</Value>
                  <ID>5</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>103</Key>
                  </Keys>
                  <Value>6</Value>
                  <ID>6</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>104</Key>
                  </Keys>
                  <Value>7</Value>
                  <ID>7</ID>
                </Hotkey>
                <Hotkey>
                  <Action>Set Value</Action>
                  <Keys>
                    <Key>56</Key>
                    <Key>105</Key>
                  </Keys>
                  <Value>8</Value>
                  <ID>8</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>207</ID>
              <Description>"controlling player's weapon"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">00000000:knuckle Lv.1
00000001:knuckle Lv.2
00000002:knuckle Lv.3
00000003:knuckle Lv.4
00000004:knuckle Lv.5
00000005:knuckle Lv.6
00000006:knuckle Lv.7
00000007:knuckle Lv.8
00000008:knuckle Lv.9
00000009:sword Lv.1
0000000A:sword Lv.2
0000000B:sword Lv.3
0000000C:sword Lv.4
0000000D:sword Lv.5
0000000E:sword Lv.6
0000000F:sword Lv.7
00000010:sword Lv.8
00000011:sword Lv.9
00000012:axe Lv.1
00000013:axe Lv.2
00000014:axe Lv.3
00000015:axe Lv.4
00000016:axe Lv.5
00000017:axe Lv.6
00000018:axe Lv.7
00000019:axe Lv.8
0000001A:axe Lv.9
0000001B:spear Lv.1
0000001C:spear Lv.2
0000001D:spear Lv.3
0000001E:spear Lv.4
0000001F:spear Lv.5
00000020:spear Lv.6
00000021:spear Lv.7
00000022:spear Lv.8
00000023:spear Lv.9
00000024:whip Lv.1
00000025:whip Lv.2
00000026:whip Lv.3
00000027:whip Lv.4
00000028:whip Lv.5
00000029:whip Lv.6
0000002A:whip Lv.7
0000002B:whip Lv.8
0000002C:whip Lv.9
0000002D:bow Lv.1
0000002E:bow Lv.2
0000002F:bow Lv.3
00000030:bow Lv.4
00000031:bow Lv.5
00000032:bow Lv.6
00000033:bow Lv.7
00000034:bow Lv.8
00000035:bow Lv.9
00000036:bommerang Lv.1
00000037:bommerang Lv.2
00000038:bommerang Lv.3
00000039:bommerang Lv.4
0000003A:bommerang Lv.5
0000003B:bommerang Lv.6
0000003C:bommerang Lv.7
0000003D:bommerang Lv.8
0000003E:bommerang Lv.9
0000003F:javelin Lv.1
00000040:javelin Lv.2
00000041:javelin Lv.3
00000042:javelin Lv.4
00000043:javelin Lv.5
00000044:javelin Lv.6
00000045:javelin Lv.7
00000046:javelin Lv.8
00000047:javelin Lv.9
</DropDownList>
              <LastState Value="00000014" RealAddress="07079B48"/>
              <ShowAsHex>1</ShowAsHex>
              <Color>0000FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>pControllingPlayerEquippedWeapon</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>18392850</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1F7C5FC0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1F7C5FC0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaChkFullAOB,Secret_of_Mana.exe,81 ** ** ** ** ** ** E8 03 00 00)
registersymbol(staminaChkFullAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_maxstamina)
registersymbol(originalcode_maxstamina)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
db C7 84 08
readmem(staminaChkFullAOB+3,8)
//mov [ecx+eax+124],#1000

originalcode_maxstamina:
readmem(staminaChkFullAOB,11)
//cmp [ecx+eax+00000124],000003E8

exit:
jmp returnhere

///

staminaChkFullAOB: //"Secret_of_Mana.exe"+10FE23:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
staminaChkFullAOB: //"Secret_of_Mana.exe"+10FE23:
readmem(originalcode_maxstamina,11)
//db 81 BC 01 24 01 00 00 E8 03 00 00
//Alt: cmp [ecx+eax+00000124],000003E8
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
luaCall(lua_aobscan("staminaSetZero1AOB","Secret_of_Mana.exe","C7 ** ** ** ** ** 00 00 00 00 8B ** ** ** ** ** 85 C9 0F 84",1))

alloc(originalcode2_maxstamina,16)
registersymbol(originalcode2_maxstamina)

originalcode2_maxstamina:
readmem(staminaSetZero1AOB,10)

///

staminaSetZero1AOB: //"Secret_of_Mana.exe"+10D91E:
db 90 90 90 90 90 90 90 90 90 90

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
staminaSetZero1AOB: //"Secret_of_Mana.exe"+10D91E:
readmem(originalcode2_maxstamina,10)
//db C7 80 24 01 00 00 00 00 00 00
//Alt: mov [eax+00000124],00000000

dealloc(originalcode2_maxstamina)
unregistersymbol(originalcode2_maxstamina)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
luaCall(lua_aobscan("staminaSetZero2AOB","Secret_of_Mana.exe","C7 ** ** ** ** ** 00 00 00 00 8B ** ** ** ** ** 85 C9 0F 84",2))

alloc(originalcode4_maxstamina,16)
registersymbol(originalcode4_maxstamina)

originalcode4_maxstamina:
readmem(staminaSetZero1AOB,10)

///

staminaSetZero2AOB: //"Secret_of_Mana.exe"+110B4A:
db 90 90 90 90 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
staminaSetZero2AOB: //"Secret_of_Mana.exe"+110B4A:
readmem(originalcode4_maxstamina,10)
//db C7 80 24 01 00 00 00 00 00 00
//Alt: mov [eax+00000124],00000000

dealloc(originalcode4_maxstamina)
unregistersymbol(originalcode4_maxstamina)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(staminaWritesOnSprintAOB,Secret_of_Mana.exe,01 ** ** ** ** ** ** 79 ** C7)
registersymbol(staminaWritesOnSprintAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6_maxstamina)
registersymbol(originalcode6_maxstamina)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
test eax,eax
jge @f
xor eax,eax

originalcode6_maxstamina:
readmem(staminaWritesOnSprintAOB,7)
//add [edi+ebx+00000124],eax

exit6:
jmp returnhere6

///

staminaWritesOnSprintAOB: //"Secret_of_Mana.exe"+10FC2D:
jmp newmem6
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
staminaWritesOnSprintAOB: //"Secret_of_Mana.exe"+10FC2D:
readmem(originalcode6_maxstamina,7)
//add [edi+ebx+00000124],eax
//Alt: db 01 84 1F 24 01 00 00

unregistersymbol(originalcode6_maxstamina)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>18392848</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="2132DC38"/>
          <VariableType>4 Bytes</VariableType>
          <Address>2132DC38</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="2132DC3C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>2132DC3C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>18392860</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"No description"</Description>
          <LastState Value="100" RealAddress="011DE308"/>
          <VariableType>4 Bytes</VariableType>
          <Address>Secret_of_Mana.exe+DDE308</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="07086CA0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>07086CA0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>20</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="07086CB0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>07086CB0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[ecx+eax*4+00000130]

exit:
jmp returnhere

"Secret_of_Mana.exe"+2371F1:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+2371F1:
mov ecx,[ecx+eax*4+00000130]
//Alt: db 8B 8C 81 30 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>25</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ecx,[ecx+edx*4+00000130]

exit:
jmp returnhere

"Secret_of_Mana.exe"+23731C:
jmp newmem
nop
nop
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+23731C:
mov ecx,[ecx+edx*4+00000130]
//Alt: db 8B 8C 91 30 01 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
cmp [eax+ecx*4+00000130],00000383

exit:
jmp returnhere

"Secret_of_Mana.exe"+2374CF:
jmp newmem
nop
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+2374CF:
cmp [eax+ecx*4+00000130],00000383
//Alt: db 81 BC 88 30 01 00 00 83 03 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1D282C0C"/>
          <VariableType>Byte</VariableType>
          <Address>1D282C0C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"No description"</Description>
          <LastState Value="45" RealAddress="1DC50E48"/>
          <VariableType>Byte</VariableType>
          <Address>1DC50E48</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov bl,1

originalcode:
mov [esi+0000035C],bl

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+11EAA1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+11EAA1:
db 88 9E 5C 03 00 00
//Alt: mov [esi+0000035C],bl
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="07086D04"/>
          <VariableType>Byte</VariableType>
          <Address>07086D04</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(playerActionWritesAOB,Secret_of_Mana.exe,8B ** ** ** ** ** 89 ** ** ** ** ** ** 8B ** ** ** ** ** ** ** ** ** 59 5E)
registersymbol(playerActionWritesAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_weaponchargemod)
registersymbol(originalcode2_weaponchargemod)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
cmp ecx,4
je @f

pushad
push 14 //CAPS LOCK key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f

xor ecx,ecx

originalcode2_weaponchargemod:
readmem(playerActionWritesAOB+6,7)
//mov [edx+eax+00000188],ecx

exit2:
jmp returnhere2

///

playerActionWritesAOB+6: //"Secret_of_Mana.exe"+10A10C:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
playerActionWritesAOB+6: //"Secret_of_Mana.exe"+10A10C:
readmem(originalcode2_weaponchargemod,7)
//db 89 8C 02 88 01 00 00
//Alt: mov [edx+eax+00000188],ecx

unregistersymbol(originalcode2_weaponchargemod)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"No description"</Description>
          <LastState Value="1" RealAddress="011DE0E4"/>
          <VariableType>Byte</VariableType>
          <Address>Secret_of_Mana.exe+DDE0E4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemQReadOnItemMenuAccessAOB,Secret_of_Mana.exe,83 ** 00 7E ** 8B ** ** 40)
registersymbol(itemQReadOnItemMenuAccessAOB)

alloc(originalcode_ignoreitemq,4)
registersymbol(originalcode_ignoreitemq)

originalcode_ignoreitemq:
readmem(itemQReadOnItemMenuAccessAOB+3,2)

///

itemQReadOnItemMenuAccessAOB+3: //"Secret_of_Mana.exe"+2258F3:
db 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
itemQReadOnItemMenuAccessAOB+3: //"Secret_of_Mana.exe"+2258F3:
readmem(originalcode_ignoreitemq,2)
//db 7E 2D
//Alt: jle Secret_of_Mana.exe+225922

dealloc(originalcode_ignoreitemq)
unregistersymbol(originalcode_ignoreitemq)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemQChkZeroOnUseAOB,Secret_of_Mana.exe,8B F0 0F 8E ** ** ** ** 8D)
registersymbol(itemQChkZeroOnUseAOB)

alloc(originalcode2_ignoreitemq,4)
registersymbol(originalcode2_ignoreitemq)

originalcode2_ignoreitemq:
readmem(itemQChkZeroOnUseAOB+2,6)

///

itemQChkZeroOnUseAOB+2: //"Secret_of_Mana.exe"+22A372:
db 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
itemQChkZeroOnUseAOB+2: //"Secret_of_Mana.exe"+22A372:
readmem(originalcode2_ignoreitemq,6)
//db 0F 8E 01 02 00 00
//Alt: jng Secret_of_Mana.exe+22A579

dealloc(originalcode2_ignoreitemq)
unregistersymbol(originalcode2_ignoreitemq)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075EB664</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"Secret_of_Mana.exe"+11B7E9:
db 90 E9


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"Secret_of_Mana.exe"+11B7E9:
db 0F 84
//Alt: je
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemQReadAfterUsageAOB,Secret_of_Mana.exe,8B ** ** 83 ** ** ** ** ** ** 00 0F 8F)
registersymbol(itemQReadAfterUsageAOB)

alloc(newmem6,2048)
label(returnhere6)
label(originalcode6a_ignoreitemq)
registersymbol(originalcode6a_ignoreitemq)
label(originalcode6b_ignoreitemq)
registersymbol(originalcode6b_ignoreitemq)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(itemQReadAfterUsageAOB+3,8)
//cmp dword ptr [esi*4+011DDFF4],00
jge @f
xor ecx,ecx
db 89 0C
readmem(itemQReadAfterUsageAOB+5,5)
//mov [esi*4+011DDFF4],ecx

originalcode6a_ignoreitemq:
readmem(itemQReadAfterUsageAOB+3,8)
//cmp dword ptr [esi*4+Secret_of_Mana.exe+DDDFF4],00

exit6:
jmp returnhere6

///
originalcode6b_ignoreitemq:
readmem(itemQReadAfterUsageAOB+b,2)
///

itemQReadAfterUsageAOB+3: //"Secret_of_Mana.exe"+230084:
jmp newmem6
nop
nop
nop
returnhere6:
db 90 E9


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
itemQReadAfterUsageAOB+3: //"Secret_of_Mana.exe"+230084:
readmem(originalcode6a_ignoreitemq,8)
readmem(originalcode6b_ignoreitemq,2)
//db 83 3C B5 F4 DF 1D 01 00 0F 8F
//Alt: cmp dword ptr [esi*4+Secret_of_Mana.exe+DDDFF4],00

unregistersymbol(originalcode6a_ignoreitemq)
unregistersymbol(originalcode6b_ignoreitemq)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="011DE0E8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>011DE0E8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>41</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(itemQChkZeroAfterShortcutUsageAOB,Secret_of_Mana.exe,8B ** ** 83 ** ** ** ** ** ** 00 7F)
registersymbol(itemQChkZeroAfterShortcutUsageAOB)

itemQChkZeroAfterShortcutUsageAOB+b: //"Secret_of_Mana.exe"+22A6BF:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
itemQChkZeroAfterShortcutUsageAOB+b: //"Secret_of_Mana.exe"+22A6BF:
db 7F
//Alt: jg
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"Secret_of_Mana.exe"+11B6C1:
db 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"Secret_of_Mana.exe"+11B6C1:
db 0F 84 00 01 00 00
//Alt: je Secret_of_Mana.exe+11B7C7
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075EB54C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>46</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075EB6C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"No description"</Description>
          <LastState Value="1" RealAddress="22D42968"/>
          <VariableType>Float</VariableType>
          <Address>22D42968</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(dMovementSpeed)
registersymbol(dMovementSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[dMovementSpeed]

originalcode:
movss [eax+esi*4],xmm0

exit:
jmp returnhere

///
dMovementSpeed:
dd (float)0.1
///

"Secret_of_Mana.exe"+3A787F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A787F:
db F3 0F 11 04 B0
//Alt: movss [eax+esi*4],xmm0

unregistersymbol(dMovementSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(movementspeeddefault,(float)0.5)

label(dMovementSpeed)
registersymbol(dMovementSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[ebp+c]
mulss xmm0,[dMovementSpeed]
movss [ebp+c],xmm0

originalcode:
movss xmm0,[ebp+0C]

exit:
jmp returnhere

///
dMovementSpeed:
dd movementspeeddefault
///

"Secret_of_Mana.exe"+3A7862:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A7862:
db F3 0F 10 45 0C
//Alt: movss xmm0,[ebp+0C]

unregistersymbol(dMovementSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>52</ID>
          <Description>"dMovementSpeed"</Description>
          <VariableType>Float</VariableType>
          <Address>dMovementSpeed</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss [eax+esi*4],xmm0
lea eax,[eax+esi*4]
cmp eax,22D42968
jne @f
movss [eax],xmm0
@@:
jmp exit

originalcode:
movss [eax+esi*4],xmm0

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+3A787F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A787F:
db F3 0F 11 04 B0
//Alt: movss [eax+esi*4],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>078497D0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>55</ID>
          <Description>"some animation speed"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [eax+4c],(float)0.2
mov dword ptr [eax+50],(float)0.2
jmp exit

originalcode:
mov [eax+50],3F800000

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+10A565:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+10A565:
db C7 40 50 00 00 80 3F
//Alt: mov [eax+50],3F800000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>56</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="22EA9AC0"/>
          <VariableType>Float</VariableType>
          <Address>22EA9AC0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov dword ptr [edi+8],(float)0.5

originalcode:
movss xmm1,[edi+08]

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+3A30DF:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A30DF:
db F3 0F 10 4F 08
//Alt: movss xmm1,[edi+08]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>58</ID>
          <Description>"No Description"</Description>
          <LastState Value="1" RealAddress="009B59EC"/>
          <VariableType>Float</VariableType>
          <Address>009B59EC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075EB6C4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1AFEFAEC"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1AFEFAEC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1AFEFB00"/>
          <VariableType>Float</VariableType>
          <Address>1AFEFB00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(movementspeeddefault,(float)0.5)

label(dMovementSpeed)
registersymbol(dMovementSpeed)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm2,[dMovementSpeed]

originalcode:
movss [esi+00000250],xmm2

exit:
jmp returnhere

///
dMovementSpeed:
dd movementspeeddefault
///

"Secret_of_Mana.exe"+109596:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+109596:
db F3 0F 11 96 50 02 00 00
//Alt: movss [esi+00000250],xmm2

unregistersymbol(dMovementSpeed)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="011DDF98"/>
          <VariableType>Float</VariableType>
          <Address>Secret_of_Mana.exe+DDDF98</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1AFEFB00"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1AFEFB00</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"No description"</Description>
          <LastState Value="0.06689158082" RealAddress="1D8D1414"/>
          <VariableType>Float</VariableType>
          <Address>1D8D1414</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"No description"</Description>
          <LastState Value="-0.05694697052" RealAddress="1D8D1420"/>
          <VariableType>Float</VariableType>
          <Address>1D8D1420</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"No description"</Description>
          <LastState Value="1" RealAddress="22D42968"/>
          <VariableType>Float</VariableType>
          <Address>22D42968</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="22EA9ABC"/>
          <VariableType>Float</VariableType>
          <Address>22EA9ABC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>69</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>239F5DA4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>70</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1FFE65A8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1FFE65A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>71</ID>
          <Description>"No description"</Description>
          <LastState Value="34" RealAddress="011DE02C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>Secret_of_Mana.exe+DDE02C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"shop 1/3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMoneyOnBuyAOB,Secret_of_Mana.exe,3B ** ** 7E ** 5F 5E 32 C0)
registersymbol(cJmpIfNotEnoughMoneyOnBuyAOB)

cJmpIfNotEnoughMoneyOnBuyAOB+3: //"Secret_of_Mana.exe"+13879E:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMoneyOnBuyAOB+3: //"Secret_of_Mana.exe"+13879E:
db 7E
//Alt: jle
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"shop 2/3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(moneyWriteAfterBuyAAOB,Secret_of_Mana.exe,89 ** ** ** B0 01 29 ** ** 5F)
registersymbol(moneyWriteAfterBuyAAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_freeshopping)
registersymbol(originalcode_freeshopping)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(moneyWriteAfterBuyAAOB+4,5)
jns @f
xor ebx,ebx
db 89
readmem(moneyWriteAfterBuyAAOB+7,2)
//mov [esi+1c],ebx
@@:
jmp exit

originalcode_freeshopping:
readmem(moneyWriteAfterBuyAAOB+4,5)
//mov al,01
//sub [esi+1C],ebx

exit:
jmp returnhere

///

moneyWriteAfterBuyAAOB+4: //"Secret_of_Mana.exe"+1387E1:
jmp newmem
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moneyWriteAfterBuyAAOB+4: //"Secret_of_Mana.exe"+1387E1:
readmem(originalcode_freeshopping,5)
//db B0 01 29 5E 1C
//Alt: mov al,01
//Alt: sub [esi+1C],ebx

unregistersymbol(originalcode_freeshopping)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1FFE65A8"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1FFE65A8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1FFE6810"/>
          <VariableType>4 Bytes</VariableType>
          <Address>1FFE6810</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>76</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"Secret_of_Mana.exe"+213BD7:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
"Secret_of_Mana.exe"+213BD7:
db 75
//Alt: jne
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>77</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [ebp+4],0060f16a
je @f
cmp eax,[esi+00000258]

originalcode:
cmp eax,[esi+00000258]

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+213BD1:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+213BD1:
db 3B 86 58 02 00 00
//Alt: cmp eax,[esi+00000258]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>78</ID>
          <Description>"shop 3/3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(moneyWriteAfterBuyBAOB,Secret_of_Mana.exe,84 C0 74 ** 29 ** ** 5F)
registersymbol(moneyWriteAfterBuyBAOB)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_freeshopping)
registersymbol(originalcode2_freeshopping)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
jns @f
xor ebx,ebx
db 89
readmem(moneyWriteAfterBuyBAOB+5,2)
//mov [esi+1c],ebx

originalcode2_freeshopping:
readmem(moneyWriteAfterBuyBAOB+7,7)
//pop edi
//pop esi
//pop ebx
//pop ebp
//ret 0008

exit2:
jmp returnhere2

///

moneyWriteAfterBuyBAOB+7: //"Secret_of_Mana.exe"+1387C9:
jmp newmem2
nop
nop
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
moneyWriteAfterBuyBAOB+7: //"Secret_of_Mana.exe"+1387C9:
readmem(originalcode2_freeshopping,7)
//db 5F 5E 5B 5D C2 08 00
//Alt: pop edi
//Alt: pop esi
//Alt: pop ebx
//Alt: pop ebp
//Alt: ret 0008

unregistersymbol(originalcode2_freeshopping)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>80</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="07063C1C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>07063C1C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="07063C28"/>
          <VariableType>4 Bytes</VariableType>
          <Address>07063C28</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"No description"</Description>
          <LastState Value="34" RealAddress="011DE02C"/>
          <VariableType>4 Bytes</VariableType>
          <Address>Secret_of_Mana.exe+DDE02C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>107</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>2B2250D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>108</ID>
          <Description>"No Description"</Description>
          <LastState Value="1" RealAddress="0706D378"/>
          <VariableType>4 Bytes</VariableType>
          <Address>0706D378</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"No Description"</Description>
          <LastState Value="117886888" RealAddress="0706CFC0"/>
          <VariableType>4 Bytes</VariableType>
          <Address>0706CFC0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"weapon auto level up .1"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(weaponChkMaxLevelAOB,Secret_of_Mana.exe,0F 4F ** ** 39 ** 7E)
registersymbol(weaponChkMaxLevelAOB)

alloc(newmem,2048)
label(returnhere)
label(originalcode_maxweaponlevel)
registersymbol(originalcode_maxweaponlevel)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
readmem(weaponChkMaxLevelAOB,6)
//cmovg eax,[ebp-5c]
//cmp [esi],eax
jge @f
db 89
readmem(weaponChkMaxLevelAOB+5,1)
//mov [esi],eax
readmem(weaponChkMaxLevelAOB+4,2)
jmp exit

originalcode_maxweaponlevel:
readmem(weaponChkMaxLevelAOB,6)
//cmovg eax,[ebp-5C]
//cmp [esi],eax

exit:
jmp returnhere

///

weaponChkMaxLevelAOB: //"Secret_of_Mana.exe"+16F337:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
weaponChkMaxLevelAOB: //"Secret_of_Mana.exe"+16F337:
readmem(originalcode_maxweaponlevel,6)
//db 0F 4F 45 A4 39 06
//Alt: cmovg eax,[ebp-5C]
//Alt: cmp [esi],eax

unregistersymbol(originalcode_maxweaponlevel)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075B8730</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>23077400</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"mana chk for magic menu display"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMPForMenuDisplayAOB,Secret_of_Mana.exe,3B ** ** ** ** ** 7F ** 8B ** ** 8B C1)
registersymbol(cJmpIfNotEnoughMPForMenuDisplayAOB)

alloc(originalcode_ingoremp,4)
registersymbol(originalcode_ingoremp)

originalcode_ingoremp:
readmem(cJmpIfNotEnoughMPForMenuDisplayAOB+6,2)

///

cJmpIfNotEnoughMPForMenuDisplayAOB+6: //"Secret_of_Mana.exe"+223F34:
db 90 90



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMPForMenuDisplayAOB+6: //"Secret_of_Mana.exe"+223F34:
readmem(originalcode_ingoremp,2)
//db 7F 1D
//Alt: jg Secret_of_Mana.exe+223F53

unregistersymbol(originalcode_ingoremp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115</ID>
          <Description>"jmp if not enough mp on cast 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMPOnCast1AOB,Secret_of_Mana.exe,3B ** ** ** ** ** 0F 8F ** ** ** ** 53)
registersymbol(cJmpIfNotEnoughMPOnCast1AOB)

alloc(originalcode2_ingoremp,4)
registersymbol(originalcode2_ingoremp)

originalcode2_ingoremp:
readmem(cJmpIfNotEnoughMPOnCast1AOB+6,6)

///

cJmpIfNotEnoughMPOnCast1AOB+6: //"Secret_of_Mana.exe"+22C39F:
db 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMPOnCast1AOB+6: //"Secret_of_Mana.exe"+22C39F:
readmem(originalcode2_ingoremp,6)
//db 0F 8F E5 00 00 00
//Alt: jg Secret_of_Mana.exe+22C48A

unregistersymbol(originalcode2_ingoremp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"jmp if enough mp on cast 2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfEnoughMpOnCast2AOB,Secret_of_Mana.exe,8B ** ** ** ** ** ** 2B C6 79)
registersymbol(cJmpIfEnoughMpOnCast2AOB)

cJmpIfEnoughMpOnCast2AOB+9: //"Secret_of_Mana.exe"+1849A2:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfEnoughMpOnCast2AOB+9: //"Secret_of_Mana.exe"+1849A2:
db 79
//Alt: jns
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"jmp if not enough mp on shortcut cast"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(cJmpIfNotEnoughMPOnShortcutCastAOB,Secret_of_Mana.exe,39 ** ** ** ** ** 0F 8C ** ** ** ** 8B ** ** B8)
registersymbol(cJmpIfNotEnoughMPOnShortcutCastAOB)

alloc(originalcode4_ingoremp,4)
registersymbol(originalcode4_ingoremp)

originalcode4_ingoremp:
readmem(cJmpIfNotEnoughMPOnShortcutCastAOB+6,6)

///

cJmpIfNotEnoughMPOnShortcutCastAOB+6: //"Secret_of_Mana.exe"+22F1C0:
db 90 90 90 90 90 90


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
cJmpIfNotEnoughMPOnShortcutCastAOB+6: //"Secret_of_Mana.exe"+22F1C0:
readmem(originalcode4_ingoremp,6)
//db 0F 8C 62 02 00 00
//Alt: jl Secret_of_Mana.exe+22F428

unregistersymbol(originalcode4_ingoremp)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"No description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>075B8914</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"No description"</Description>
          <LastState Value="4263528417" RealAddress="2291C750"/>
          <VariableType>4 Bytes</VariableType>
          <Address>2291C750</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"No description"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>075B8764</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>165</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(ghhg)
registersymbol(ghhg)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm2,[ghhg]

originalcode:
movss [esi+00000250],xmm2

exit:
jmp returnhere

///
ghhg:
dd (float)0.1

"Secret_of_Mana.exe"+109596:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+109596:
db F3 0F 11 96 50 02 00 00
//Alt: movss [esi+00000250],xmm2

unregistersymbol(ghhg)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"No description"</Description>
          <LastState Value="3.573311084E-43" RealAddress="17F8E50C"/>
          <VariableType>Float</VariableType>
          <Address>17F8E50C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"No Description"</Description>
          <LastState Value="255" RealAddress="17F8E514"/>
          <VariableType>4 Bytes</VariableType>
          <Address>17F8E514</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>171</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(gyhth)
registersymbol(gyhth)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mulss xmm0,[gyhth]

originalcode:
movss [eax+30],xmm0

exit:
jmp returnhere

///
gyhth:
dd (float)0.2
///

"Secret_of_Mana.exe"+10C5FC:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+10C5FC:
db F3 0F 11 40 30
//Alt: movss [eax+30],xmm0

unregistersymbol(gyhth)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>172</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1DFBF938"/>
          <VariableType>Float</VariableType>
          <Address>1DFBF938</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1DFBF938"/>
          <VariableType>Float</VariableType>
          <Address>1DFBF938</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>175</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="011DDF90"/>
          <VariableType>Float</VariableType>
          <Address>Secret_of_Mana.exe+DDDF90</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>176</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov [esi+00000248],(FLOAT)0.5 //00000000

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+10A260:
jmp newmem
nop
nop
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+10A260:
db C7 86 48 02 00 00 00 00 00 00
//Alt: mov [esi+00000248],00000000
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"No description"</Description>
          <LastState Value="00000000" RealAddress="20910C4C"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>20910C4C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>178</ID>
          <Description>"No description"</Description>
          <LastState Value="00000000" RealAddress="23D96A58"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>23D96A58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>179</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="23D96A58"/>
          <VariableType>Float</VariableType>
          <Address>23D96A58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>180</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(otkkoi)
registersymbol(otkkoi)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
lea ebp,[eax+esi*4]
cmp ebp,23D96A58
jne @f
mulss xmm0,[otkkoi]

originalcode:
movss [eax+esi*4],xmm0

exit:
jmp returnhere

///
otkkoi:
dd (float)0.5
///

"Secret_of_Mana.exe"+3A787F:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A787F:
db F3 0F 11 04 B0
//Alt: movss [eax+esi*4],xmm0

unregistersymbol(otkkoi)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>181</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(otkkoi)
registersymbol(otkkoi)

alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
movss xmm0,[otkkoi]
jmp exit

originalcode:
movss xmm0,[ecx+eax]

exit:
jmp returnhere

///
otkkoi:
dd (float)0.2
///

"Secret_of_Mana.exe"+3A2E15:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A2E15:
db F3 0F 10 04 01
//Alt: movss xmm0,[ecx+eax]

unregistersymbol(otkkoi)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>182</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov eax,(float)0.2

originalcode:
//mov eax,[eax+ecx-10]
mov [ecx-14],eax

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+3A38F9:
jmp newmem
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A38F9:
db 8B 44 08 F0 89 41 EC
//Alt: mov eax,[eax+ecx-10]
//Alt: mov [ecx-14],eax
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>184</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1B489604"/>
          <VariableType>Float</VariableType>
          <Address>1B489604</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>183</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="1B489608"/>
          <VariableType>Float</VariableType>
          <Address>1B489608</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>191</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>182D4B5C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>190</ID>
          <Description>"No Description"</Description>
          <VariableType>Float</VariableType>
          <Address>182D4B60</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>192</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1B48962C"/>
          <VariableType>Float</VariableType>
          <Address>1B48962C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>193</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1B489630"/>
          <VariableType>Float</VariableType>
          <Address>1B489630</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>194</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp [esp+8],"Secret_of_Mana.exe"+F68AA
jne @f
//walk stage writes on standing still
//move stage writes on moving
movss [eax+esi*4],xmm0
jmp originalcode
/*
@@:
cmp [esp+8],"Secret_of_Mana.exe"+F4375
jne @f
//walk stage writes on change start
movss [eax+esi*4],xmm0
jmp originalcode

@@:
cmp [esp+8],"Secret_of_Mana.exe"+F6802
jne @f
//move stage writes on accel
movss [eax+esi*4],xmm0
jmp originalcode
*/
@@:
movss [eax+esi*4],xmm0

originalcode:
movss [eax+esi*4],xmm0

exit:
jmp returnhere

///

"Secret_of_Mana.exe"+3A787F:
jmp newmem
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"Secret_of_Mana.exe"+3A787F:
db F3 0F 11 04 B0
//Alt: movss [eax+esi*4],xmm0
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>195</ID>
          <Description>"No Description"</Description>
          <LastState Value="0" RealAddress="1B85D590"/>
          <VariableType>Float</VariableType>
          <Address>1B85D590</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>196</ID>
          <Description>"No description"</Description>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>Byte</VariableType>
          <Address>16401A58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>197</ID>
          <Description>"No Description"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>16401A58</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>198</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="011DDD50"/>
          <VariableType>Byte</VariableType>
          <Address>Secret_of_Mana.exe+DDDD50</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>199</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="011DDFC4"/>
          <VariableType>Byte</VariableType>
          <Address>Secret_of_Mana.exe+DDDFC4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>200</ID>
          <Description>"No description"</Description>
          <LastState Value="0" RealAddress="011DDFE0"/>
          <VariableType>Byte</VariableType>
          <Address>Secret_of_Mana.exe+DDDFE0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>201</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(controllingPlayerReadAOB,Secret_of_Mana.exe,8B ** ** ** ** ** 83 ** ** ** ** ** ** ** 75 ** 33 C0 8D)
registersymbol(controllingPlayerReadAOB)

label(pControllingPlayer)
registersymbol(pControllingPlayer)

alloc(newmem2,2048)
label(returnhere2)
label(originalcode2_enable)
registersymbol(originalcode2_enable)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
lea eax,[esi+8e0]
mov [pControllingPlayer],eax

originalcode2_enable:
readmem(controllingPlayerReadAOB,6)
//mov eax,[esi+000008E0]

exit2:
jmp returnhere2

///
pControllingPlayer:
///

controllingPlayerReadAOB: //"Secret_of_Mana.exe"+18221A:
jmp newmem2
nop
returnhere2:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
controllingPlayerReadAOB: //"Secret_of_Mana.exe"+18221A:
readmem(originalcode2_enable,6)
//db 8B 86 E0 08 00 00
//Alt: mov eax,[esi+000008E0]

unregistersymbol(pControllingPlayer)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>163</ID>
          <Description>"movement mod"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
define(fastsprintspeedmultiplierdefault,(float)3)
define(walkspeedmultiplierdefault,(float)0.5)

aobscanmodule(movementSpeedWritesAOB,Secret_of_Mana.exe,F3 0F 10 ** ** F3 0F 58 ** ** ** ** ** F3 0F 11 ** ** ** ** ** 8B)
registersymbol(movementSpeedWritesAOB)

label(dMovementSpeedMultiplier)
registersymbol(dMovementSpeedMultiplier)
label(bFastSprintKey)
registersymbol(bFastSprintKey)
label(bWalkKey)
registersymbol(bWalkKey)

alloc(newmem,2048)
label(returnhere)
label(originalcode_fastsprintkey)
registersymbol(originalcode_fastsprintkey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
cmp byte ptr [bFastSprintKey],1
jne @f
pushad
push 14 //CAPS LOCK key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
mulss xmm0,[dMovementSpeedMultiplier]
jmp end

@@:
cmp byte ptr [bWalkKey],1
jne @f
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
mulss xmm0,[dMovementSpeedMultiplier+4]
jmp end

end:

originalcode_fastsprintkey:
readmem(movementSpeedWritesAOB+d,8)
//movss [esi+00000258],xmm0

exit:
jmp returnhere

///
dMovementSpeedMultiplier:
dd fastsprintspeedmultiplierdefault
dd walkspeedmultiplierdefault
bFastSprintKey:
dd 0
bWalkKey:
dd 0

///

movementSpeedWritesAOB+d: //"Secret_of_Mana.exe"+1099E5:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
movementSpeedWritesAOB+d: //"Secret_of_Mana.exe"+1099E5:
readmem(originalcode_fastsprintkey,8)
//db F3 0F 11 86 58 02 00 00
//Alt: movss [esi+00000258],xmm0

unregistersymbol(originalcode_fastsprintkey)
unregistersymbol(dMovementSpeedMultiplier)
unregistersymbol(bFastSprintKey)
unregistersymbol(bWalkKey)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>189</ID>
              <Description>"fast sprint key .2"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
bFastSprintKey:
db 1

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
bFastSprintKey:
db 0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>166</ID>
                  <Description>"hold CapsLock"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>808080</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>185</ID>
                      <Description>"wke"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanmodule(charMovementWritesAOB,Secret_of_Mana.exe,8B ** ** F3 0F 11 ** ** 33 C0)
registersymbol(charMovementWritesAOB)

label(dWalkStage)

alloc(newmem,2048)
label(returnhere)
label(originalcode_walkkey)
registersymbol(originalcode_walkkey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
test esi,esi
jnz @f
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne endz
movss xmm0,[dWalkStage]
readmem(charMovementWritesAOB+3,5)
//movss [eax+esi*4],xmm0

@@:
pushad
push 11 //CTRL key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
je endb
readmem(charMovementWritesAOB+3,5)
//movss [eax+esi*4],xmm0
cmp [eax+esi*4],3f800000
jne @f
xorps xmm0,xmm0
movss [eax],xmm0
@@:
jmp exit

endb:
movss [eax],xmm0

/*
pushad
push 14 //CAPS LOCK key
call GetAsyncKeyState
shr ax,#15
cmp ax,1
popad
jne @f
movss [eax],xmm0

@@:
movss [eax+esi*4],xmm0
xorps xmm0,xmm0
movss [eax],xmm0
jmp exit
*/

endz:

originalcode_walkkey:
readmem(charMovementWritesAOB+3,5)
//movss [eax+esi*4],xmm0

exit:
jmp returnhere

///
dWalkStage:
dd (float)1
///

charMovementWritesAOB+3: //"Secret_of_Mana.exe"+3A787F:
jmp newmem
returnhere:

///***************************************///
bWalkKey:
db 1


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
charMovementWritesAOB+3: //"Secret_of_Mana.exe"+3A787F:
readmem(originalcode_walkkey,5)
//db F3 0F 11 04 B0
//Alt: movss [eax+esi*4],xmm0

unregistersymbol(originalcode_walkkey)

///***************************************///
bWalkKey:
db 0
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>173</ID>
                  <Description>"speed"</Description>
                  <LastState Value="0" RealAddress="0461006F"/>
                  <Color>008000</Color>
                  <VariableType>Float</VariableType>
                  <Address>dMovementSpeedMultiplier</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :addsd xmm0,[eax*8+Secret_of_Mana.exe+5B9F90]</Description>
      <Address>0051B780</Address>
      <ModuleName>Secret_of_Mana.exe</ModuleName>
      <ModuleNameOffset>11B780</ModuleNameOffset>
      <Before>
        <Byte>E6</Byte>
        <Byte>C0</Byte>
        <Byte>C1</Byte>
        <Byte>E8</Byte>
        <Byte>1F</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>04</Byte>
        <Byte>C5</Byte>
        <Byte>90</Byte>
        <Byte>9F</Byte>
        <Byte>9B</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>C0</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :cmp [ecx+00000248],eax</Description>
      <Address>005E1ED6</Address>
      <ModuleName>Secret_of_Mana.exe</ModuleName>
      <ModuleNameOffset>1E1ED6</ModuleNameOffset>
      <Before>
        <Byte>8B</Byte>
        <Byte>EC</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>39</Byte>
        <Byte>81</Byte>
        <Byte>48</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>74</Byte>
        <Byte>0B</Byte>
        <Byte>89</Byte>
        <Byte>81</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movss [eax+esi*4],xmm0</Description>
      <Address>007A787F</Address>
      <ModuleName>Secret_of_Mana.exe</ModuleName>
      <ModuleNameOffset>3A787F</ModuleNameOffset>
      <Before>
        <Byte>73</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>34</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>04</Byte>
        <Byte>B0</Byte>
      </Actual>
      <After>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>5E</Byte>
        <Byte>5D</Byte>
        <Byte>C2</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>staminaSetZero1AOB</Name>
      <Address>0050D91E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>staminaSetZero2AOB</Name>
      <Address>00510B4A</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>http://fearlessrevolution.com/viewtopic.php?f=4&amp;t=6041
</Comments>
</CheatTable>
