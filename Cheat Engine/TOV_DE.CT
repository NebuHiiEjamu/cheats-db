<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Tales of Vesperia Definitive Edition"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
		  <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>100</ID>
              <Description>"[Scripts]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2000</ID>
                  <Description>"Damage Modifier Script"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(DamageModAOB,TOV_DE.exe,8B 4F 4C 8B 47 54 03 CB 3B C8 7E 10) // should be unique
registersymbol(DamageModAOB)
alloc(newmem,2048,DamageModAOB)

label(originalcode)
label(return)
label(GodMode)
registersymbol(GodMode)
label(OneHitKill)
registersymbol(OneHitKill)
label(EnemyDamageMultiplier)
registersymbol(EnemyDamageMultiplier)
label(HeroDamageMultiplier)
registersymbol(HeroDamageMultiplier)
label(EnemyHealingMultiplier)
registersymbol(EnemyHealingMultiplier)
label(HeroHealingMultiplier)
registersymbol(HeroHealingMultiplier)
label(HeroCannotDie)
registersymbol(HeroCannotDie)
label(AffectYuriOnly)
registersymbol(AffectYuriOnly)

newmem:
  mov ecx,[rdi+4C]
  cmp [rdi+04],0
  jne EnemyHit
  cmp [rdi+08],0
  jne EnemyHit
HeroHit:
  cmp [AffectYuriOnly],0
  je @F
  cmp [rdi+44],1
  jne originalcode
@@:
  cmp ebx,0
  jl HeroDamageHit
  jg HeroHealingHit
  jmp originalcode
HeroDamageHit:
  cmp [HeroDamageMultiplier],(float)0.0
  je CheckGodMode
  neg ebx
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [HeroDamageMultiplier]
  fistp dword ptr [esp]
  pop ebx
  neg ebx
CheckGodMode:
  cmp [GodMode],1
  jne CheckHeroCannotDie
  xor ebx,ebx
  jmp originalcode
CheckHeroCannotDie:
  cmp [HeroCannotDie],1
  jne originalcode
  neg ebx
  cmp ebx,ecx
  jl @F
  xor ebx,ebx
@@:
  neg ebx
  jmp originalcode
HeroHealingHit:
  cmp [HeroHealingMultiplier],(float)0.0
  je originalcode
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [HeroHealingMultiplier]
  fistp dword ptr [esp]
  pop ebx
  jmp originalcode
EnemyHit:
  cmp [AffectYuriOnly],0
  je @F
  cmp [r10+44],1
  jne originalcode
@@:
  cmp ebx,0
  jl EnemyDamageHit
  jg EnemyHealingHit
  jmp CheckOneHitKill
EnemyDamageHit:
  cmp [EnemyDamageMultiplier],(float)0.0
  je CheckOneHitKill
  neg ebx
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [EnemyDamageMultiplier]
  fistp dword ptr [esp]
  pop ebx
  neg ebx
CheckOneHitKill:
  cmp [OneHitKill],1
  jne originalcode
  mov ebx,#99999
  neg ebx
  jmp originalcode
EnemyHealingHit:
  cmp [EnemyHealingMultiplier],(float)0.0
  je originalcode
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [EnemyHealingMultiplier]
  fistp dword ptr [esp]
  pop ebx
    
originalcode:
  mov eax,[rdi+54]
  add ecx,ebx

  jmp return

GodMode:
dq 0
OneHitKill:
dq 0
EnemyDamageMultiplier:
dq (float)5.0
HeroDamageMultiplier:
dq (float)0.125
EnemyHealingMultiplier:
dq (float)0.0
HeroHealingMultiplier:
dq (float)2.0
HeroCannotDie:
dq 1
AffectYuriOnly:
dq 0

DamageModAOB:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

DamageModAOB:
  db 8B 4F 4C 8B 47 54 03 CB

unregistersymbol(DamageModAOB)
unregistersymbol(GodMode)
unregistersymbol(OneHitKill)
unregistersymbol(EnemyDamageMultiplier)
unregistersymbol(EnemyHealingMultiplier)
unregistersymbol(HeroDamageMultiplier)
unregistersymbol(HeroHealingMultiplier)
unregistersymbol(HeroCannotDie)
unregistersymbol(AffectYuriOnly)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2001</ID>
                      <Description>"Enemy Damage Multiplier (Set to Zero = Off; Otherwise multiplier)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>EnemyDamageMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2002</ID>
                      <Description>"One Hit Kill"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>OneHitKill</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2003</ID>
                      <Description>"Enemy Healing Multiplier (Set to Zero = Off; Otherwise multiplier, e.g. 0.5 is half healing)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>EnemyHealingMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2004</ID>
                      <Description>"God Mode"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>GodMode</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2005</ID>
                      <Description>"Hero Cannot Die (Lose HP Unless The Hit Will Kill You If On)"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>HeroCannotDie</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2006</ID>
                      <Description>"Hero Damage Multiplier (Set to Zero = Off; Otherwise multiplier, e.g. 0.5 is half damage)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>HeroDamageMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2007</ID>
                      <Description>"Hero Healing Multiplier (Set to Zero = Off; Otherwise multiplier)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>HeroHealingMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2008</ID>
                      <Description>"Affect Yuri Only"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>AffectYuriOnly</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2100</ID>
                  <Description>"Infinite In-Battle TP"</Description>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(TPDamageModAOB,TOV_DE.exe,8B 4F 50 8B 47 58 03 CB 3B C8 7E 10) // should be unique
registersymbol(TPDamageModAOB)
alloc(newmem,2048,TPDamageModAOB)

label(originalcode)
label(return)

newmem:
  cmp [rdi+04],0
  jne originalcode
  cmp [rdi+08],0
  jne originalcode
  cmp ebx,0
  jge originalcode
  xor ebx,ebx
  
originalcode:
  mov ecx,[rdi+50]
  mov eax,[rdi+58]
  add ecx,ebx
  jmp return

TPDamageModAOB:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

TPDamageModAOB:
  db 8B 4F 50 8B 47 58 03 CB

unregistersymbol(TPDamageModAOB)
dealloc(newmem)
</AssemblerScript>
				</CheatEntry>				
                <CheatEntry>
                  <ID>2200</ID>
                  <Description>"Infinite Item Usage or Set Item Amount"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteItemUsageAOB,TOV_DE.exe,8B 7C 81 38 4C 8D 34 81 41 03 F8) // should be unique
alloc(newmem,2048,InfiniteItemUsageAOB)
registersymbol(InfiniteItemUsageAOB)


label(return)
label(originalcode)
label(SetItemAmount)
registersymbol(SetItemAmount)

newmem:
  cmp byte ptr [SetItemAmount],0
  je originalcode
  push r15
  xor r15,r15
  mov r15d,[SetItemAmount]
  cmp [rcx+rax*4+38],r15l
  jge @F
  mov [rcx+rax*4+38],r15l
@@:
  pop r15

originalcode:
  mov edi,[rcx+rax*4+38]
  lea r14,[rcx+rax*4]
  cmp r8d,0
  jge @F
  xor r8d,r8d
@@:
  add edi,r8d
  jmp return

SetItemAmount:
db #9
    
InfiniteItemUsageAOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
  return:
  
[DISABLE]

InfiniteItemUsageAOB:
  db 8B 7C 81 38 4C 8D 34 81 41 03 F8

  
unregistersymbol(SetItemAmount)
unregistersymbol(InfiniteItemUsageAOB)
  
dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2201</ID>
                      <Description>"Set Item Amount On Use/Discard (0 = Off)"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>SetItemAmount</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2300</ID>
                  <Description>"Art Usage Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(ArtUsageModAOB,TOV_DE.exe,8B 8A D8 04 00 00 41 03 C8 3B C8) // should be unique
registersymbol(ArtUsageModAOB)
alloc(newmem,2048,ArtUsageModAOB)

label(originalcode)
label(return)
label(ArtUsageMult)
registersymbol(ArtUsageMult)

newmem:
  imul r8d,[ArtUsageMult]
  
originalcode:
  mov ecx,[rdx+00004D8]
  jmp return

ArtUsageMult:
dq #10

ArtUsageModAOB:
  jmp newmem
  nop
return:

[DISABLE]

ArtUsageModAOB:
  db 8B 8A D8 04 00 00

unregistersymbol(ArtUsageModAOB)
unregistersymbol(ArtUsageMult)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2301</ID>
                      <Description>"Art Usage Multiplier"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>ArtUsageMult</Address>
                    </CheatEntry>
                  </CheatEntries>
				</CheatEntry>
				<CheatEntry>
				  <ID>3000</ID>
				  <Description>"Exp Multiplier"</Description>
				  <Options moHideChildren="1" />
				  <VariableType>Auto Assembler Script</VariableType>
				  <AssemblerScript>[ENABLE]

aobscanmodule(ExpMultAOB,TOV_DE.exe,8B 49 60 03 CA 3B C8 7F 09)
registersymbol(ExpMultAOB)
alloc(newmem,2048,ExpMultAOB)

label(returnhere)
label(originalcode)
label(exit)

label(ExpMult)
registersymbol(ExpMult)

newmem:
  imul edx,[ExpMult]

originalcode:
  mov ecx,[rcx+60]
  add ecx,edx

exit:
  jmp returnhere

ExpMult:
dq #5

ExpMultAOB:
  jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)

ExpMultAOB:
db 8B 49 60 03 CA

unregistersymbol(ExpMultAOB)
unregistersymbol(ExpMult)
</AssemblerScript>
				  <CheatEntries>
					<CheatEntry>
					  <ID>3001</ID>
					  <Description>"Exp Multiplier"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>ExpMult</Address>
					</CheatEntry>
				  </CheatEntries>
				</CheatEntry>
				<CheatEntry>
				  <ID>3100</ID>
				  <Description>"LP Multiplier (Quick Gain Skills)"</Description>
				  <Options moHideChildren="1" />
				  <VariableType>Auto Assembler Script</VariableType>
				  <AssemblerScript>[ENABLE]
aobscanmodule(LPMultAOB,TOV_DE.exe,42 8B 8C 8F 10 27 00 00 41 03 CE 3B CA)
registersymbol(LPMultAOB)
alloc(newmem,2048,LPMultAOB)

label(returnhere)
label(originalcode)
label(exit)

label(LPMult)
registersymbol(LPMult)

newmem:
  imul r14,[LPMult]

originalcode:
  mov ecx,[rdi+r9*4+00002710]

exit:
  jmp returnhere

LPMult:
dq #25

LPMultAOB:
  jmp newmem
  nop
  nop
  nop
returnhere:

[DISABLE]
dealloc(newmem)

LPMultAOB:
db 42 8B 8C 8F 10 27 00 00

unregistersymbol(LPMultAOB)
unregistersymbol(LPMult)
</AssemblerScript>
				  <CheatEntries>
					<CheatEntry>
					  <ID>3101</ID>
					  <Description>"LP Multiplier"</Description>
					  <VariableType>4 Bytes</VariableType>
					  <Address>LPMult</Address>
					</CheatEntry>
				  </CheatEntries>
				</CheatEntry>
				<CheatEntry>
				  <ID>3300</ID>
				  <Description>"Infinite SP"</Description>
				  <Options moHideChildren="1" />
				  <VariableType>Auto Assembler Script</VariableType>
				  <AssemblerScript>[ENABLE]
aobscanmodule(SPAOB,TOV_DE.exe,8B 8B F8 24 00 00 8B 83 FC 24 00 00 2B CE 3B C8)
registersymbol(SPAOB)

SPAOB+C:
  db 90 90

[DISABLE]

SPAOB+C:
  db 2B CE

unregistersymbol(SPAOB)
</AssemblerScript>
				</CheatEntry>				
			  </CheatEntries>
			</CheatEntry>
            <CheatEntry>
              <ID>500</ID>
              <Description>"Pointers"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>501</ID>
                  <Description>"Gald"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>TOV_DE.exe+1178E00+30</Address>
                </CheatEntry>
				<CheatEntry>
				  <ID>28</ID>
				  <Description>"[ Tools ] (Original By Exeter)"</Description>
				  <Options moHideChildren="1"/>
				  <VariableType>Auto Assembler Script</VariableType>
				  <AssemblerScript>[ENABLE]

TOV_DE.exe + 1178E3C:
InventoryBasePtr:

registersymbol(InventoryBasePtr)

[DISABLE]

unregistersymbol(InventoryBasePtr)
			</AssemblerScript>
				  <CheatEntries>
					<CheatEntry>
					  <ID>29</ID>
					  <Description>"Apple Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>32</ID>
					  <Description>"Lemon Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+4</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>33</ID>
					  <Description>"Orange Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+8</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>35</ID>
					  <Description>"Pineapple Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>36</ID>
					  <Description>"Melange Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+10</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>37</ID>
					  <Description>"Miracle Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+14</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>38</ID>
					  <Description>"Specific"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+18</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>39</ID>
					  <Description>"Treat"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+1C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>40</ID>
					  <Description>"Special Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+20</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>41</ID>
					  <Description>"Lottery Gel"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+24</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>42</ID>
					  <Description>"Poison Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+28</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>43</ID>
					  <Description>"Paralysis Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+2C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>44</ID>
					  <Description>"Stone Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+30</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>45</ID>
					  <Description>"Seal Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+34</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>46</ID>
					  <Description>"Weak Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+38</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>47</ID>
					  <Description>"Mind Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+3C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>48</ID>
					  <Description>"Life Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+40</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>49</ID>
					  <Description>"Cure Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+44</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>50</ID>
					  <Description>"Dinei Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+48</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>51</ID>
					  <Description>"Panacea Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+4C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>52</ID>
					  <Description>"Holy Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+50</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>53</ID>
					  <Description>"Dark Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+54</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>54</ID>
					  <Description>"Syrup Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+58</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>55</ID>
					  <Description>"Nectar Bottle"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+5C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>57</ID>
					  <Description>"Sage"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+64</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>58</ID>
					  <Description>"Red Sage"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+68</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>59</ID>
					  <Description>"Savory"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+6C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>60</ID>
					  <Description>"Red Savory"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+70</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>61</ID>
					  <Description>"Lavender"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+74</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>62</ID>
					  <Description>"Red Lavender"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+78</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>63</ID>
					  <Description>"Verbena"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+7C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>64</ID>
					  <Description>"Red Verbena"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+80</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>65</ID>
					  <Description>"Chamomile"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+84</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>66</ID>
					  <Description>"Red Chamomile"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+88</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>67</ID>
					  <Description>"Basil"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+8C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>68</ID>
					  <Description>"Red Basil"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+90</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>69</ID>
					  <Description>"Saffron"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+94</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>70</ID>
					  <Description>"Red Saffron"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+98</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>31</ID>
					  <Description>"Magic Lens"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+9C</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>72</ID>
					  <Description>"All-Divide"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+A0</Address>
					</CheatEntry>
					<CheatEntry>
					  <ID>73</ID>
					  <Description>"Hourglass"</Description>
					  <VariableType>Byte</VariableType>
					  <Address>InventoryBasePtr+A4</Address>
					</CheatEntry>
				  </CheatEntries>
				</CheatEntry>				
			  </CheatEntries>
			</CheatEntry>
		  </CheatEntries>
		</CheatEntry>
	  </CheatEntries>
	</CheatEntry>
  </CheatEntries>
</CheatTable>
			