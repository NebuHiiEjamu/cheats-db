<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="28">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"Tales of Vesperia Definitive Edition"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Enable"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>100</ID>
              <Description>"[Scripts]"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>2000</ID>
                  <Description>"Damage Modifier Script"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(DamageModAOB,TOV_DE.exe,8B 4F 4C 8B 47 54 03 CB 3B C8 7E 10) // should be unique
registersymbol(DamageModAOB)
alloc(newmem,2048,DamageModAOB)

label(originalcode)
label(return)
label(GodMode)
registersymbol(GodMode)
label(OneHitKill)
registersymbol(OneHitKill)
label(EnemyDamageMultiplier)
registersymbol(EnemyDamageMultiplier)
label(HeroDamageMultiplier)
registersymbol(HeroDamageMultiplier)
label(EnemyHealingMultiplier)
registersymbol(EnemyHealingMultiplier)
label(HeroHealingMultiplier)
registersymbol(HeroHealingMultiplier)
label(HeroCannotDie)
registersymbol(HeroCannotDie)
label(AffectYuriOnly)
registersymbol(AffectYuriOnly)

newmem:
  mov ecx,[rdi+4C]
  cmp [rdi+04],0
  jne EnemyHit
  cmp [rdi+08],0
  jne EnemyHit
HeroHit:
  cmp [AffectYuriOnly],0
  je @F
  cmp [rdi+44],1
  jne originalcode
@@:
  cmp ebx,0
  jl HeroDamageHit
  jg HeroHealingHit
  jmp originalcode
HeroDamageHit:
  cmp [HeroDamageMultiplier],(float)0.0
  je CheckGodMode
  neg ebx
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [HeroDamageMultiplier]
  fistp dword ptr [esp]
  pop ebx
  neg ebx
CheckGodMode:
  cmp [GodMode],1
  jne CheckHeroCannotDie
  xor ebx,ebx
  jmp originalcode
CheckHeroCannotDie:
  cmp [HeroCannotDie],1
  jne originalcode
  neg ebx
  cmp ebx,ecx
  jl @F
  xor ebx,ebx
@@:
  neg ebx
  jmp originalcode
HeroHealingHit:
  cmp [HeroHealingMultiplier],(float)0.0
  je originalcode
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [HeroHealingMultiplier]
  fistp dword ptr [esp]
  pop ebx
  jmp originalcode
EnemyHit:
  cmp [AffectYuriOnly],0
  je @F
  cmp r10,1000
  jb @F
  cmp [r10+44],1
  jne originalcode
@@:
  cmp ebx,0
  jl EnemyDamageHit
  jg EnemyHealingHit
  jmp CheckOneHitKill
EnemyDamageHit:
  cmp [EnemyDamageMultiplier],(float)0.0
  je CheckOneHitKill
  neg ebx
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [EnemyDamageMultiplier]
  fistp dword ptr [esp]
  pop ebx
  neg ebx
CheckOneHitKill:
  cmp [OneHitKill],1
  jne originalcode
  mov ebx,#99999
  neg ebx
  jmp originalcode
EnemyHealingHit:
  cmp [EnemyHealingMultiplier],(float)0.0
  je originalcode
  push ebx
  fild dword ptr [esp]
  fmul dword ptr [EnemyHealingMultiplier]
  fistp dword ptr [esp]
  pop ebx
    
originalcode:
  mov eax,[rdi+54]
  add ecx,ebx

  jmp return

GodMode:
dq 0
OneHitKill:
dq 0
EnemyDamageMultiplier:
dq (float)5.0
HeroDamageMultiplier:
dq (float)0.125
EnemyHealingMultiplier:
dq (float)0.0
HeroHealingMultiplier:
dq (float)2.0
HeroCannotDie:
dq 1
AffectYuriOnly:
dq 0

DamageModAOB:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

DamageModAOB:
  db 8B 4F 4C 8B 47 54 03 CB

unregistersymbol(DamageModAOB)
unregistersymbol(GodMode)
unregistersymbol(OneHitKill)
unregistersymbol(EnemyDamageMultiplier)
unregistersymbol(EnemyHealingMultiplier)
unregistersymbol(HeroDamageMultiplier)
unregistersymbol(HeroHealingMultiplier)
unregistersymbol(HeroCannotDie)
unregistersymbol(AffectYuriOnly)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2001</ID>
                      <Description>"Enemy Damage Multiplier (Set to Zero = Off; Otherwise multiplier)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>EnemyDamageMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2002</ID>
                      <Description>"One Hit Kill"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>OneHitKill</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2003</ID>
                      <Description>"Enemy Healing Multiplier (Set to Zero = Off; Otherwise multiplier, e.g. 0.5 is half healing)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>EnemyHealingMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2004</ID>
                      <Description>"God Mode"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>GodMode</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2005</ID>
                      <Description>"Hero Cannot Die (Lose HP Unless The Hit Will Kill You If On)"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>HeroCannotDie</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2006</ID>
                      <Description>"Hero Damage Multiplier (Set to Zero = Off; Otherwise multiplier, e.g. 0.5 is half damage)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>HeroDamageMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2007</ID>
                      <Description>"Hero Healing Multiplier (Set to Zero = Off; Otherwise multiplier)"</Description>
                      <VariableType>Float</VariableType>
                      <Address>HeroHealingMultiplier</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>2008</ID>
                      <Description>"Affect Yuri Only"</Description>
                      <DropDownList DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
                      <VariableType>4 Bytes</VariableType>
                      <Address>AffectYuriOnly</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2100</ID>
                  <Description>"Infinite In-Battle TP"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(TPDamageModAOB,TOV_DE.exe,8B 4F 50 8B 47 58 03 CB 3B C8 7E 10) // should be unique
registersymbol(TPDamageModAOB)
alloc(newmem,2048,TPDamageModAOB)

label(originalcode)
label(return)

newmem:
  cmp [rdi+04],0
  jne originalcode
  cmp [rdi+08],0
  jne originalcode
  cmp ebx,0
  jge originalcode
  xor ebx,ebx
  
originalcode:
  mov ecx,[rdi+50]
  mov eax,[rdi+58]
  add ecx,ebx
  jmp return

TPDamageModAOB:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

TPDamageModAOB:
  db 8B 4F 50 8B 47 58 03 CB

unregistersymbol(TPDamageModAOB)
dealloc(newmem)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>2200</ID>
                  <Description>"Infinite Item Usage or Set Item Amount"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(InfiniteItemUsageAOB,TOV_DE.exe,8B 7C 81 38 4C 8D 34 81 41 03 F8) // should be unique
alloc(newmem,2048,InfiniteItemUsageAOB)
registersymbol(InfiniteItemUsageAOB)


label(return)
label(originalcode)
label(SetItemAmount)
registersymbol(SetItemAmount)

newmem:
  cmp byte ptr [SetItemAmount],0
  je originalcode
  push r15
  xor r15,r15
  mov r15d,[SetItemAmount]
  cmp [rcx+rax*4+38],r15l
  jge @F
  mov [rcx+rax*4+38],r15l
@@:
  pop r15

originalcode:
  mov edi,[rcx+rax*4+38]
  lea r14,[rcx+rax*4]
  cmp r8d,0
  jge @F
  xor r8d,r8d
@@:
  add edi,r8d
  jmp return

SetItemAmount:
db #9
    
InfiniteItemUsageAOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
  return:
  
[DISABLE]

InfiniteItemUsageAOB:
  db 8B 7C 81 38 4C 8D 34 81 41 03 F8

  
unregistersymbol(SetItemAmount)
unregistersymbol(InfiniteItemUsageAOB)
  
dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2201</ID>
                      <Description>"Set Item Amount On Use/Discard (0 = Off)"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>SetItemAmount</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>2300</ID>
                  <Description>"Art Usage Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(ArtUsageModAOB,TOV_DE.exe,8B 8A D8 04 00 00 41 03 C8 3B C8) // should be unique
registersymbol(ArtUsageModAOB)
alloc(newmem,2048,ArtUsageModAOB)

label(originalcode)
label(return)
label(ArtUsageMult)
registersymbol(ArtUsageMult)

newmem:
  imul r8d,[ArtUsageMult]
  
originalcode:
  mov ecx,[rdx+00004D8]
  jmp return

ArtUsageMult:
dq #10

ArtUsageModAOB:
  jmp newmem
  nop
return:

[DISABLE]

ArtUsageModAOB:
  db 8B 8A D8 04 00 00

unregistersymbol(ArtUsageModAOB)
unregistersymbol(ArtUsageMult)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>2301</ID>
                      <Description>"Art Usage Multiplier"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>ArtUsageMult</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3000</ID>
                  <Description>"Exp Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(ExpMultAOB,TOV_DE.exe,8B 49 60 03 CA 3B C8 7F 09)
registersymbol(ExpMultAOB)
alloc(newmem,2048,ExpMultAOB)

label(returnhere)
label(originalcode)
label(exit)

label(ExpMult)
registersymbol(ExpMult)

newmem:
  imul edx,[ExpMult]

originalcode:
  mov ecx,[rcx+60]
  add ecx,edx

exit:
  jmp returnhere

ExpMult:
dq #5

ExpMultAOB:
  jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)

ExpMultAOB:
db 8B 49 60 03 CA

unregistersymbol(ExpMultAOB)
unregistersymbol(ExpMult)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3001</ID>
                      <Description>"Exp Multiplier"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>ExpMult</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3100</ID>
                  <Description>"LP Multiplier (Quick Gain Skills)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(LPMultAOB,TOV_DE.exe,42 8B 8C 8F 10 27 00 00 41 03 CE 3B CA)
registersymbol(LPMultAOB)
alloc(newmem,2048,LPMultAOB)

label(returnhere)
label(originalcode)
label(exit)

label(LPMult)
registersymbol(LPMult)

newmem:
  imul r14,[LPMult]

originalcode:
  mov ecx,[rdi+r9*4+00002710]

exit:
  jmp returnhere

LPMult:
dq #25

LPMultAOB:
  jmp newmem
  nop
  nop
  nop
returnhere:

[DISABLE]
dealloc(newmem)

LPMultAOB:
db 42 8B 8C 8F 10 27 00 00

unregistersymbol(LPMultAOB)
unregistersymbol(LPMult)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3101</ID>
                      <Description>"LP Multiplier"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>LPMult</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3300</ID>
                  <Description>"Infinite SP"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscanmodule(SPAOB,TOV_DE.exe,8B 8B F8 24 00 00 8B 83 FC 24 00 00 2B CE 3B C8)
registersymbol(SPAOB)

SPAOB+C:
  db 90 90

[DISABLE]

SPAOB+C:
  db 2B CE

unregistersymbol(SPAOB)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3400</ID>
                  <Description>"OverLimit Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(OLModAOB,TOV_DE.exe,F3 0F 58 91 58 3C 00 00 F3 0F 11 91 58 3C 00 00 83 B9 58 1E 00 00 00 74 07) // should be unique
registersymbol(OLModAOB)
alloc(newmem,2048,OLModAOB)

label(originalcode)
label(return)

label(OLMult)
registersymbol(OLMult)
label(EnemyHit2)

newmem:
  mov [EnemyHit2],0
  cmp r10,1000
  jb originalcode
  cmp [r10+4],0
  jne EnemyHitJMP
  cmp [r10+8],0
  jne EnemyHitJMP
  comiss xmm2,xmm15
  jb originalcode
  mulss xmm2,[OLMult]
  jmp originalcode
EnemyHitJMP:
  mov [EnemyHit2],1
  
originalcode:
  addss xmm2,dword ptr [rcx+00003C58]
  movss [rcx+00003C58],xmm2
  cmp [EnemyHit2],1
  je return
  jmp OLModAOB+19

OLMult:
dq (float)25.0
EnemyHit2:
dq 0

OLModAOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
  nop
return:

[DISABLE]

OLModAOB:
  db F3 0F 58 91 58 3C 00 00 F3 0F 11 91 58 3C 00 00

unregistersymbol(OLModAOB)
unregistersymbol(OLMult)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3401</ID>
                      <Description>"OL Multiplier"</Description>
                      <VariableType>Float</VariableType>
                      <Address>OLMult</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3500</ID>
                  <Description>"Cooking EXP Multiplier"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

aobscanmodule(CookingEXPModAOB,TOV_DE.exe,8B 8A 1C 3D 00 00 41 03 C8 0F 49 C1) // should be unique
registersymbol(CookingEXPModAOB)
alloc(newmem,2048,CookingEXPModAOB)

label(originalcode)
label(return)

label(CookingEXPMult)
registersymbol(CookingEXPMult)

newmem:
  imul r8,[CookingEXPMult]
  
originalcode:
  mov ecx,[rdx+00003D1C]
  jmp return

CookingEXPMult:
dq #25

CookingEXPModAOB:
  jmp newmem
  nop 
return:

[DISABLE]

CookingEXPModAOB:
  db 8B 8A 1C 3D 00 00

unregistersymbol(CookingEXPModAOB)
unregistersymbol(CookingEXPMult)

dealloc(newmem)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>3501</ID>
                      <Description>"Cooking EXP Multiplier"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>CookingEXPMult</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>3539</ID>
                  <Description>"Free Crafting"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : TOV_DE.exe
  Version: 
  Date   : 2019-01-11
  Author : Zach

  This script does blah blah blah
}

define(address,"TOV_DE.exe"+449610)
define(bytes,89 47 34 8B 43 38)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"TOV_DE.exe"+449610)

label(code)
label(return)

newmem:

code:
  mov [rdi+34],#1
  mov eax,[rbx+38]
  jmp return

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rdi+34],eax
  // mov eax,[rbx+38]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "TOV_DE.exe"+449610

"TOV_DE.exe"+4495F2: 89 47 20                       -  mov [rdi+20],eax
"TOV_DE.exe"+4495F5: 8B 43 24                       -  mov eax,[rbx+24]
"TOV_DE.exe"+4495F8: 89 47 24                       -  mov [rdi+24],eax
"TOV_DE.exe"+4495FB: 8B 43 28                       -  mov eax,[rbx+28]
"TOV_DE.exe"+4495FE: 89 47 28                       -  mov [rdi+28],eax
"TOV_DE.exe"+449601: 8B 43 2C                       -  mov eax,[rbx+2C]
"TOV_DE.exe"+449604: 89 47 2C                       -  mov [rdi+2C],eax
"TOV_DE.exe"+449607: 8B 43 30                       -  mov eax,[rbx+30]
"TOV_DE.exe"+44960A: 89 47 30                       -  mov [rdi+30],eax
"TOV_DE.exe"+44960D: 8B 43 34                       -  mov eax,[rbx+34]
// ---------- INJECTING HERE ----------
"TOV_DE.exe"+449610: 89 47 34                       -  mov [rdi+34],eax
"TOV_DE.exe"+449613: 8B 43 38                       -  mov eax,[rbx+38]
// ---------- DONE INJECTING  ----------
"TOV_DE.exe"+449616: 89 47 38                       -  mov [rdi+38],eax
"TOV_DE.exe"+449619: 8B 43 3C                       -  mov eax,[rbx+3C]
"TOV_DE.exe"+44961C: 89 47 3C                       -  mov [rdi+3C],eax
"TOV_DE.exe"+44961F: 0F B6 43 40                    -  movzx eax,byte ptr [rbx+40]
"TOV_DE.exe"+449623: 88 47 40                       -  mov [rdi+40],al
"TOV_DE.exe"+449626: 8B 43 44                       -  mov eax,[rbx+44]
"TOV_DE.exe"+449629: 89 47 44                       -  mov [rdi+44],eax
"TOV_DE.exe"+44962C: 0F B6 43 48                    -  movzx eax,byte ptr [rbx+48]
"TOV_DE.exe"+449630: 88 47 48                       -  mov [rdi+48],al
"TOV_DE.exe"+449633: 0F B6 43 49                    -  movzx eax,byte ptr [rbx+49]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>140</ID>
                  <Description>"Infinite Overlimit"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : TOV_DE.exe
  Version: 
  Date   : 2019-01-13
  Author : Zach

  This script does blah blah blah
}

define(address,"TOV_DE.exe"+5BBB1B)
define(bytes,F3 0F 11 91 58 3C 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"TOV_DE.exe"+5BBB1B)

label(code)
label(return)

newmem:

code:
  mov [rcx+00003C58],(float)800
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rcx+00003C58],xmm2

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "TOV_DE.exe"+5BBB1B

"TOV_DE.exe"+5BBB08: CC                             -  int 3 
"TOV_DE.exe"+5BBB09: CC                             -  int 3 
"TOV_DE.exe"+5BBB0A: CC                             -  int 3 
"TOV_DE.exe"+5BBB0B: CC                             -  int 3 
"TOV_DE.exe"+5BBB0C: CC                             -  int 3 
"TOV_DE.exe"+5BBB0D: CC                             -  int 3 
"TOV_DE.exe"+5BBB0E: CC                             -  int 3 
"TOV_DE.exe"+5BBB0F: CC                             -  int 3 
"TOV_DE.exe"+5BBB10: 0F 28 D1                       -  movaps xmm2,xmm1
"TOV_DE.exe"+5BBB13: F3 0F 58 91 58 3C 00 00        -  addss xmm2,[rcx+00003C58]
// ---------- INJECTING HERE ----------
"TOV_DE.exe"+5BBB1B: F3 0F 11 91 58 3C 00 00        -  movss [rcx+00003C58],xmm2
// ---------- DONE INJECTING  ----------
"TOV_DE.exe"+5BBB23: 83 B9 58 1E 00 00 00           -  cmp dword ptr [rcx+00001E58],00
"TOV_DE.exe"+5BBB2A: 74 07                          -  je TOV_DE.exe+5BBB33
"TOV_DE.exe"+5BBB2C: BA 08 00 00 00                 -  mov edx,00000008
"TOV_DE.exe"+5BBB31: EB 42                          -  jmp TOV_DE.exe+5BBB75
"TOV_DE.exe"+5BBB33: 83 B9 40 0B 00 00 00           -  cmp dword ptr [rcx+00000B40],00
"TOV_DE.exe"+5BBB3A: 74 07                          -  je TOV_DE.exe+5BBB43
"TOV_DE.exe"+5BBB3C: BA 04 00 00 00                 -  mov edx,00000004
"TOV_DE.exe"+5BBB41: EB 32                          -  jmp TOV_DE.exe+5BBB75
"TOV_DE.exe"+5BBB43: 83 B9 3C 0B 00 00 00           -  cmp dword ptr [rcx+00000B3C],00
"TOV_DE.exe"+5BBB4A: 74 07                          -  je TOV_DE.exe+5BBB53
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3313</ID>
                  <Description>"Infinite Overlimit Duration"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : TOV_DE.exe
  Version: 
  Date   : 2019-01-13
  Author : Zach

  This script does blah blah blah
}

define(address,"TOV_DE.exe"+5CA2EE)
define(bytes,F3 0F 11 89 70 40 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000,"TOV_DE.exe"+5CA2EE)

label(code)
label(return)

newmem:

code:
  mov [rcx+00004070],(float)100
  jmp return

address:
  jmp newmem
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rcx+00004070],xmm1

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "TOV_DE.exe"+5CA2EE

"TOV_DE.exe"+5CA2D9: CC                             -  int 3 
"TOV_DE.exe"+5CA2DA: CC                             -  int 3 
"TOV_DE.exe"+5CA2DB: CC                             -  int 3 
"TOV_DE.exe"+5CA2DC: CC                             -  int 3 
"TOV_DE.exe"+5CA2DD: CC                             -  int 3 
"TOV_DE.exe"+5CA2DE: CC                             -  int 3 
"TOV_DE.exe"+5CA2DF: CC                             -  int 3 
"TOV_DE.exe"+5CA2E0: F3 0F 58 89 70 40 00 00        -  addss xmm1,[rcx+00004070]
"TOV_DE.exe"+5CA2E8: 0F 57 C0                       -  xorps xmm0,xmm0
"TOV_DE.exe"+5CA2EB: 0F 2F C1                       -  comiss xmm0,xmm1
// ---------- INJECTING HERE ----------
"TOV_DE.exe"+5CA2EE: F3 0F 11 89 70 40 00 00        -  movss [rcx+00004070],xmm1
// ---------- DONE INJECTING  ----------
"TOV_DE.exe"+5CA2F6: 76 0A                          -  jna TOV_DE.exe+5CA302
"TOV_DE.exe"+5CA2F8: C7 81 70 40 00 00 00 00 00 00  -  mov [rcx+00004070],00000000
"TOV_DE.exe"+5CA302: F3 0F 10 81 70 40 00 00        -  movss xmm0,[rcx+00004070]
"TOV_DE.exe"+5CA30A: 0F 2F 05 17 3E 65 00           -  comiss xmm0,[TOV_DE.exe+C1E128]
"TOV_DE.exe"+5CA311: 76 0A                          -  jna TOV_DE.exe+5CA31D
"TOV_DE.exe"+5CA313: C7 81 70 40 00 00 00 00 C8 42  -  mov [rcx+00004070],42C80000
"TOV_DE.exe"+5CA31D: C3                             -  ret 
"TOV_DE.exe"+5CA31E: CC                             -  int 3 
"TOV_DE.exe"+5CA31F: CC                             -  int 3 
"TOV_DE.exe"+5CA320: CC                             -  int 3 
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3380</ID>
                  <Description>"Instant Escape"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//Geo was here

[ENABLE]

aobscanmodule(Instant_Escape,TOV_DE.exe,45 84 F6 74 * B9 * * * * E8 * * * * F3)

Instant_Escape:
  db EB 03

registersymbol(Instant_Escape)

aobscanmodule(Instant_Escape_2,TOV_DE.exe,F3 0F 59 05 * * * * F3 0F 59 F0 40 84)

Instant_Escape_2:
  db EB 06

registersymbol(Instant_Escape_2)

[DISABLE]

Instant_Escape:
  db 45 84

unregistersymbol(Instant_Escape)

Instant_Escape_2:
  db F3 0F

unregistersymbol(Instant_Escape_2)
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>3381</ID>
                  <Description>"Instant Cast Time"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>//Geo was here

[ENABLE]

aobscanmodule(Instant_Cast,TOV_DE.exe,41 8B 56 * 48 8B CD E8 * * * * 48 8B CD 45 39 66 * 74)

Instant_Cast:
  db EB 02

Instant_Cast+13:
  db EB

registersymbol(Instant_Cast)

[DISABLE]

Instant_Cast:
  db 41 8B

Instant_Cast+13:
  db 74

unregistersymbol(Instant_Cast)
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>500</ID>
              <Description>"Pointers"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>501</ID>
                  <Description>"Gald"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>TOV_DE.exe+1178E00+30</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>3553</ID>
                  <Description>"Grade"</Description>
                  <VariableType>Float</VariableType>
                  <Address>TOV_DE.exe+117C7D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>4815</ID>
                  <Description>"Fake Gald"</Description>
                  <VariableType>Byte</VariableType>
                  <Address>TOV_DE.exe+117A6B8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>78914</ID>
                  <Description>"Repede: Succesful 'Thievery'"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>TOV_DE.exe+1199AE8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>28</ID>
                  <Description>"[ Tools ] (Original By Exeter)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

TOV_DE.exe + 1178E3C:
InventoryBasePtr:

registersymbol(InventoryBasePtr)

[DISABLE]

unregistersymbol(InventoryBasePtr)
			
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>29</ID>
                      <Description>"Apple Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>32</ID>
                      <Description>"Lemon Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+4</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>33</ID>
                      <Description>"Orange Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+8</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>35</ID>
                      <Description>"Pineapple Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>36</ID>
                      <Description>"Melange Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+10</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>37</ID>
                      <Description>"Miracle Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+14</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>38</ID>
                      <Description>"Specific"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+18</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>39</ID>
                      <Description>"Treat"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+1C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>40</ID>
                      <Description>"Special Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+20</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>41</ID>
                      <Description>"Lottery Gel"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+24</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>42</ID>
                      <Description>"Poison Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+28</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>43</ID>
                      <Description>"Paralysis Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+2C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>44</ID>
                      <Description>"Stone Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+30</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>45</ID>
                      <Description>"Seal Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+34</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>46</ID>
                      <Description>"Weak Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+38</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>47</ID>
                      <Description>"Mind Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+3C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>48</ID>
                      <Description>"Life Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+40</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>49</ID>
                      <Description>"Cure Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+44</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>50</ID>
                      <Description>"Dinei Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+48</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>51</ID>
                      <Description>"Panacea Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+4C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>52</ID>
                      <Description>"Holy Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+50</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>53</ID>
                      <Description>"Dark Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+54</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>54</ID>
                      <Description>"Syrup Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+58</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>55</ID>
                      <Description>"Nectar Bottle"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+5C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>57</ID>
                      <Description>"Sage"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+64</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>58</ID>
                      <Description>"Red Sage"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+68</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>59</ID>
                      <Description>"Savory"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+6C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>60</ID>
                      <Description>"Red Savory"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+70</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>61</ID>
                      <Description>"Lavender"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+74</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>62</ID>
                      <Description>"Red Lavender"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+78</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>63</ID>
                      <Description>"Verbena"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+7C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>64</ID>
                      <Description>"Red Verbena"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+80</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>65</ID>
                      <Description>"Chamomile"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+84</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>66</ID>
                      <Description>"Red Chamomile"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+88</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>67</ID>
                      <Description>"Basil"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+8C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>68</ID>
                      <Description>"Red Basil"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+90</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>69</ID>
                      <Description>"Saffron"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+94</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>70</ID>
                      <Description>"Red Saffron"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+98</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>31</ID>
                      <Description>"Magic Lens"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+9C</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>72</ID>
                      <Description>"All-Divide"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+A0</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>73</ID>
                      <Description>"Hourglass"</Description>
                      <VariableType>Byte</VariableType>
                      <Address>InventoryBasePtr+A4</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
